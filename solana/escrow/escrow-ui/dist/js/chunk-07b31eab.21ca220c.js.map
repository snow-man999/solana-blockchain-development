{"version":3,"sources":["webpack:///./src/util/takeTrade.ts","webpack:///./src/PAP.vue?13d9","webpack:///./src/PAP.vue","webpack:///./src/PAP.vue?21e9"],"names":["connection","Connection","takeTrade","async","privateKeyByteArray","escrowAccountAddressString","takerXTokenAccountAddressString","takerYTokenAccountAddressString","takerExpectedXTokenAmount","programIdString","takerAccount","Account","split","map","s","parseInt","escrowAccountPubkey","PublicKey","takerXTokenAccountPubkey","takerYTokenAccountPubkey","programId","encodedEscrowState","getAccountInfo","data","err","Error","decodedEscrowLayout","ESCROW_ACCOUNT_DATA_LAYOUT","decode","escrowState","isInitialized","initializerAccountPubkey","initializerPubkey","XTokenTempAccountPubkey","initializerTempTokenAccountPubkey","initializerYTokenAccount","initializerReceivingTokenAccountPubkey","expectedAmount","BN","PDA","findProgramAddress","Buffer","from","exchangeInstruction","TransactionInstruction","Uint8Array","of","toArray","keys","pubkey","publicKey","isSigner","isWritable","TOKEN_PROGRAM_ID","sendTransaction","Transaction","add","skipPreflight","preflightCommitment","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","key","style","_hoisted_18","_hoisted_19","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createElementVNode","for","_withDirectives","type","id","$event","formState","privateKey","placeholder","disabled","loading","_vModelText","takerXAccAddress","takerYAccAddress","escrowAccAddress","XTokenExpectedAmount","min","value","onClick","args","resetUI","onTakeTrade","isFormValid","_createCommentVNode","errorMessage","_toDisplayString","successMessage","defineComponent","setup","reactive","ref","computed","trim","message","String","__exports__"],"mappings":"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","file":"js/chunk-07b31eab.21ca220c.js","sourcesContent":["import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\r\nimport { Account, Connection, PublicKey, Transaction, TransactionInstruction } from \"@solana/web3.js\";\r\nimport BN from \"bn.js\";\r\nimport { ESCROW_ACCOUNT_DATA_LAYOUT, EscrowLayout } from \"./layout\"; \r\n\r\nconst connection = new Connection(\"http://localhost:8899\", 'singleGossip');\r\n\r\nexport const takeTrade = async (\r\n    privateKeyByteArray: string,\r\n    escrowAccountAddressString: string,\r\n    takerXTokenAccountAddressString: string,\r\n    takerYTokenAccountAddressString: string,\r\n    takerExpectedXTokenAmount: number,\r\n    programIdString: string,\r\n) => {\r\n    const takerAccount = new Account(privateKeyByteArray.split(',').map(s => parseInt(s)));\r\n    const escrowAccountPubkey = new PublicKey(escrowAccountAddressString);\r\n    const takerXTokenAccountPubkey = new PublicKey(takerXTokenAccountAddressString);\r\n    const takerYTokenAccountPubkey = new PublicKey(takerYTokenAccountAddressString);\r\n    const programId = new PublicKey(programIdString);\r\n\r\n    let encodedEscrowState;\r\n    try {\r\n        encodedEscrowState = (await connection.getAccountInfo(escrowAccountPubkey, 'singleGossip'))!.data;\r\n    } catch (err) {\r\n        throw new Error(\"Could not find escrow at given address!\")\r\n    }\r\n    const decodedEscrowLayout = ESCROW_ACCOUNT_DATA_LAYOUT.decode(encodedEscrowState) as EscrowLayout;\r\n    const escrowState =  {\r\n        escrowAccountPubkey: escrowAccountPubkey,\r\n        isInitialized: !!decodedEscrowLayout.isInitialized,\r\n        initializerAccountPubkey: new PublicKey(decodedEscrowLayout.initializerPubkey),\r\n        XTokenTempAccountPubkey: new PublicKey(decodedEscrowLayout.initializerTempTokenAccountPubkey),\r\n        initializerYTokenAccount: new PublicKey(decodedEscrowLayout.initializerReceivingTokenAccountPubkey),\r\n        expectedAmount: new BN(decodedEscrowLayout.expectedAmount, 10, \"le\")\r\n    };\r\n\r\n    const PDA = await PublicKey.findProgramAddress([Buffer.from(\"escrow\")], programId);\r\n\r\n    const exchangeInstruction = new TransactionInstruction({\r\n        programId,\r\n        data: Buffer.from(Uint8Array.of(1, ...new BN(takerExpectedXTokenAmount).toArray(\"le\", 8))),\r\n        keys: [\r\n            { pubkey: takerAccount.publicKey, isSigner: true, isWritable: false },\r\n            { pubkey: takerYTokenAccountPubkey, isSigner: false, isWritable: true },\r\n            { pubkey: takerXTokenAccountPubkey, isSigner: false, isWritable: true },\r\n            { pubkey: escrowState.XTokenTempAccountPubkey, isSigner: false, isWritable: true},\r\n            { pubkey: escrowState.initializerAccountPubkey, isSigner: false, isWritable: true},\r\n            { pubkey: escrowState.initializerYTokenAccount, isSigner: false, isWritable: true},\r\n            { pubkey: escrowAccountPubkey, isSigner: false, isWritable: true },\r\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false},\r\n            { pubkey: PDA[0], isSigner: false, isWritable: false}\r\n        ] \r\n    })    \r\n\r\n    await connection.sendTransaction(new Transaction().add(exchangeInstruction), [takerAccount], {skipPreflight: false, preflightCommitment: 'singleGossip'});\r\n}\r\n","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"bg\" }\nconst _hoisted_2 = { class: \"mb-1\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = { class: \"mb-1\" }\nconst _hoisted_5 = [\"disabled\"]\nconst _hoisted_6 = { class: \"mb-1\" }\nconst _hoisted_7 = [\"disabled\"]\nconst _hoisted_8 = { class: \"mb-1\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = { class: \"mb-1\" }\nconst _hoisted_11 = [\"disabled\"]\nconst _hoisted_12 = { class: \"mb-1\" }\nconst _hoisted_13 = [\"disabled\"]\nconst _hoisted_14 = { class: \"mb-1\" }\nconst _hoisted_15 = [\"disabled\"]\nconst _hoisted_16 = [\"disabled\"]\nconst _hoisted_17 = {\n  key: 0,\n  style: {\"margin-left\":\"10px\"}\n}\nconst _hoisted_18 = {\n  key: 0,\n  class: \"mb-1 error-message\"\n}\nconst _hoisted_19 = {\n  key: 1,\n  class: \"mb-1 success-message\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[14] || (_cache[14] = _createElementVNode(\"p\", { class: \"title\" }, \"Escrow UI - Bob's Trade Interface\", -1)),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[8] || (_cache[8] = _createElementVNode(\"label\", { for: \"private-key\" }, \"Throwaway private key (as byte array from sollet.io, without the '[]')\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"private-key\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.formState.privateKey) = $event)),\n          placeholder: \"e.g. 1,2,3,...\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_3), [\n          [_vModelText, _ctx.formState.privateKey]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _cache[9] || (_cache[9] = _createElementVNode(\"label\", { for: \"program-id\" }, \"Program id\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"program-id\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.formState.programId) = $event)),\n          placeholder: \"Program ID\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_5), [\n          [_vModelText, _ctx.formState.programId]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _cache[10] || (_cache[10] = _createElementVNode(\"label\", { for: \"taker-x-acc\" }, \"Bob's X token account pubkey\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"taker-x-acc\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.formState.takerXAccAddress) = $event)),\n          placeholder: \"X Token Account Pubkey\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_7), [\n          [_vModelText, _ctx.formState.takerXAccAddress]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _cache[11] || (_cache[11] = _createElementVNode(\"label\", { for: \"taker-y-acc\" }, \"Bob's Y token account pubkey\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"taker-y-acc\",\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.formState.takerYAccAddress) = $event)),\n          placeholder: \"Y Token Account Pubkey\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_9), [\n          [_vModelText, _ctx.formState.takerYAccAddress]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_10, [\n        _cache[12] || (_cache[12] = _createElementVNode(\"label\", { for: \"escrow-acc\" }, \"Escrow account pubkey\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"text\",\n          id: \"escrow-acc\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.formState.escrowAccAddress) = $event)),\n          placeholder: \"Escrow Account Pubkey\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_11), [\n          [_vModelText, _ctx.formState.escrowAccAddress]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_12, [\n        _cache[13] || (_cache[13] = _createElementVNode(\"label\", { for: \"x-token-amount\" }, \"Amount X tokens Bob wants\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"display-block\",\n          type: \"number\",\n          id: \"x-token-amount\",\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.formState.XTokenExpectedAmount) = $event)),\n          placeholder: \"Amount expected\",\n          min: \"0\",\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_13), [\n          [_vModelText, _ctx.formState.XTokenExpectedAmount]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_14, [\n        _createElementVNode(\"input\", {\n          style: {\"margin-right\":\"5px\"},\n          class: \"cursor-pointer border-none bg-btn normal-font-size\",\n          type: \"button\",\n          value: \"Reset UI\",\n          onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.resetUI && _ctx.resetUI(...args))),\n          disabled: _ctx.loading\n        }, null, 8, _hoisted_15),\n        _createElementVNode(\"input\", {\n          class: \"cursor-pointer border-none bg-btn normal-font-size\",\n          type: \"button\",\n          value: \"Take trade\",\n          onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onTakeTrade && _ctx.onTakeTrade(...args))),\n          disabled: !_ctx.isFormValid || _ctx.loading\n        }, null, 8, _hoisted_16),\n        (_ctx.loading)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, \"Processing trade...\"))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (_ctx.errorMessage)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString(_ctx.errorMessage), 1))\n        : _createCommentVNode(\"\", true),\n      (_ctx.successMessage)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _toDisplayString(_ctx.successMessage), 1))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}"," \r\nimport { defineComponent, reactive, computed, ref } from 'vue';\r\nimport { takeTrade } from \"./util/takeTrade\";\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        const formState = reactive({\r\n            privateKey: \"\",\r\n            programId: \"\",\r\n            takerXAccAddress: \"\",\r\n            takerYAccAddress: \"\",\r\n            escrowAccAddress: \"\",\r\n            XTokenExpectedAmount: 0\r\n        })\r\n\r\n        const loading = ref(false);\r\n        const errorMessage = ref(\"\");\r\n        const successMessage = ref(\"\");\r\n\r\n        const isFormValid = computed(() => {\r\n            return (\r\n                formState.privateKey.trim() !== \"\" &&\r\n                formState.programId.trim() !== \"\" &&\r\n                formState.takerXAccAddress.trim() !== \"\" &&\r\n                formState.takerYAccAddress.trim() !== \"\" &&\r\n                formState.escrowAccAddress.trim() !== \"\" &&\r\n                formState.XTokenExpectedAmount > 0\r\n            );\r\n        });\r\n\r\n        const resetUI = () => {\r\n            formState.privateKey = \"\";\r\n            formState.programId = \"\";\r\n            formState.takerXAccAddress = \"\";\r\n            formState.takerYAccAddress = \"\";\r\n            formState.escrowAccAddress = \"\";\r\n            formState.XTokenExpectedAmount = 0;\r\n            errorMessage.value = \"\";\r\n            successMessage.value = \"\";\r\n        }\r\n        \r\n        const onTakeTrade = async () => {\r\n            if (!isFormValid.value) {\r\n                errorMessage.value = \"Please fill in all fields with valid values.\";\r\n                return;\r\n            }\r\n            \r\n            loading.value = true;\r\n            errorMessage.value = \"\";\r\n            successMessage.value = \"\";\r\n            \r\n            try {\r\n                await takeTrade(\r\n                    formState.privateKey,\r\n                    formState.escrowAccAddress,\r\n                    formState.takerXAccAddress,\r\n                    formState.takerYAccAddress,\r\n                    formState.XTokenExpectedAmount,\r\n                    formState.programId\r\n                );\r\n                successMessage.value = \"Success! Alice and Bob have traded their tokens and all temporary accounts have been closed\";\r\n            } catch (err) {\r\n                if (err instanceof Error) {\r\n                    errorMessage.value = err.message;\r\n                } else {\r\n                    errorMessage.value = String(err);\r\n                }\r\n            } finally {\r\n                loading.value = false;\r\n            }\r\n        }\r\n\r\n        return { \r\n            formState, \r\n            resetUI, \r\n            onTakeTrade, \r\n            loading, \r\n            errorMessage, \r\n            successMessage, \r\n            isFormValid \r\n        };\r\n    }\r\n})\r\n","import { render } from \"./PAP.vue?vue&type=template&id=02c69ced&ts=true\"\nimport script from \"./PAP.vue?vue&type=script&lang=ts\"\nexport * from \"./PAP.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"E:\\\\git\\\\solana-blockchain-development\\\\solana\\\\escrow\\\\escrow-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}