{"version":3,"sources":["webpack:///src/sha3.ts","webpack:///./node_modules/bs58/index.js","webpack:///./node_modules/core-js/internals/to-index.js","webpack:///./node_modules/core-js/internals/to-offset.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///./node_modules/core-js/modules/es.typed-array.find-last-index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/internals/array-buffer-not-detached.js","webpack:///./node_modules/core-js/modules/es.array-buffer.transfer.js","webpack:///./node_modules/core-js/modules/es.typed-array.to-sorted.js","webpack:///./node_modules/core-js/internals/get-built-in-node-module.js","webpack:///./node_modules/core-js/modules/es.array-buffer.detached.js","webpack:///./node_modules/core-js/internals/detach-transferable.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///../src/bytes.ts","webpack:///../src/codec.ts","webpack:///../src/combine-codec.ts","webpack:///../src/add-codec-sentinel.ts","webpack:///../src/assertions.ts","webpack:///../src/add-codec-size-prefix.ts","webpack:///../src/fix-codec-size.ts","webpack:///../src/offset-codec.ts","webpack:///../src/resize-codec.ts","webpack:///../src/pad-codec.ts","webpack:///../src/reverse-codec.ts","webpack:///../src/transform-codec.ts","webpack:///./node_modules/core-js/modules/es.typed-array.set.js","webpack:///./node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js","webpack:///./node_modules/core-js/internals/array-buffer-transfer.js","webpack:///./node_modules/base-x/src/index.js","webpack:///../src/abstract/modular.ts","webpack:///./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack:///./node_modules/core-js/modules/es.typed-array.with.js","webpack:///./node_modules/jayson/lib/client/browser/index.js","webpack:///src/_md.ts","webpack:///src/_u64.ts","webpack:///../src/codes.ts","webpack:///../src/context.ts","webpack:///../src/message-formatter.ts","webpack:///../src/error.ts","webpack:///../src/stack-trace.ts","webpack:///../src/rpc-enum-errors.ts","webpack:///../src/instruction-error.ts","webpack:///../src/transaction-error.ts","webpack:///../src/json-rpc-error.ts","webpack:///src/utils.ts","webpack:///(webpack)/buildin/module.js","webpack:///../src/utils/ed25519.ts","webpack:///../src/utils/to-buffer.ts","webpack:///../src/utils/borsh-schema.ts","webpack:///../src/publickey.ts","webpack:///../src/account.ts","webpack:///../src/bpf-loader-deprecated.ts","webpack:///../src/transaction/constants.ts","webpack:///../src/transaction/expiry-custom-errors.ts","webpack:///../src/message/account-keys.ts","webpack:///../src/layout.ts","webpack:///../src/utils/shortvec-encoding.ts","webpack:///../src/utils/assert.ts","webpack:///../src/message/compiled-keys.ts","webpack:///../src/utils/guarded-array-utils.ts","webpack:///../src/message/legacy.ts","webpack:///../src/message/v0.ts","webpack:///../src/transaction/legacy.ts","webpack:///../src/timing.ts","webpack:///../src/sysvar.ts","webpack:///../src/errors.ts","webpack:///../src/utils/send-and-confirm-transaction.ts","webpack:///../src/utils/sleep.ts","webpack:///../src/instruction.ts","webpack:///../src/fee-calculator.ts","webpack:///../src/nonce-account.ts","webpack:///../src/utils/bigint.ts","webpack:///../src/programs/system.ts","webpack:///../src/loader.ts","webpack:///../src/bpf-loader.ts","webpack:///../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","webpack:///../src/epoch-schedule.ts","webpack:///../src/__forks__/browser/fetch-impl.ts","webpack:///../src/rpc-websocket.ts","webpack:///../src/account-data.ts","webpack:///../src/programs/address-lookup-table/state.ts","webpack:///../src/utils/makeWebsocketUrl.ts","webpack:///../src/connection.ts","webpack:///../src/keypair.ts","webpack:///../src/programs/address-lookup-table/index.ts","webpack:///../src/programs/compute-budget.ts","webpack:///../src/programs/ed25519.ts","webpack:///../src/utils/secp256k1.ts","webpack:///../src/programs/secp256k1.ts","webpack:///../src/programs/stake.ts","webpack:///../src/programs/vote.ts","webpack:///../src/validator-info.ts","webpack:///../src/vote-account.ts","webpack:///../src/abstract/edwards.ts","webpack:///./node_modules/core-js/modules/es.typed-array.to-reversed.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///../src/common.ts","webpack:///../src/utils.ts","webpack:///../src/f32.ts","webpack:///../src/f64.ts","webpack:///../src/i128.ts","webpack:///../src/i16.ts","webpack:///../src/i32.ts","webpack:///../src/i64.ts","webpack:///../src/i8.ts","webpack:///../src/short-u16.ts","webpack:///../src/u128.ts","webpack:///../src/u16.ts","webpack:///../src/u32.ts","webpack:///../src/u64.ts","webpack:///../src/u8.ts","webpack:///./node_modules/core-js/internals/array-buffer-is-detached.js","webpack:///src/_shortw_utils.ts","webpack:///../src/struct.ts","webpack:///../src/structs/utilities.ts","webpack:///../src/structs/types.ts","webpack:///../src/structs/coercions.ts","webpack:///../src/structs/refinements.ts","webpack:///./node_modules/safe-buffer/index.js","webpack:///src/sha2.ts","webpack:///./node_modules/@solana/buffer-layout/lib/Layout.js","webpack:///./node_modules/buffer-layout/lib/Layout.js","webpack:///./node_modules/core-js/modules/es.typed-array.at.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/core-js/modules/es.iterator.to-array.js","webpack:///./node_modules/core-js/modules/es.typed-array.find-last.js","webpack:///./node_modules/core-js/internals/array-iteration-from-last.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./src/util/layout.ts","webpack:///../src/lib/client/websocket.browser.ts","webpack:///../src/lib/utils.ts","webpack:///../src/lib/client.ts","webpack:///../src/index.browser.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../src/abstract/curve.ts","webpack:///src/ed25519.ts","webpack:///../src/abstract/hash-to-curve.ts","webpack:///../src/abstract/weierstrass.ts","webpack:///./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","webpack:///./node_modules/core-js/internals/array-buffer-byte-length.js","webpack:///./node_modules/core-js/modules/web.dom-exception.stack.js","webpack:///./node_modules/core-js/internals/is-big-int-array.js","webpack:///./node_modules/node-libs-browser/node_modules/isarray/index.js","webpack:///./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack:///./node_modules/core-js/internals/dom-exception-constants.js","webpack:///src/sha256.ts","webpack:///src/crypto.ts","webpack:///./node_modules/core-js/internals/array-with.js","webpack:///../../src/constants.ts","webpack:///./node_modules/jayson/lib/generateRequest.js","webpack:///./node_modules/core-js/internals/structured-clone-proper-transfer.js","webpack:///../src/abstract/montgomery.ts","webpack:///./node_modules/core-js/internals/array-to-reversed.js","webpack:///./node_modules/core-js/internals/array-from-constructor-and-list.js","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/v1.js","webpack:///./node_modules/uuid/dist/esm-browser/parse.js","webpack:///./node_modules/uuid/dist/esm-browser/v35.js","webpack:///./node_modules/uuid/dist/esm-browser/md5.js","webpack:///./node_modules/uuid/dist/esm-browser/v3.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/uuid/dist/esm-browser/sha1.js","webpack:///./node_modules/uuid/dist/esm-browser/v5.js","webpack:///./node_modules/uuid/dist/esm-browser/nil.js","webpack:///./node_modules/uuid/dist/esm-browser/version.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///src/hmac.ts","webpack:///./node_modules/core-js/internals/array-buffer-view-core.js","webpack:///./node_modules/core-js/internals/to-big-int.js","webpack:///./node_modules/core-js/modules/es.array.reduce-right.js","webpack:///./node_modules/core-js/internals/to-positive-integer.js","webpack:///./node_modules/borsh/lib/index.js","webpack:///src/secp256k1.ts"],"names":["exports","keccakP","_u64_ts_1","require","utils_ts_1","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","x","y","push","t","j","IOTAS","split","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","h","l","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","rounds","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","clean","Keccak","Hash","constructor","blockLen","suffix","outputLen","enableXOF","pos","posOut","finished","destroyed","anumber","Error","state","Uint8Array","state32","u32","clone","_cloneInto","keccak","swap32IfBE","update","data","aexists","toBytes","abytes","len","length","take","Math","min","i","finish","writeInto","out","bufferOut","set","subarray","xofInto","xof","bytes","digestInto","aoutput","destroy","digest","to","gen","createHasher","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","createXOFer","opts","undefined","dkLen","shake128","shake256","basex","ALPHABET","module","toIntegerOrInfinity","toLength","$RangeError","RangeError","it","number","toPositiveInteger","BYTES","offset","base64","ieee754","isArray","typedArraySupport","arr","__proto__","prototype","foo","byteLength","e","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","buffer","isnan","type","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","concat","list","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst","ArrayBufferViewCore","$findLastIndex","findLastIndex","aTypedArray","exportTypedArrayMethod","predicate","lookup","revLookup","Arr","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isDetached","$TypeError","$","$transfer","proto","transfer","uncurryThis","aCallable","arrayFromConstructorAndList","getTypedArrayConstructor","sort","TypedArrayPrototype","compareFn","O","A","globalThis","IS_NODE","name","process","getBuiltinModule","error","Function","DESCRIPTORS","defineBuiltInAccessor","ArrayBufferPrototype","get","WorkerThreads","channel","$detach","getBuiltInNodeModule","PROPER_STRUCTURED_CLONE_TRANSFER","structuredClone","$ArrayBuffer","$MessageChannel","MessageChannel","detach","transferable","port1","postMessage","assert","msg","inherits","ctor","superCtor","super_","TempCtor","BN","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","move","dest","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","toBitArray","bitLength","bit","wbit","smallMulTo","self","k","ncarry","rword","maxJ","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","mergeBytes","byteArrays","nonEmptyByteArrays","filter","totalLength","reduce","result","forEach","padBytes","paddedBytes","fixBytes","containsBytes","every","getEncodedSize","encoder","fixedSize","getSizeFromValue","createEncoder","freeze","encode","createDecoder","decoder","decode","createCodec","codec","isFixedSize","assertIsFixedSize","errors","SolanaError","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH","isVariableSize","assertIsVariableSize","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH","combineCodec","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH","decoderFixedSize","encoderFixedSize","maxSize","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH","decoderMaxSize","encoderMaxSize","addEncoderSentinel","sentinel","encoderBytes","findSentinelIndex","SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL","encodedBytes","hexEncodedBytes","hexBytes","hexSentinel","addDecoderSentinel","candidateBytes","sentinelIndex","SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES","decodedBytes","hexDecodedBytes","preSentinelBytes","addCodecSentinel","findIndex","byte","padStart","assertByteArrayIsNotEmptyForCodec","codecDescription","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY","assertByteArrayHasEnoughBytesForCodec","expected","bytesLength","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH","assertByteArrayOffsetIsNotOutOfRange","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE","addEncoderSizePrefix","prefix","_prefix$maxSize","_encoder$maxSize","prefixMaxSize","encoderSize","addDecoderSizePrefix","_prefix$maxSize2","_decoder$maxSize","bigintSize","decoderOffset","addCodecSizePrefix","fixEncoderSize","fixedBytes","variableByteArray","fixedByteArray","fixDecoderSize","fixCodecSize","offsetEncoder","config","preOffset","wrapBytes","modulo","newPreOffset","postOffset","newPostOffset","offsetDecoder","offsetCodec","dividend","divisor","resizeEncoder","resize","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH","newSize","resizeDecoder","resizeCodec","padLeftEncoder","padRightEncoder","padLeftDecoder","padRightDecoder","padLeftCodec","padRightCodec","copySourceToTargetInReverse","source","target_WILL_MUTATE","sourceOffset","sourceLength","targetOffset","leftValue","reverseEncoder","newOffset","reverseDecoder","reversedBytes","reverseCodec","transformEncoder","unmap","transformDecoder","map","transformCodec","lengthOfArrayLike","toOffset","toIndexedObject","fails","Int8Array","Int8ArrayPrototype","$set","WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS","Uint8ClampedArray","0","TO_OBJECT_BUG","NATIVE_ARRAY_BUFFER_VIEWS","arrayLike","transferToFixedLength","uncurryThisAccessor","toIndex","notDetached","arrayBufferByteLength","detachTransferable","DataView","DataViewPrototype","isResizable","maxByteLength","getInt8","setInt8","arrayBuffer","newLength","preserveResizability","newBuffer","newByteLength","fixedLength","options","copyLength","_Buffer","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","charCode","it3","it4","vch","pow2","invert","tonelliShanks","FpSqrt","validateField","FpPow","FpInvertBatch","FpDiv","FpLegendre","FpIsSquare","nLength","Field","FpSqrtOdd","FpSqrtEven","hashToPrivateScalar","getFieldBytesLength","getMinHashLength","mapHashToField","_3n","_4n","_5n","_8n","_9n","_16n","power","v","assertIsSquare","Fp","root","eql","sqrt3mod4","p1div4","ORDER","sqrt5mod8","p5div8","n2","nv","ONE","sqrt9mod16","P","Fp_","tn","c1","c2","c3","c4","tv1","tv2","tv3","tv4","e1","e2","cmov","e3","Q","S","Z","_Fp","cc","Q1div2","is0","M","ZERO","t_tmp","exponent","isNegativeLE","FIELD_FIELDS","field","initial","MASK","BITS","_validateObject","d","nums","passZero","inverted","multipliedAcc","invertedAcc","reduceRight","lhs","rhs","p1mod2","powered","yes","zero","no","nBitLength","_nBitLength","nByteLength","bitLenOrOpts","isLE","_nbitLength","_sqrt","modFromBytes","allowedLengths","_opts","sqrtP","f","bitMask","create","isValid","isValidNot0","sqrN","addN","subN","mulN","numberToBytesLE","numberToBytesBE","fromBytes","skipValidation","padded","scalar","bytesToNumberLE","bytesToNumberBE","invertBatch","lst","elm","hash","groupOrder","ensureBytes","hashLen","minLen","fieldOrder","key","fieldLen","reduced","arrayWith","isBigIntArray","toBigInt","PROPER_ORDER","valueOf","THROW_ON_NEGATIVE_FRACTIONAL_INDEX","relativeIndex","actualValue","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","version","notificationIdNull","request","method","params","id","callback","isBatch","isRaw","hasCallback","err","message","JSON","stringify","response","_parseResponse","responseText","parse","isError","isNotError","setBigUint64","Chi","Maj","view","_32n","_u32_max","wh","wl","setUint32","HashMD","padOffset","createView","dataView","roundClean","oview","SHA256_IV","SHA224_IV","SHA384_IV","SHA512_IV","fromBig","U32_MASK64","le","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","default","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED","SOLANA_ERROR__INVALID_NONCE","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE","SOLANA_ERROR__MALFORMED_BIGINT_STRING","SOLANA_ERROR__MALFORMED_NUMBER_STRING","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE","SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR","SOLANA_ERROR__JSON_RPC__PARSE_ERROR","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","SOLANA_ERROR__JSON_RPC__SCAN_ERROR","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER","SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY","SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING","SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE","SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION","SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES","SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH","SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT","SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT","SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT","SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE","SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT","SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE","SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_CONSTANT","SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE","SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS","SOLANA_ERROR__RPC__INTEGER_OVERFLOW","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR","SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT","SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE","SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED","encodeValue","commaSeparatedValues","encodeURIComponent","getPrototypeOf","encodeObjectContextEntry","encodeContextObject","context","searchParamsString","entries","btoa","getErrorMessage","decodingAdviceMessage","keys","isSolanaError","isSolanaError2","__code","contextAndErrorOptions","errorOptions","cause","contextRest","super","_defineProperty","safeCaptureStackTrace","args","captureStackTrace","getSolanaErrorFromRpcError","errorCodeBaseOffset","getErrorContext","orderedErrorNames","rpcEnumError","constructorOpt","rpcErrorName","rpcErrorContext","codeOffset","errorCode","errorContext","ORDERED_ERROR_NAMES","getSolanaErrorFromInstructionError","instructionError","numberIndex","errorName","instructionErrorContext","encodedData","ORDERED_ERROR_NAMES2","getSolanaErrorFromTransactionError","transactionError","InstructionError","transactionErrorContext","accountIndex","account_index","getSolanaErrorFromJsonRpcError","putativeErrorResponse","isRpcErrorResponse","rawCode","preflightErrorContext","causeObject","__serverMessage","isBytes","ahash","u8","rotr","rotl","byteSwap","byteSwap32","bytesToHex","hexToBytes","asyncLoop","bytesToUtf8","kdfInputToBytes","concatBytes","checkOpts","createOptHasher","randomBytes","crypto_1","isSafeInteger","lengths","instance","checkFinished","arrays","swap8IfBE","byteSwapIfBE","hasHexBuiltin","fromHex","hexes","hex","asciis","_0","_9","F","asciiToBase16","ch","hl","al","ai","n1","char","nextTick","iters","tick","cb","ts","Date","now","TextEncoder","TextDecoder","sum","pad","defaults","merged","assign","hashCons","hashC","crypto","getRandomValues","wrapConstructor","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","abool","_abool2","_abytes2","numberToHexUnpadded","hexToNumber","numberToVarBytesBE","equalBytes","copyBytes","inRange","aInRange","bitLen","bitGet","bitSet","createHmacDrbg","validateObject","isHash","memoized","utils_js_1","utils_js_2","enumerable","title","needsLen","ofLen","got","reverse","expectedLength","ascii","isPosBig","qByteLen","hmacFn","u8n","u8of","of","reset","reseed","seed","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","object","validators","optValidators","checkField","fieldName","isOptional","checkVal","fields","optFields","expectedType","isOpt","notImplemented","fn","WeakMap","computed","webpackPolyfill","deprecate","paths","children","generatePrivateKey","ed25519","utils","randomPrivateKey","generateKeypair","privateScalar","publicKey","getPublicKey","secretKey","isOnCurve","ExtendedPoint","sign","verify","Struct","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Map","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","bs58","toBase58","zeroPad","toStringTag","fromPublicKey","programId","publicKeyBytes","sha256","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","findProgramAddressSync","pubkeyData","pubkey","_PublicKey","kind","Account","_publicKey","_secretKey","secretKeyBuffer","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","rustString","rsl","_decode","bind","_encode","rslShim","chars","span","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","item","elementLayout","layout","decodeLength","elem","encodeLength","rem_len","condition","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","entry","delete","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","_args$","splice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","values","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","compiledInstructions","addressTableLookups","count","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","_compile","valid","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","transactionLogs","cachedLogs","Promise","resolve","reject","getTransaction","then","tx","logMessages","catch","SolanaJSONRPCError","customMessage","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","bigIntLayout","getU64Codec","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","instructionData","newAuthorizedPubkey","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify$1","returnVal","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","fetchImpl","fetch","RpcWebSocketClient","CommonClient","generate_request_id","webSocketFactory","url","rpc","WebSocket","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","_this$underlyingSocke","readyState","notify","_this$underlyingSocke2","decodeData","typeIndex","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","hostish","portWithColon","rest","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","coerce","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","applyDefaultMemcmpEncodingToFilters","filters","_filter$memcmp$encodi","memcmp","createRpcResult","union","jsonrpc","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","validator","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","ParsedInstructionStruct","PartiallyDecodedInstructionStruct","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","costUnits","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","lamportsPerSignature","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","wsEndpoint","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_requestPromises$requ","_buildArgs","requestHash","fastStableStringify","unsafeRes","confirmTransactionInitialTimeout","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","baseSchema","withContext","strategy","rawSignature","decodedSignature","_config$abortSignal","aborted","reason","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","done","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","getLatestBlockhashAndContext","wireMessage","_config$lockedWritabl","lockedWritableAccounts","getRecentBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","maybeFilters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","lookupTableAddress","bumpSeed","getU64Encoder","recentSlot","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","ecdsaSign","msgHash","privKey","secp256k1","toCompactRawBytes","recovery","isValidPrivateKey","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","_Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","rentExemptReserve","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","UpdateValidatorIdentity","Voter","VoteProgram","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","iconUrl","keybaseUsername","edwards","eddsa","twistedEdwards","curve_ts_1","modular_ts_1","isEdValidXY","CURVE","y2","extraOpts","validated","_createCurveFields","FpFnLE","Fn","cofactor","uvRatio","modP","Gx","Gy","acoord","banZero","aextpoint","other","Point","toAffineMemo","iz","X","Y","zz","assertValidMemo","T","X2","Y2","Z2","Z4","aX2","XY","ZT","zip215","normed","lastByte","isXOdd","isLastByteOdd","fromAffine","toAffine","precompute","isLazy","wnaf","createCache","multiply","assertValidity","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","x1y1","E","G","H","X3","Y3","T3","Z3","T1","T2","subtract","cached","normalizeZ","multiplyUnsafe","unsafe","isSmallOrder","isTorsionFree","invertedZ","clearCofactor","points","scalars","pippenger","_setWindowSize","toRawBytes","wNAF","PrimeEdwardsPoint","ep","_bytes","_hex","assertSame","cHash","eddsaOpts","adjustScalarBytes","domain","prehash","mapToCurve","phflag","modN_LE","getPrivateScalar","hashed","head","getExtendedPublicKey","point","pointBytes","hashDomainToScalar","msgs","rs","verifyOpts","sig","SB","RkA","_size","randomSecretKey","keygen","isValidSecretKey","isValidPublicKey","toMontgomery","is25519","toMontgomeryPriv","_eddsa_legacy_opts_to_new","curveOpts","_eddsa_new_output_to_legacy","legacy","EDDSA","arrayToReversed","_typeof","iterator","__esModule","assertNumberIsBetweenForCodec","Endian","Endian2","isLittleEndian","numberEncoderFactory","numberDecoderFactory","toArrayBuffer","bytesOffset","getF32Encoder","setFloat32","getF32Decoder","getFloat32","getF32Codec","getF64Encoder","setFloat64","getF64Decoder","getFloat64","getF64Codec","getI128Encoder","leftOffset","rightOffset","rightMask","setBigInt64","getI128Decoder","getBigInt64","getBigUint64","getI128Codec","getI16Encoder","setInt16","getI16Decoder","getInt16","getI16Codec","getI32Encoder","setInt32","getI32Decoder","getInt32","getI32Codec","getI64Encoder","getI64Decoder","getI64Codec","getI8Encoder","getI8Decoder","getI8Codec","getShortU16Encoder","shortU16Bytes","alignedValue","nextSevenBits","getShortU16Decoder","byteCount","byteIndex","currentByte","getShortU16Codec","getU128Encoder","getU128Decoder","getU128Codec","getU16Encoder","setUint16","getU16Decoder","getUint16","getU16Codec","getU32Encoder","getU32Decoder","getUint32","getU32Codec","getU64Decoder","getU8Encoder","setUint8","getU8Decoder","getUint8","getU8Codec","NATIVE_ARRAY_BUFFER","getHash","createCurve","weierstrass_ts_1","curveDef","defHash","weierstrass","StructError","failure","failures","explanation","path","isIterable","isObject","isNonArrayObject","isPlainObject","print","shiftIterator","toFailure","struct","branch","refinement","toFailures","run","coercer","refiner","props","is","validate","tuples","Structs","isType","schemas","define","deprecated","dynamic","lazy","omit","subschema","partial","isStruct","pick","Element","date","getTime","enums","description","func","Class","integer","isInteger","intersection","constant","Key","Value","never","knowns","Never","unknowns","coerced","regexp","RegExp","first","defaulted","fallback","strict","changed","trimmed","empty","refine","getSize","threshold","exclusive","nonempty","pattern","copyProps","SafeBuffer","_md_ts_1","SHA256_K","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","SHA224","K512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA384","T224_IV","T256_IV","SHA512_224","SHA512_256","sha224","sha512","sha384","sha512_256","sha512_224","s16","s8","nu64be","u48be","u40be","u32be","u24be","u16be","nu64","u48","u40","u24","u16","greedy","Constant","UTF8","CString","Blob","Boolean","BitField","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","UnionDiscriminator","Structure","Sequence","DoubleBE","Double","FloatBE","Float","NearInt64BE","NearInt64","NearUInt64BE","NearUInt64","IntBE","Int","UIntBE","UInt","OffsetLayout","GreedyCount","ExternalLayout","bindConstructorLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","utf8","cstr","unionLayoutDiscriminator","seq","f64be","f64","f32be","f32","ns64be","s48be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","rv","layout_","boundConstructor_","makeDestinationObject","elementSpan","rem","V2E32","divmodInt64","hi32","lo32","roundedInt64","isCount","idx","getSpan","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","vb","fromArray","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","bf","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","srcb","maxSpan","upv","const","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","toPropertyKey","anObject","iterate","getIteratorDirect","real","IS_RECORD","$findLast","findLast","IndexedObject","toObject","createMethod","TYPE","IS_FIND_LAST_INDEX","$this","callbackfn","boundFunction","toPrimitive","uint64","ESCROW_ACCOUNT_DATA_LAYOUT","WebSocketBrowserImpl","EventEmitter","protocols","onopen","emit","onmessage","event","onerror","onclose","send","optionsOrCallback","listener","DefaultDataPack","rest_options","dataPack","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","timeout","ws_opts","promise","resp","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","listeners","Client","negateCt","mulEndoUnsafe","precomputeMSMUnsafe","validateBasic","invertedZs","validateW","W","calcWOpts","scalarBits","windows","maxNumber","shiftBy","calcOffsets","wOpts","wbits","nextN","offsetStart","isNegF","offsetF","validateMSMPoints","validateMSMScalars","pointPrecomputes","pointWindowSizes","getW","assert0","_unsafeLadder","precomputeWindow","precomputes","wo","wNAFUnsafe","getPrecomputes","comp","hasCache","k1","k2","p1","p2","fieldN","plength","slength","buckets","lastBits","resI","sumI","tableSize","chunks","tables","curr","curve","createField","order","_b","edwardsToMontgomeryPub","edwardsToMontgomeryPriv","sha2_js_1","edwards_ts_1","hash_to_curve_ts_1","montgomery_ts_1","ed25519_CURVE_p","ed25519_CURVE","ed25519_pow_2_252_3","_10n","_20n","_40n","_80n","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ED25519_SQRT_M1","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519_domain","ed25519ctx","ed25519ph","x25519","montgomery","powPminus2","ELL2_C1","ELL2_C2","ELL2_C3","map_to_curve_elligator2_curve25519","ELL2_C4","ELL2_J","xd","x1n","gxd","gx1","y11","y12","y1","x2n","y21","y22","gx2","xn","e4","xMn","xMd","yMn","yMd","ELL2_C1_EDWARDS","map_to_curve_elligator2_edwards25519","yn","yd","xd_inv","yd_inv","ed25519_hasher","DST","encodeDST","expand","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W3","ristretto255_map","r1","R1","R2","_RistrettoPoint","ap","u1","u2","u1_2","u2_2","I","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","two","edwardsPub","edwardsPriv","ristretto255","ristretto255_hasher","hashToCurve","xmd","expand_message_xmd","hashToScalar","_DST_scalar","ED25519_TORSION_SUBGROUP","edwardsToMontgomery","RistrettoPoint","encodeToCurve","hashToRistretto255","hash_to_ristretto255","expand_message_xof","hash_to_field","isogenyMap","os2ip","i2osp","anum","strxor","normDST","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","pseudo_random_bytes","log2p","L","len_in_bytes","prb","elm_offset","tv","coeff","clear","u0","optsDst","_splitEndoScalar","_normFnElement","weierstrassN","SWUFpSqrtRatio","mapToCurveSimpleSWU","ecdh","ecdsa","weierstrassPoints","_legacyHelperEquat","hmac_js_1","utils_1","divNearest","den","basis","k1neg","k2neg","MAX_NUM","validateSigFormat","format","validateSigOpts","def","optsn","optName","lowS","DERErr","DER","Err","_tlv","dataLen","lenLen","isLong","lengthBytes","_int","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","ss","CURVE_ORDER","allowInfinityPoint","endo","wrapPrivateKey","beta","basises","getWLengths","assertCompressionIsSupported","pointToBytes","_c","isCompressed","bx","hasEvenY","pprefix","pointFromBytes","publicKeyUncompressed","uncomp","tail","isValidXY","weierstrassEquation","sqrtError","isYOdd","isHeadOdd","encodePoint","decodePoint","x3","_4a3","_27b2","aprjpoint","splitEndoScalarN","finishEndo","endoBeta","k1p","k2p","U1","U2","t0","t1","t2","t3","t4","t5","fake","k1f","k2f","sc","multiplyAndAddUnsafe","_2n_pow_c1_1","_2n_pow_c1","c5","c6","c7","sqrtRatio","tv5","isQR","tvv5","tv6","tv4_inv","publicKeyHasPrefix","ecdhOpts","randomBytes_","isProbPub","getSharedSecret","secretKeyA","publicKeyB","normPrivateKeyToScalar","ecdsaOpts","hmac","bits2int","bits2int_modN","fnBits","defaultSigOpts","extraEntropy","defaultSigOpts_format","isBiggerThanHalfOrder","HALF","validateRS","validateSigLength","sizer","Signature","recid","addRecoveryBit","recoverPublicKey","FIELD_ORDER","rec","hasCofactor","radj","ir","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactHex","ORDER_MASK","int2octets","validateMsgAndHash","prepSig","h1int","seedArgs","k2sig","kBytes","ik","normS","drbg","tryParsingSig","sg","isHex","isObj","derError","_weierstrass_legacy_opts_to_new","_weierstrass_new_output_to_legacy","allowedPrivateKeyLengths","_ecdsa_legacy_opts_to_new","isWithinCurveOrder","ProjectivePoint","_ecdsa_new_output_to_legacy","_ecdsa","signs","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","pop","decoderError","fatal","opt_code_point","Decoder","Encoder","handler","stream","bite","code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","temp","input_stream","opt_string","classof","getBuiltIn","createPropertyDescriptor","hasOwn","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","IS_PURE","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","stack","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","descriptor","getOwnPropertyDescriptor","BUGGY_DESCRIPTOR","FORCED_CONSTRUCTOR","forced","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constantName","klass","Events","EE","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","eventNames","events","names","getOwnPropertySymbols","handlers","ee","listenerCount","removeListener","removeAllListeners","prefixed","IndexSizeError","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","sha2_ts_1","actualIndex","TOKEN_PROGRAM_ID","TOKEN_2022_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","V8","ENVIRONMENT","validateOpts","rand","montgomeryBits","Gu","a24","minScalar","maxAdded","maxScalar","GuBytes","encodeU","decodeU","_u","decodeScalar","scalarMult","pu","montgomeryLadder","scalarMultBase","cswap","x_2","x_3","dummy","x_1","z_2","z_3","k_t","AA","BB","DA","CB","dacb","da_cb","z2","Constructor","$length","rnds8","rng","msCrypto","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","nsecs","dt","tl","tmh","stringToBytes","unescape","DNS","URL","generateUUID","namespace","hashfunc","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v35","rnds","ROTL","sha1","K","_i","_i2","_t","_t2","v5","HMAC","_key","iHash","oHash","NAME","Prototype","isCallable","tryToString","createNonEnumerableProperty","defineBuiltIn","isPrototypeOf","setPrototypeOf","wellKnownSymbol","uid","InternalStateModule","enforceInternalState","enforce","getInternalState","Uint8ClampedArrayPrototype","TypedArray","ObjectPrototype","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isTypedArray","aTypedArrayConstructor","KEY","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","argument","prim","$reduceRight","arrayMethodIsStrict","CHROME_VERSION","CHROME_BUG","FORCED","__createBinding","__setModuleDefault","__decorate","decorators","desc","Reflect","decorate","__importStar","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","ResolvedTextDecoder","textDecoder","INITIAL_LENGTH","fieldPath","originalMessage","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","Writer","deserializeField","reader","readFixedArray","readArray","option","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","_shortw_utils_ts_1","secp256k1_CURVE","secp256k1_ENDO","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","Fpk1","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","Pointk1","hasEven","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","px","schnorrVerify","pub","schnorr","seedLength","isoMap","mapSWU","secp256k1_hasher"],"mappings":"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,GACvCG,EAAaR,EAAsBO,EACnCE,EAAeR,EAAgBO,EAAWH,EAAcC,GACxDtT,EAAM,IAAItT,GAAY8mB,EAAWC,GAEhC,OADPb,GAAsB5S,EAAKoT,GACpBpT,EC3CX,IAAM0T,GAAsB,CAIxB,eACA,kBACA,yBACA,qBACA,sBACA,oBACA,qBACA,2BACA,4BACA,uBACA,wBACA,oBACA,8BACA,8BACA,wBACA,uBACA,wBACA,qBACA,oBACA,uBACA,yBACA,uBACA,sBACA,2BACA,4BACA,SACA,eACA,yBACA,0BACA,iCACA,uBACA,YACA,iBACA,uBACA,wBACA,eACA,iBACA,8BACA,sBACA,iCACA,0BACA,yBACA,YACA,qBACA,eACA,uBACA,sBACA,qBACA,oBACA,eACA,qCACA,sBACA,oCACA,0CAGG,SAASC,GAIZn/B,EACAo/B,GAEM,MAAAC,EAAchtC,OAAO2N,GACpB,OAAAu+B,GACH,CACIC,oBAAqB,QACrBC,gBAAgBO,EAAWH,EAAcC,GACrC,OAAIE,IAAczL,GACP,CACH+L,UAAWT,EACX7+B,MAAOq/B,UACiB,IAApBP,EAAgC,CAAES,wBAAyBT,GAAoB,MAEhFE,IAAc/J,GACd,CACHr7B,KAAMvH,OAAOysC,GACb9+B,MAAOq/B,GAEJL,IAAc5I,GACd,CACHoJ,YAAaV,EACb9+B,MAAOq/B,GAGR,CAAEr/B,MAAOq/B,IAEpBX,kBAAmBQ,GACnBP,aAAcS,GAElBD,ICrFR,IAAMM,GAAsB,CAIxB,eACA,qBACA,kBACA,yBACA,0BACA,uBACA,mBACA,oBAEA,mBACA,yBACA,sBACA,mBACA,6BACA,kBACA,qBACA,2BACA,+BACA,qBACA,yBACA,iCACA,mCACA,sBACA,6BACA,iCACA,gCACA,iCACA,2BACA,8BACA,mCACA,uBACA,2BACA,oCACA,qCACA,uBACA,wCACA,yBAGG,SAASC,GAAmCC,GAC/C,MAAgC,kBAArBA,GAAiC,qBAAsBA,EACvDR,MACCQ,EAAiBC,kBAGtBrB,GACH,CACIC,oBAAqB,QACrBC,gBAAgBO,EAAWH,EAAcC,GACrC,OAAIE,IAAcj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","file":"js/chunk-6a2bec27.4c8fbcbc.js","sourcesContent":[null,"var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\nvar $RangeError = RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw new $RangeError('Wrong length or index');\n  return length;\n};\n","'use strict';\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw new $RangeError('Wrong offset');\n  return offset;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findLastIndex = require('../internals/array-iteration-from-last').findLastIndex;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findLastIndex` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findlastindex\nexportTypedArrayMethod('findLastIndex', function findLastIndex(predicate /* , thisArg */) {\n  return $findLastIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it) {\n  if (isDetached(it)) throw new $TypeError('ArrayBuffer is detached');\n  return it;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transfer` method\n// https://tc39.es/ecma262/#sec-arraybuffer.prototype.transfer\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transfer: function transfer() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, true);\n  }\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar sort = uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);\n\n// `%TypedArray%.prototype.toSorted` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted\nexportTypedArrayMethod('toSorted', function toSorted(compareFn) {\n  if (compareFn !== undefined) aCallable(compareFn);\n  var O = aTypedArray(this);\n  var A = arrayFromConstructorAndList(getTypedArrayConstructor(O), O);\n  return sort(A, compareFn);\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar IS_NODE = require('../internals/environment-is-node');\n\nmodule.exports = function (name) {\n  if (IS_NODE) {\n    try {\n      return globalThis.process.getBuiltinModule(name);\n    } catch (error) { /* empty */ }\n    try {\n      // eslint-disable-next-line no-new-func -- safe\n      return Function('return require(\"' + name + '\")')();\n    } catch (error) { /* empty */ }\n  }\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\n\n// `ArrayBuffer.prototype.detached` getter\n// https://tc39.es/ecma262/#sec-get-arraybuffer.prototype.detached\nif (DESCRIPTORS && !('detached' in ArrayBufferPrototype)) {\n  defineBuiltInAccessor(ArrayBufferPrototype, 'detached', {\n    configurable: true,\n    get: function detached() {\n      return isDetached(this);\n    }\n  });\n}\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar getBuiltInNodeModule = require('../internals/get-built-in-node-module');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar $ArrayBuffer = globalThis.ArrayBuffer;\nvar $MessageChannel = globalThis.MessageChannel;\nvar detach = false;\nvar WorkerThreads, channel, buffer, $detach;\n\nif (PROPER_STRUCTURED_CLONE_TRANSFER) {\n  detach = function (transferable) {\n    structuredClone(transferable, { transfer: [transferable] });\n  };\n} else if ($ArrayBuffer) try {\n  if (!$MessageChannel) {\n    WorkerThreads = getBuiltInNodeModule('worker_threads');\n    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;\n  }\n\n  if ($MessageChannel) {\n    channel = new $MessageChannel();\n    buffer = new $ArrayBuffer(2);\n\n    $detach = function (transferable) {\n      channel.port1.postMessage(null, [transferable]);\n    };\n\n    if (buffer.byteLength === 2) {\n      $detach(buffer);\n      if (buffer.byteLength === 0) detach = $detach;\n    }\n  }\n} catch (error) { /* empty */ }\n\nmodule.exports = detach;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * Reuses the original byte array when applicable.\n *\n * @param byteArrays - The array of byte arrays to concatenate.\n *\n * @example\n * ```ts\n * const bytes1 = new Uint8Array([0x01, 0x02]);\n * const bytes2 = new Uint8Array([]);\n * const bytes3 = new Uint8Array([0x03, 0x04]);\n * const bytes = mergeBytes([bytes1, bytes2, bytes3]);\n * //    ^ [0x01, 0x02, 0x03, 0x04]\n * ```\n */\nexport const mergeBytes = (byteArrays: Uint8Array[]): Uint8Array => {\n    const nonEmptyByteArrays = byteArrays.filter(arr => arr.length);\n    if (nonEmptyByteArrays.length === 0) {\n        return byteArrays.length ? byteArrays[0] : new Uint8Array();\n    }\n\n    if (nonEmptyByteArrays.length === 1) {\n        return nonEmptyByteArrays[0];\n    }\n\n    const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    nonEmptyByteArrays.forEach(arr => {\n        result.set(arr, offset);\n        offset += arr.length;\n    });\n    return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n *\n * @param bytes - The byte array to pad.\n * @param length - The desired length of the byte array.\n *\n * @example\n * Adds zeroes to the end of the byte array to reach the desired length.\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02]);\n * const paddedBytes = padBytes(bytes, 4);\n * //    ^ [0x01, 0x02, 0x00, 0x00]\n * ```\n *\n * @example\n * Returns the original byte array if it is already at the desired length.\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02]);\n * const paddedBytes = padBytes(bytes, 2);\n * // bytes === paddedBytes\n * ```\n */\nexport const padBytes = (bytes: ReadonlyUint8Array | Uint8Array, length: number): ReadonlyUint8Array | Uint8Array => {\n    if (bytes.length >= length) return bytes;\n    const paddedBytes = new Uint8Array(length).fill(0);\n    paddedBytes.set(bytes);\n    return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n *\n * @param bytes - The byte array to truncate or pad.\n * @param length - The desired length of the byte array.\n *\n * @example\n * Truncates the byte array to the desired length.\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02, 0x03, 0x04]);\n * const fixedBytes = fixBytes(bytes, 2);\n * //    ^ [0x01, 0x02]\n * ```\n *\n * @example\n * Adds zeroes to the end of the byte array to reach the desired length.\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02]);\n * const fixedBytes = fixBytes(bytes, 4);\n * //    ^ [0x01, 0x02, 0x00, 0x00]\n * ```\n *\n * @example\n * Returns the original byte array if it is already at the desired length.\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02]);\n * const fixedBytes = fixBytes(bytes, 2);\n * // bytes === fixedBytes\n * ```\n */\nexport const fixBytes = (bytes: ReadonlyUint8Array | Uint8Array, length: number): ReadonlyUint8Array | Uint8Array =>\n    padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\n\n/**\n * Returns true if and only if the provided `data` byte array contains\n * the provided `bytes` byte array at the specified `offset`.\n *\n * @param data - The byte sequence to search for.\n * @param bytes - The byte array in which to search for `data`.\n * @param offset - The position in `bytes` where the search begins.\n *\n * @example\n * ```ts\n * const bytes = new Uint8Array([0x01, 0x02, 0x03, 0x04]);\n * const data = new Uint8Array([0x02, 0x03]);\n * containsBytes(bytes, data, 1); // true\n * containsBytes(bytes, data, 2); // false\n * ```\n */\nexport function containsBytes(\n    data: ReadonlyUint8Array | Uint8Array,\n    bytes: ReadonlyUint8Array | Uint8Array,\n    offset: number,\n): boolean {\n    const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n    if (slice.length !== bytes.length) return false;\n    return bytes.every((b, i) => b === slice[i]);\n}\n","import {\n    SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH,\n    SolanaError,\n} from '@solana/errors';\n\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Defines an offset in bytes.\n */\nexport type Offset = number;\n\n/**\n * An object that can encode a value of type {@link TFrom} into a {@link ReadonlyUint8Array}.\n *\n * This is a common interface for {@link FixedSizeEncoder} and {@link VariableSizeEncoder}.\n *\n * @interface\n * @typeParam TFrom - The type of the value to encode.\n *\n * @see {@link FixedSizeEncoder}\n * @see {@link VariableSizeEncoder}\n */\ntype BaseEncoder<TFrom> = {\n    /** Encode the provided value and return the encoded bytes directly. */\n    readonly encode: (value: TFrom) => ReadonlyUint8Array;\n    /**\n     * Writes the encoded value into the provided byte array at the given offset.\n     * Returns the offset of the next byte after the encoded value.\n     */\n    readonly write: (value: TFrom, bytes: Uint8Array, offset: Offset) => Offset;\n};\n\n/**\n * An object that can encode a value of type {@link TFrom} into a fixed-size {@link ReadonlyUint8Array}.\n *\n * See {@link Encoder} to learn more about creating and composing encoders.\n *\n * @interface\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @example\n * ```ts\n * const encoder: FixedSizeEncoder<number, 4>;\n * const bytes = encoder.encode(42);\n * const size = encoder.fixedSize; // 4\n * ```\n *\n * @see {@link Encoder}\n * @see {@link VariableSizeEncoder}\n */\nexport type FixedSizeEncoder<TFrom, TSize extends number = number> = BaseEncoder<TFrom> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\n/**\n * An object that can encode a value of type {@link TFrom} into a variable-size {@link ReadonlyUint8Array}.\n *\n * See {@link Encoder} to learn more about creating and composing encoders.\n *\n * @interface\n * @typeParam TFrom - The type of the value to encode.\n *\n * @example\n * ```ts\n * const encoder: VariableSizeEncoder<string>;\n * const bytes = encoder.encode('hello');\n * const size = encoder.getSizeFromValue('hello');\n * ```\n *\n * @see {@link Encoder}\n * @see {@link FixedSizeEncoder}\n */\nexport type VariableSizeEncoder<TFrom> = BaseEncoder<TFrom> & {\n    /** Returns the size of the encoded value in bytes for a given input. */\n    readonly getSizeFromValue: (value: TFrom) => number;\n    /** The maximum possible size of an encoded value in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can encode a value of type {@link TFrom} into a {@link ReadonlyUint8Array}.\n *\n * An `Encoder` can be either:\n * - A {@link FixedSizeEncoder}, where all encoded values have the same fixed size.\n * - A {@link VariableSizeEncoder}, where encoded values can vary in size.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @example\n * Encoding a value into a new byte array.\n * ```ts\n * const encoder: Encoder<string>;\n * const bytes = encoder.encode('hello');\n * ```\n *\n * @example\n * Writing the encoded value into an existing byte array.\n * ```ts\n * const encoder: Encoder<string>;\n * const bytes = new Uint8Array(100);\n * const nextOffset = encoder.write('hello', bytes, 20);\n * ```\n *\n * @remarks\n * You may create `Encoders` manually using the {@link createEncoder} function but it is more common\n * to compose multiple `Encoders` together using the various helpers of the `@solana/codecs` package.\n *\n * For instance, here's how you might create an `Encoder` for a `Person` object type that contains\n * a `name` string and an `age` number:\n *\n * ```ts\n * import { getStructEncoder, addEncoderSizePrefix, getUtf8Encoder, getU32Encoder } from '@solana/codecs';\n *\n * type Person = { name: string; age: number };\n * const getPersonEncoder = (): Encoder<Person> =>\n *     getStructEncoder([\n *         ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],\n *         ['age', getU32Encoder()],\n *     ]);\n * ```\n *\n * Note that composed `Encoder` types are clever enough to understand whether\n * they are fixed-size or variable-size. In the example above, `getU32Encoder()` is\n * a fixed-size encoder, while `addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())`\n * is a variable-size encoder. This makes the final `Person` encoder a variable-size encoder.\n *\n * @see {@link FixedSizeEncoder}\n * @see {@link VariableSizeEncoder}\n * @see {@link createEncoder}\n */\nexport type Encoder<TFrom> = FixedSizeEncoder<TFrom> | VariableSizeEncoder<TFrom>;\n\n/**\n * An object that can decode a byte array into a value of type {@link TTo}.\n *\n * This is a common interface for {@link FixedSizeDecoder} and {@link VariableSizeDecoder}.\n *\n * @interface\n * @typeParam TTo - The type of the decoded value.\n *\n * @see {@link FixedSizeDecoder}\n * @see {@link VariableSizeDecoder}\n */\ntype BaseDecoder<TTo> = {\n    /** Decodes the provided byte array at the given offset (or zero) and returns the value directly. */\n    readonly decode: (bytes: ReadonlyUint8Array | Uint8Array, offset?: Offset) => TTo;\n    /**\n     * Reads the encoded value from the provided byte array at the given offset.\n     * Returns the decoded value and the offset of the next byte after the encoded value.\n     */\n    readonly read: (bytes: ReadonlyUint8Array | Uint8Array, offset: Offset) => [TTo, Offset];\n};\n\n/**\n * An object that can decode a fixed-size byte array into a value of type {@link TTo}.\n *\n * See {@link Decoder} to learn more about creating and composing decoders.\n *\n * @interface\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @example\n * ```ts\n * const decoder: FixedSizeDecoder<number, 4>;\n * const value = decoder.decode(bytes);\n * const size = decoder.fixedSize; // 4\n * ```\n *\n * @see {@link Decoder}\n * @see {@link VariableSizeDecoder}\n */\nexport type FixedSizeDecoder<TTo, TSize extends number = number> = BaseDecoder<TTo> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\n/**\n * An object that can decode a variable-size byte array into a value of type {@link TTo}.\n *\n * See {@link Decoder} to learn more about creating and composing decoders.\n *\n * @interface\n * @typeParam TTo - The type of the decoded value.\n *\n * @example\n * ```ts\n * const decoder: VariableSizeDecoder<number>;\n * const value = decoder.decode(bytes);\n * ```\n *\n * @see {@link Decoder}\n * @see {@link VariableSizeDecoder}\n */\nexport type VariableSizeDecoder<TTo> = BaseDecoder<TTo> & {\n    /** The maximum possible size of an encoded value in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can decode a byte array into a value of type {@link TTo}.\n *\n * An `Decoder` can be either:\n * - A {@link FixedSizeDecoder}, where all byte arrays have the same fixed size.\n * - A {@link VariableSizeDecoder}, where byte arrays can vary in size.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @example\n * Getting the decoded value from a byte array.\n * ```ts\n * const decoder: Decoder<string>;\n * const value = decoder.decode(bytes);\n * ```\n *\n * @example\n * Reading the decoded value from a byte array at a specific offset\n * and getting the offset of the next byte to read.\n * ```ts\n * const decoder: Decoder<string>;\n * const [value, nextOffset] = decoder.read('hello', bytes, 20);\n * ```\n *\n * @remarks\n * You may create `Decoders` manually using the {@link createDecoder} function but it is more common\n * to compose multiple `Decoders` together using the various helpers of the `@solana/codecs` package.\n *\n * For instance, here's how you might create an `Decoder` for a `Person` object type that contains\n * a `name` string and an `age` number:\n *\n * ```ts\n * import { getStructDecoder, addDecoderSizePrefix, getUtf8Decoder, getU32Decoder } from '@solana/codecs';\n *\n * type Person = { name: string; age: number };\n * const getPersonDecoder = (): Decoder<Person> =>\n *     getStructDecoder([\n *         ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],\n *         ['age', getU32Decoder()],\n *     ]);\n * ```\n *\n * Note that composed `Decoder` types are clever enough to understand whether\n * they are fixed-size or variable-size. In the example above, `getU32Decoder()` is\n * a fixed-size decoder, while `addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())`\n * is a variable-size decoder. This makes the final `Person` decoder a variable-size decoder.\n *\n * @see {@link FixedSizeDecoder}\n * @see {@link VariableSizeDecoder}\n * @see {@link createDecoder}\n */\nexport type Decoder<TTo> = FixedSizeDecoder<TTo> | VariableSizeDecoder<TTo>;\n\n/**\n * An object that can encode and decode a value to and from a fixed-size byte array.\n *\n * See {@link Codec} to learn more about creating and composing codecs.\n *\n * @interface\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @example\n * ```ts\n * const codec: FixedSizeCodec<number | bigint, bigint, 8>;\n * const bytes = codec.encode(42);\n * const value = codec.decode(bytes); // 42n\n * const size = codec.fixedSize; // 8\n * ```\n *\n * @see {@link Codec}\n * @see {@link VariableSizeCodec}\n */\nexport type FixedSizeCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number> = FixedSizeDecoder<\n    TTo,\n    TSize\n> &\n    FixedSizeEncoder<TFrom, TSize>;\n\n/**\n * An object that can encode and decode a value to and from a variable-size byte array.\n *\n * See {@link Codec} to learn more about creating and composing codecs.\n *\n * @interface\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @example\n * ```ts\n * const codec: VariableSizeCodec<number | bigint, bigint>;\n * const bytes = codec.encode(42);\n * const value = codec.decode(bytes); // 42n\n * const size = codec.getSizeFromValue(42);\n * ```\n *\n * @see {@link Codec}\n * @see {@link FixedSizeCodec}\n */\nexport type VariableSizeCodec<TFrom, TTo extends TFrom = TFrom> = VariableSizeDecoder<TTo> & VariableSizeEncoder<TFrom>;\n\n/**\n * An object that can encode and decode a value to and from a byte array.\n *\n * A `Codec` can be either:\n * - A {@link FixedSizeCodec}, where all encoded values have the same fixed size.\n * - A {@link VariableSizeCodec}, where encoded values can vary in size.\n *\n * @example\n * ```ts\n * const codec: Codec<string>;\n * const bytes = codec.encode('hello');\n * const value = codec.decode(bytes); // 'hello'\n * ```\n *\n * @remarks\n * For convenience, codecs can encode looser types than they decode.\n * That is, type {@link TFrom} can be a superset of type {@link TTo}.\n * For instance, a `Codec<bigint | number, bigint>` can encode both\n * `bigint` and `number` values, but will always decode to a `bigint`.\n *\n * ```ts\n * const codec: Codec<bigint | number, bigint>;\n * const bytes = codec.encode(42);\n * const value = codec.decode(bytes); // 42n\n * ```\n *\n * It is worth noting that codecs are the union of encoders and decoders.\n * This means that a `Codec<TFrom, TTo>` can be combined from an `Encoder<TFrom>`\n * and a `Decoder<TTo>` using the {@link combineCodec} function. This is particularly\n * useful for library authors who want to expose all three types of objects to their users.\n *\n * ```ts\n * const encoder: Encoder<bigint | number>;\n * const decoder: Decoder<bigint>;\n * const codec: Codec<bigint | number, bigint> = combineCodec(encoder, decoder);\n * ```\n *\n * Aside from combining encoders and decoders, codecs can also be created from scratch using\n * the {@link createCodec} function but it is more common to compose multiple codecs together\n * using the various helpers of the `@solana/codecs` package.\n *\n * For instance, here's how you might create a `Codec` for a `Person` object type that contains\n * a `name` string and an `age` number:\n *\n * ```ts\n * import { getStructCodec, addCodecSizePrefix, getUtf8Codec, getU32Codec } from '@solana/codecs';\n *\n * type Person = { name: string; age: number };\n * const getPersonCodec = (): Codec<Person> =>\n *     getStructCodec([\n *         ['name', addCodecSizePrefix(getUtf8Codec(), getU32Codec())],\n *         ['age', getU32Codec()],\n *     ]);\n * ```\n *\n * Note that composed `Codec` types are clever enough to understand whether\n * they are fixed-size or variable-size. In the example above, `getU32Codec()` is\n * a fixed-size codec, while `addCodecSizePrefix(getUtf8Codec(), getU32Codec())`\n * is a variable-size codec. This makes the final `Person` codec a variable-size codec.\n *\n * @see {@link FixedSizeCodec}\n * @see {@link VariableSizeCodec}\n * @see {@link combineCodec}\n * @see {@link createCodec}\n */\nexport type Codec<TFrom, TTo extends TFrom = TFrom> = FixedSizeCodec<TFrom, TTo> | VariableSizeCodec<TFrom, TTo>;\n\n/**\n * Gets the encoded size of a given value in bytes using the provided encoder.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @param value - The value to be encoded.\n * @param encoder - The encoder used to determine the encoded size.\n * @returns The size of the encoded value in bytes.\n *\n * @example\n * ```ts\n * const fixedSizeEncoder = { fixedSize: 4 };\n * getEncodedSize(123, fixedSizeEncoder); // Returns 4.\n *\n * const variableSizeEncoder = { getSizeFromValue: (value: string) => value.length };\n * getEncodedSize(\"hello\", variableSizeEncoder); // Returns 5.\n * ```\n *\n * @see {@link Encoder}\n */\nexport function getEncodedSize<TFrom>(\n    value: TFrom,\n    encoder: { fixedSize: number } | { getSizeFromValue: (value: TFrom) => number },\n): number {\n    return 'fixedSize' in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\n\n/**\n * Creates an `Encoder` by filling in the missing `encode` function using the provided `write` function and\n * either the `fixedSize` property (for {@link FixedSizeEncoder | FixedSizeEncoders}) or\n * the `getSizeFromValue` function (for {@link VariableSizeEncoder | VariableSizeEncoders}).\n *\n * Instead of manually implementing `encode`, this utility leverages the existing `write` function\n * and the size helpers to generate a complete encoder. The provided `encode` method will allocate\n * a new `Uint8Array` of the correct size and use `write` to populate it.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TSize - The fixed size of the encoded value in bytes (for fixed-size encoders).\n *\n * @param encoder - An encoder object that implements `write`, but not `encode`.\n * - If the encoder has a `fixedSize` property, it is treated as a {@link FixedSizeEncoder}.\n * - Otherwise, it is treated as a {@link VariableSizeEncoder}.\n *\n * @returns A fully functional `Encoder` with both `write` and `encode` methods.\n *\n * @example\n * Creating a custom fixed-size encoder.\n * ```ts\n * const encoder = createEncoder({\n *     fixedSize: 4,\n *     write: (value: number, bytes, offset) => {\n *         bytes.set(new Uint8Array([value]), offset);\n *         return offset + 4;\n *     },\n * });\n *\n * const bytes = encoder.encode(42);\n * // 0x2a000000\n * ```\n *\n * @example\n * Creating a custom variable-size encoder:\n * ```ts\n * const encoder = createEncoder({\n *     getSizeFromValue: (value: string) => value.length,\n *     write: (value: string, bytes, offset) => {\n *         const encodedValue = new TextEncoder().encode(value);\n *         bytes.set(encodedValue, offset);\n *         return offset + encodedValue.length;\n *     },\n * });\n *\n * const bytes = encoder.encode(\"hello\");\n * // 0x68656c6c6f\n * ```\n *\n * @remarks\n * Note that, while `createEncoder` is useful for defining more complex encoders, it is more common to compose\n * encoders together using the various helpers and primitives of the `@solana/codecs` package.\n *\n * Here are some alternative examples using codec primitives instead of `createEncoder`.\n *\n * ```ts\n * // Fixed-size encoder for unsigned 32-bit integers.\n * const encoder = getU32Encoder();\n * const bytes = encoder.encode(42);\n * // 0x2a000000\n *\n * // Variable-size encoder for 32-bytes prefixed UTF-8 strings.\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * const bytes = encoder.encode(\"hello\");\n * // 0x0500000068656c6c6f\n *\n * // Variable-size encoder for custom objects.\n * type Person = { name: string; age: number };\n * const encoder: Encoder<Person> = getStructEncoder([\n *     ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],\n *     ['age', getU32Encoder()],\n * ]);\n * const bytes = encoder.encode({ name: \"Bob\", age: 42 });\n * // 0x03000000426f622a000000\n * ```\n *\n * @see {@link Encoder}\n * @see {@link FixedSizeEncoder}\n * @see {@link VariableSizeEncoder}\n * @see {@link getStructEncoder}\n * @see {@link getU32Encoder}\n * @see {@link getUtf8Encoder}\n * @see {@link addEncoderSizePrefix}\n */\nexport function createEncoder<TFrom, TSize extends number>(\n    encoder: Omit<FixedSizeEncoder<TFrom, TSize>, 'encode'>,\n): FixedSizeEncoder<TFrom, TSize>;\nexport function createEncoder<TFrom>(encoder: Omit<VariableSizeEncoder<TFrom>, 'encode'>): VariableSizeEncoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom> {\n    return Object.freeze({\n        ...encoder,\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, encoder));\n            encoder.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\n/**\n * Creates a `Decoder` by filling in the missing `decode` function using the provided `read` function.\n *\n * Instead of manually implementing `decode`, this utility leverages the existing `read` function\n * and the size properties to generate a complete decoder. The provided `decode` method will read\n * from a `Uint8Array` at the given offset and return the decoded value.\n *\n * If the `fixedSize` property is provided, a {@link FixedSizeDecoder} will be created, otherwise\n * a {@link VariableSizeDecoder} will be created.\n *\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes (for fixed-size decoders).\n *\n * @param decoder - A decoder object that implements `read`, but not `decode`.\n * - If the decoder has a `fixedSize` property, it is treated as a {@link FixedSizeDecoder}.\n * - Otherwise, it is treated as a {@link VariableSizeDecoder}.\n *\n * @returns A fully functional `Decoder` with both `read` and `decode` methods.\n *\n * @example\n * Creating a custom fixed-size decoder.\n * ```ts\n * const decoder = createDecoder({\n *     fixedSize: 4,\n *     read: (bytes, offset) => {\n *         const value = bytes[offset];\n *         return [value, offset + 4];\n *     },\n * });\n *\n * const value = decoder.decode(new Uint8Array([42, 0, 0, 0]));\n * // 42\n * ```\n *\n * @example\n * Creating a custom variable-size decoder:\n * ```ts\n * const decoder = createDecoder({\n *     read: (bytes, offset) => {\n *         const decodedValue = new TextDecoder().decode(bytes.subarray(offset));\n *         return [decodedValue, bytes.length];\n *     },\n * });\n *\n * const value = decoder.decode(new Uint8Array([104, 101, 108, 108, 111]));\n * // \"hello\"\n * ```\n *\n * @remarks\n * Note that, while `createDecoder` is useful for defining more complex decoders, it is more common to compose\n * decoders together using the various helpers and primitives of the `@solana/codecs` package.\n *\n * Here are some alternative examples using codec primitives instead of `createDecoder`.\n *\n * ```ts\n * // Fixed-size decoder for unsigned 32-bit integers.\n * const decoder = getU32Decoder();\n * const value = decoder.decode(new Uint8Array([42, 0, 0, 0]));\n * // 42\n *\n * // Variable-size decoder for 32-bytes prefixed UTF-8 strings.\n * const decoder = addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder());\n * const value = decoder.decode(new Uint8Array([5, 0, 0, 0, 104, 101, 108, 108, 111]));\n * // \"hello\"\n *\n * // Variable-size decoder for custom objects.\n * type Person = { name: string; age: number };\n * const decoder: Decoder<Person> = getStructDecoder([\n *     ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],\n *     ['age', getU32Decoder()],\n * ]);\n * const value = decoder.decode(new Uint8Array([3, 0, 0, 0, 66, 111, 98, 42, 0, 0, 0]));\n * // { name: \"Bob\", age: 42 }\n * ```\n *\n * @see {@link Decoder}\n * @see {@link FixedSizeDecoder}\n * @see {@link VariableSizeDecoder}\n * @see {@link getStructDecoder}\n * @see {@link getU32Decoder}\n * @see {@link getUtf8Decoder}\n * @see {@link addDecoderSizePrefix}\n */\nexport function createDecoder<TTo, TSize extends number>(\n    decoder: Omit<FixedSizeDecoder<TTo, TSize>, 'decode'>,\n): FixedSizeDecoder<TTo, TSize>;\nexport function createDecoder<TTo>(decoder: Omit<VariableSizeDecoder<TTo>, 'decode'>): VariableSizeDecoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo> {\n    return Object.freeze({\n        ...decoder,\n        decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0],\n    });\n}\n\n/**\n * Creates a `Codec` by filling in the missing `encode` and `decode` functions using the provided `write` and `read` functions.\n *\n * This utility combines the behavior of {@link createEncoder} and {@link createDecoder} to produce a fully functional `Codec`.\n * The `encode` method is derived from the `write` function, while the `decode` method is derived from the `read` function.\n *\n * If the `fixedSize` property is provided, a {@link FixedSizeCodec} will be created, otherwise\n * a {@link VariableSizeCodec} will be created.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes (for fixed-size codecs).\n *\n * @param codec - A codec object that implements `write` and `read`, but not `encode` or `decode`.\n * - If the codec has a `fixedSize` property, it is treated as a {@link FixedSizeCodec}.\n * - Otherwise, it is treated as a {@link VariableSizeCodec}.\n *\n * @returns A fully functional `Codec` with `write`, `read`, `encode`, and `decode` methods.\n *\n * @example\n * Creating a custom fixed-size codec.\n * ```ts\n * const codec = createCodec({\n *     fixedSize: 4,\n *     read: (bytes, offset) => {\n *         const value = bytes[offset];\n *         return [value, offset + 4];\n *     },\n *     write: (value: number, bytes, offset) => {\n *         bytes.set(new Uint8Array([value]), offset);\n *         return offset + 4;\n *     },\n * });\n *\n * const bytes = codec.encode(42);\n * // 0x2a000000\n * const value = codec.decode(bytes);\n * // 42\n * ```\n *\n * @example\n * Creating a custom variable-size codec:\n * ```ts\n * const codec = createCodec({\n *     getSizeFromValue: (value: string) => value.length,\n *     read: (bytes, offset) => {\n *         const decodedValue = new TextDecoder().decode(bytes.subarray(offset));\n *         return [decodedValue, bytes.length];\n *     },\n *     write: (value: string, bytes, offset) => {\n *         const encodedValue = new TextEncoder().encode(value);\n *         bytes.set(encodedValue, offset);\n *         return offset + encodedValue.length;\n *     },\n * });\n *\n * const bytes = codec.encode(\"hello\");\n * // 0x68656c6c6f\n * const value = codec.decode(bytes);\n * // \"hello\"\n * ```\n *\n * @remarks\n * This function effectively combines the behavior of {@link createEncoder} and {@link createDecoder}.\n * If you only need to encode or decode (but not both), consider using those functions instead.\n *\n * Here are some alternative examples using codec primitives instead of `createCodec`.\n *\n * ```ts\n * // Fixed-size codec for unsigned 32-bit integers.\n * const codec = getU32Codec();\n * const bytes = codec.encode(42);\n * // 0x2a000000\n * const value = codec.decode(bytes);\n * // 42\n *\n * // Variable-size codec for 32-bytes prefixed UTF-8 strings.\n * const codec = addCodecSizePrefix(getUtf8Codec(), getU32Codec());\n * const bytes = codec.encode(\"hello\");\n * // 0x0500000068656c6c6f\n * const value = codec.decode(bytes);\n * // \"hello\"\n *\n * // Variable-size codec for custom objects.\n * type Person = { name: string; age: number };\n * const codec: Codec<PersonInput, Person> = getStructCodec([\n *     ['name', addCodecSizePrefix(getUtf8Codec(), getU32Codec())],\n *     ['age', getU32Codec()],\n * ]);\n * const bytes = codec.encode({ name: \"Bob\", age: 42 });\n * // 0x03000000426f622a000000\n * const value = codec.decode(bytes);\n * // { name: \"Bob\", age: 42 }\n * ```\n *\n * @see {@link Codec}\n * @see {@link FixedSizeCodec}\n * @see {@link VariableSizeCodec}\n * @see {@link createEncoder}\n * @see {@link createDecoder}\n * @see {@link getStructCodec}\n * @see {@link getU32Codec}\n * @see {@link getUtf8Codec}\n * @see {@link addCodecSizePrefix}\n */\nexport function createCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number>(\n    codec: Omit<FixedSizeCodec<TFrom, TTo, TSize>, 'decode' | 'encode'>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec: Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo> {\n    return Object.freeze({\n        ...codec,\n        decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, codec));\n            codec.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\n/**\n * Determines whether the given codec, encoder, or decoder is fixed-size.\n *\n * A fixed-size object is identified by the presence of a `fixedSize` property.\n * If this property exists, the object is considered a {@link FixedSizeCodec},\n * {@link FixedSizeEncoder}, or {@link FixedSizeDecoder}.\n * Otherwise, it is assumed to be a {@link VariableSizeCodec},\n * {@link VariableSizeEncoder}, or {@link VariableSizeDecoder}.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n * @returns `true` if the object is fixed-size, `false` otherwise.\n *\n * @example\n * Checking a fixed-size encoder.\n * ```ts\n * const encoder = getU32Encoder();\n * isFixedSize(encoder); // true\n * ```\n *\n * @example\n * Checking a variable-size encoder.\n * ```ts\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * isFixedSize(encoder); // false\n * ```\n *\n * @remarks\n * This function is commonly used to distinguish between fixed-size and variable-size objects at runtime.\n * If you need to enforce this distinction with type assertions, consider using {@link assertIsFixedSize}.\n *\n * @see {@link assertIsFixedSize}\n */\nexport function isFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function isFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): decoder is FixedSizeDecoder<TTo, TSize>;\nexport function isFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function isFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): codec is { fixedSize: TSize };\nexport function isFixedSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { fixedSize: number } {\n    return 'fixedSize' in codec && typeof codec.fixedSize === 'number';\n}\n\n/**\n * Asserts that the given codec, encoder, or decoder is fixed-size.\n *\n * If the object is not fixed-size (i.e., it lacks a `fixedSize` property),\n * this function throws a {@link SolanaError} with the code `SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH`.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n * @throws {SolanaError} If the object is not fixed-size.\n *\n * @example\n * Asserting a fixed-size encoder.\n * ```ts\n * const encoder = getU32Encoder();\n * assertIsFixedSize(encoder); // Passes\n * ```\n *\n * @example\n * Attempting to assert a variable-size encoder.\n * ```ts\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * assertIsFixedSize(encoder); // Throws SolanaError\n * ```\n *\n * @remarks\n * This function is the assertion-based counterpart of {@link isFixedSize}.\n * If you only need to check whether an object is fixed-size without throwing an error, use {@link isFixedSize} instead.\n *\n * @see {@link isFixedSize}\n */\nexport function assertIsFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): asserts encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function assertIsFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): asserts decoder is FixedSizeDecoder<TTo, TSize>;\nexport function assertIsFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): asserts codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function assertIsFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): asserts codec is { fixedSize: TSize };\nexport function assertIsFixedSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { fixedSize: number } {\n    if (!isFixedSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n    }\n}\n\n/**\n * Determines whether the given codec, encoder, or decoder is variable-size.\n *\n * A variable-size object is identified by the absence of a `fixedSize` property.\n * If this property is missing, the object is considered a {@link VariableSizeCodec},\n * {@link VariableSizeEncoder}, or {@link VariableSizeDecoder}.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n * @returns `true` if the object is variable-size, `false` otherwise.\n *\n * @example\n * Checking a variable-size encoder.\n * ```ts\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * isVariableSize(encoder); // true\n * ```\n *\n * @example\n * Checking a fixed-size encoder.\n * ```ts\n * const encoder = getU32Encoder();\n * isVariableSize(encoder); // false\n * ```\n *\n * @remarks\n * This function is the inverse of {@link isFixedSize}.\n *\n * @see {@link isFixedSize}\n * @see {@link assertIsVariableSize}\n */\nexport function isVariableSize<TFrom>(encoder: Encoder<TFrom>): encoder is VariableSizeEncoder<TFrom>;\nexport function isVariableSize<TTo>(decoder: Decoder<TTo>): decoder is VariableSizeDecoder<TTo>;\nexport function isVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): codec is VariableSizeCodec<TFrom, TTo>;\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number };\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number } {\n    return !isFixedSize(codec);\n}\n\n/**\n * Asserts that the given codec, encoder, or decoder is variable-size.\n *\n * If the object is not variable-size (i.e., it has a `fixedSize` property),\n * this function throws a {@link SolanaError} with the code `SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH`.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n * @throws {SolanaError} If the object is not variable-size.\n *\n * @example\n * Asserting a variable-size encoder.\n * ```ts\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * assertIsVariableSize(encoder); // Passes\n * ```\n *\n * @example\n * Attempting to assert a fixed-size encoder.\n * ```ts\n * const encoder = getU32Encoder();\n * assertIsVariableSize(encoder); // Throws SolanaError\n * ```\n *\n * @remarks\n * This function is the assertion-based counterpart of {@link isVariableSize}.\n * If you only need to check whether an object is variable-size without throwing an error, use {@link isVariableSize} instead.\n *\n * Also note that this function is the inverse of {@link assertIsFixedSize}.\n *\n * @see {@link isVariableSize}\n * @see {@link assertIsFixedSize}\n */\nexport function assertIsVariableSize<TFrom>(encoder: Encoder<TFrom>): asserts encoder is VariableSizeEncoder<TFrom>;\nexport function assertIsVariableSize<TTo>(decoder: Decoder<TTo>): asserts decoder is VariableSizeDecoder<TTo>;\nexport function assertIsVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): asserts codec is VariableSizeCodec<TFrom, TTo>;\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number };\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number } {\n    if (!isVariableSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n    }\n}\n","import {\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH,\n    SolanaError,\n} from '@solana/errors';\n\nimport {\n    Codec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\n\n/**\n * Combines an `Encoder` and a `Decoder` into a `Codec`.\n *\n * That is, given a `Encoder<TFrom>` and a `Decoder<TTo>`, this function returns a `Codec<TFrom, TTo>`.\n *\n * This allows for modular composition by keeping encoding and decoding logic separate\n * while still offering a convenient way to bundle them into a single `Codec`.\n * This is particularly useful for library maintainers who want to expose `Encoders`,\n * `Decoders`, and `Codecs` separately, enabling tree-shaking of unused logic.\n *\n * The provided `Encoder` and `Decoder` must be compatible in terms of:\n * - **Fixed Size:** If both are fixed-size, they must have the same `fixedSize` value.\n * - **Variable Size:** If either has a `maxSize` attribute, it must match the other.\n *\n * If these conditions are not met, a {@link SolanaError} will be thrown.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes (for fixed-size codecs).\n *\n * @param encoder - The `Encoder` to combine.\n * @param decoder - The `Decoder` to combine.\n * @returns A `Codec` that provides both `encode` and `decode` methods.\n *\n * @throws {SolanaError}\n * - `SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH`\n *   Thrown if the encoder and decoder have mismatched size types (fixed vs. variable).\n * - `SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH`\n *   Thrown if both are fixed-size but have different `fixedSize` values.\n * - `SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH`\n *   Thrown if the `maxSize` attributes do not match.\n *\n * @example\n * Creating a fixed-size `Codec` from an encoder and a decoder.\n * ```ts\n * const encoder = getU32Encoder();\n * const decoder = getU32Decoder();\n * const codec = combineCodec(encoder, decoder);\n *\n * const bytes = codec.encode(42); // 0x2a000000\n * const value = codec.decode(bytes); // 42\n * ```\n *\n * @example\n * Creating a variable-size `Codec` from an encoder and a decoder.\n * ```ts\n * const encoder = addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder());\n * const decoder = addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder());\n * const codec = combineCodec(encoder, decoder);\n *\n * const bytes = codec.encode(\"hello\"); // 0x0500000068656c6c6f\n * const value = codec.decode(bytes); // \"hello\"\n * ```\n *\n * @remarks\n * The recommended pattern for defining codecs in libraries is to expose separate functions for the encoder, decoder, and codec.\n * This allows users to import only what they need, improving tree-shaking efficiency.\n *\n * ```ts\n * type MyType = \\/* ... *\\/;\n * const getMyTypeEncoder = (): Encoder<MyType> => { \\/* ... *\\/ };\n * const getMyTypeDecoder = (): Decoder<MyType> => { \\/* ... *\\/ };\n * const getMyTypeCodec = (): Codec<MyType> =>\n *     combineCodec(getMyTypeEncoder(), getMyTypeDecoder());\n * ```\n *\n * @see {@link Codec}\n * @see {@link Encoder}\n * @see {@link Decoder}\n */\nexport function combineCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: VariableSizeEncoder<TFrom>,\n    decoder: VariableSizeDecoder<TTo>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo> {\n    if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n    }\n\n    if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n            decoderFixedSize: decoder.fixedSize,\n            encoderFixedSize: encoder.fixedSize,\n        });\n    }\n\n    if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n            decoderMaxSize: decoder.maxSize,\n            encoderMaxSize: encoder.maxSize,\n        });\n    }\n\n    return {\n        ...decoder,\n        ...encoder,\n        decode: decoder.decode,\n        encode: encoder.encode,\n        read: decoder.read,\n        write: encoder.write,\n    };\n}\n","import {\n    SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,\n    SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,\n    SolanaError,\n} from '@solana/errors';\n\nimport { containsBytes } from './bytes';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Creates an encoder that writes a `Uint8Array` sentinel after the encoded value.\n * This is useful to delimit the encoded value when being read by a decoder.\n *\n * See {@link addCodecSentinel} for more information.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @see {@link addCodecSentinel}\n */\nexport function addEncoderSentinel<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeEncoder<TFrom>;\nexport function addEncoderSentinel<TFrom>(\n    encoder: Encoder<TFrom>,\n    sentinel: ReadonlyUint8Array,\n): VariableSizeEncoder<TFrom>;\nexport function addEncoderSentinel<TFrom>(encoder: Encoder<TFrom>, sentinel: ReadonlyUint8Array): Encoder<TFrom> {\n    const write = ((value, bytes, offset) => {\n        // Here we exceptionally use the `encode` function instead of the `write`\n        // function to contain the content of the encoder within its own bounds\n        // and to avoid writing the sentinel as part of the encoded value.\n        const encoderBytes = encoder.encode(value);\n        if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n                encodedBytes: encoderBytes,\n                hexEncodedBytes: hexBytes(encoderBytes),\n                hexSentinel: hexBytes(sentinel),\n                sentinel,\n            });\n        }\n        bytes.set(encoderBytes, offset);\n        offset += encoderBytes.length;\n        bytes.set(sentinel, offset);\n        offset += sentinel.length;\n        return offset;\n    }) as Encoder<TFrom>['write'];\n\n    if (isFixedSize(encoder)) {\n        return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n    }\n\n    return createEncoder({\n        ...encoder,\n        ...(encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {}),\n        getSizeFromValue: value => encoder.getSizeFromValue(value) + sentinel.length,\n        write,\n    });\n}\n\n/**\n * Creates a decoder that continues reading until\n * a given `Uint8Array` sentinel is found.\n *\n * See {@link addCodecSentinel} for more information.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @see {@link addCodecSentinel}\n */\nexport function addDecoderSentinel<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeDecoder<TTo>;\nexport function addDecoderSentinel<TTo>(decoder: Decoder<TTo>, sentinel: ReadonlyUint8Array): VariableSizeDecoder<TTo>;\nexport function addDecoderSentinel<TTo>(decoder: Decoder<TTo>, sentinel: ReadonlyUint8Array): Decoder<TTo> {\n    const read = ((bytes, offset) => {\n        const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n        const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n        if (sentinelIndex === -1) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n                decodedBytes: candidateBytes,\n                hexDecodedBytes: hexBytes(candidateBytes),\n                hexSentinel: hexBytes(sentinel),\n                sentinel,\n            });\n        }\n        const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n        // Here we exceptionally use the `decode` function instead of the `read`\n        // function to contain the content of the decoder within its own bounds\n        // and ensure that the sentinel is not part of the decoded value.\n        return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n    }) as Decoder<TTo>['read'];\n\n    if (isFixedSize(decoder)) {\n        return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n    }\n\n    return createDecoder({\n        ...decoder,\n        ...(decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {}),\n        read,\n    });\n}\n\n/**\n * Creates a Codec that writes a given `Uint8Array` sentinel after the encoded\n * value and, when decoding, continues reading until the sentinel is found.\n *\n * This sets a limit on variable-size codecs and tells us when to stop decoding.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @example\n * ```ts\n * const codec = addCodecSentinel(getUtf8Codec(), new Uint8Array([255, 255]));\n * codec.encode('hello');\n * // 0x68656c6c6fffff\n * //   |        └-- Our sentinel.\n * //   └-- Our encoded string.\n * ```\n *\n * @remarks\n * Note that the sentinel _must not_ be present in the encoded data and\n * _must_ be present in the decoded data for this to work.\n * If this is not the case, dedicated errors will be thrown.\n *\n * ```ts\n * const sentinel = new Uint8Array([108, 108]); // 'll'\n * const codec = addCodecSentinel(getUtf8Codec(), sentinel);\n *\n * codec.encode('hello'); // Throws: sentinel is in encoded data.\n * codec.decode(new Uint8Array([1, 2, 3])); // Throws: sentinel missing in decoded data.\n * ```\n *\n * Separate {@link addEncoderSentinel} and {@link addDecoderSentinel} functions are also available.\n *\n * ```ts\n * const bytes = addEncoderSentinel(getUtf8Encoder(), sentinel).encode('hello');\n * const value = addDecoderSentinel(getUtf8Decoder(), sentinel).decode(bytes);\n * ```\n *\n * @see {@link addEncoderSentinel}\n * @see {@link addDecoderSentinel}\n */\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeCodec<TFrom, TTo>;\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): VariableSizeCodec<TFrom, TTo>;\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): Codec<TFrom, TTo> {\n    return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\n\nfunction findSentinelIndex(bytes: ReadonlyUint8Array, sentinel: ReadonlyUint8Array) {\n    return bytes.findIndex((byte, index, arr) => {\n        if (sentinel.length === 1) return byte === sentinel[0];\n        return containsBytes(arr, sentinel, index);\n    });\n}\n\nfunction hexBytes(bytes: ReadonlyUint8Array): string {\n    return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n","import { SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SolanaError } from '@solana/errors';\n\n/**\n * Ensures that a given number falls within a specified range.\n *\n * If the number is outside the allowed range, an error is thrown.\n * This function is primarily used to validate values before encoding them in a codec.\n *\n * @param codecDescription - A string describing the codec that is performing the validation.\n * @param min - The minimum allowed value (inclusive).\n * @param max - The maximum allowed value (inclusive).\n * @param value - The number to validate.\n *\n * @throws {@link SolanaError} if the value is out of range.\n *\n * @example\n * Validating a number within range.\n * ```ts\n * assertNumberIsBetweenForCodec('u8', 0, 255, 42); // Passes\n * ```\n *\n * @example\n * Throwing an error for an out-of-range value.\n * ```ts\n * assertNumberIsBetweenForCodec('u8', 0, 255, 300); // Throws\n * ```\n */\nexport function assertNumberIsBetweenForCodec(\n    codecDescription: string,\n    min: bigint | number,\n    max: bigint | number,\n    value: bigint | number,\n) {\n    if (value < min || value > max) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n            codecDescription,\n            max,\n            min,\n            value,\n        });\n    }\n}\n","import { assertByteArrayHasEnoughBytesForCodec } from './assertions';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\ntype NumberEncoder = Encoder<bigint | number> | Encoder<number>;\ntype FixedSizeNumberEncoder<TSize extends number = number> =\n    | FixedSizeEncoder<bigint | number, TSize>\n    | FixedSizeEncoder<number, TSize>;\ntype NumberDecoder = Decoder<bigint> | Decoder<number>;\ntype FixedSizeNumberDecoder<TSize extends number = number> =\n    | FixedSizeDecoder<bigint, TSize>\n    | FixedSizeDecoder<number, TSize>;\ntype NumberCodec = Codec<bigint | number, bigint> | Codec<number>;\ntype FixedSizeNumberCodec<TSize extends number = number> =\n    | FixedSizeCodec<bigint | number, bigint, TSize>\n    | FixedSizeCodec<number, number, TSize>;\n\n/**\n * Stores the size of the `encoder` in bytes as a prefix using the `prefix` encoder.\n *\n * See {@link addCodecSizePrefix} for more information.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @see {@link addCodecSizePrefix}\n */\nexport function addEncoderSizePrefix<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    prefix: FixedSizeNumberEncoder,\n): FixedSizeEncoder<TFrom>;\nexport function addEncoderSizePrefix<TFrom>(encoder: Encoder<TFrom>, prefix: NumberEncoder): VariableSizeEncoder<TFrom>;\nexport function addEncoderSizePrefix<TFrom>(encoder: Encoder<TFrom>, prefix: NumberEncoder): Encoder<TFrom> {\n    const write = ((value, bytes, offset) => {\n        // Here we exceptionally use the `encode` function instead of the `write`\n        // function to contain the content of the encoder within its own bounds.\n        const encoderBytes = encoder.encode(value);\n        offset = prefix.write(encoderBytes.length, bytes, offset);\n        bytes.set(encoderBytes, offset);\n        return offset + encoderBytes.length;\n    }) as Encoder<TFrom>['write'];\n\n    if (isFixedSize(prefix) && isFixedSize(encoder)) {\n        return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n    }\n\n    const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : (prefix.maxSize ?? null);\n    const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : (encoder.maxSize ?? null);\n    const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n\n    return createEncoder({\n        ...encoder,\n        ...(maxSize !== null ? { maxSize } : {}),\n        getSizeFromValue: value => {\n            const encoderSize = getEncodedSize(value, encoder);\n            return getEncodedSize(encoderSize, prefix) + encoderSize;\n        },\n        write,\n    });\n}\n\n/**\n * Bounds the size of the nested `decoder` by reading its encoded `prefix`.\n *\n * See {@link addCodecSizePrefix} for more information.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @see {@link addCodecSizePrefix}\n */\nexport function addDecoderSizePrefix<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    prefix: FixedSizeNumberDecoder,\n): FixedSizeDecoder<TTo>;\nexport function addDecoderSizePrefix<TTo>(decoder: Decoder<TTo>, prefix: NumberDecoder): VariableSizeDecoder<TTo>;\nexport function addDecoderSizePrefix<TTo>(decoder: Decoder<TTo>, prefix: NumberDecoder): Decoder<TTo> {\n    const read = ((bytes, offset) => {\n        const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n        const size = Number(bigintSize);\n        offset = decoderOffset;\n        // Slice the byte array to the contained size if necessary.\n        if (offset > 0 || bytes.length > size) {\n            bytes = bytes.slice(offset, offset + size);\n        }\n        assertByteArrayHasEnoughBytesForCodec('addDecoderSizePrefix', size, bytes);\n        // Here we exceptionally use the `decode` function instead of the `read`\n        // function to contain the content of the decoder within its own bounds.\n        return [decoder.decode(bytes), offset + size];\n    }) as Decoder<TTo>['read'];\n\n    if (isFixedSize(prefix) && isFixedSize(decoder)) {\n        return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n    }\n\n    const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : (prefix.maxSize ?? null);\n    const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : (decoder.maxSize ?? null);\n    const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n    return createDecoder({ ...decoder, ...(maxSize !== null ? { maxSize } : {}), read });\n}\n\n/**\n * Stores the byte size of any given codec as an encoded number prefix.\n *\n * This sets a limit on variable-size codecs and tells us when to stop decoding.\n * When encoding, the size of the encoded data is stored before the encoded data itself.\n * When decoding, the size is read first to know how many bytes to read next.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @example\n * For example, say we want to bound a variable-size base-58 string using a `u32` size prefix.\n * Here’s how you can use the `addCodecSizePrefix` function to achieve that.\n *\n * ```ts\n * const getU32Base58Codec = () => addCodecSizePrefix(getBase58Codec(), getU32Codec());\n *\n * getU32Base58Codec().encode('hello world');\n * // 0x0b00000068656c6c6f20776f726c64\n * //   |       └-- Our encoded base-58 string.\n * //   └-- Our encoded u32 size prefix.\n * ```\n *\n * @remarks\n * Separate {@link addEncoderSizePrefix} and {@link addDecoderSizePrefix} functions are also available.\n *\n * ```ts\n * const bytes = addEncoderSizePrefix(getBase58Encoder(), getU32Encoder()).encode('hello');\n * const value = addDecoderSizePrefix(getBase58Decoder(), getU32Decoder()).decode(bytes);\n * ```\n *\n * @see {@link addEncoderSizePrefix}\n * @see {@link addDecoderSizePrefix}\n */\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    prefix: FixedSizeNumberCodec,\n): FixedSizeCodec<TFrom, TTo>;\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefix: NumberCodec,\n): VariableSizeCodec<TFrom, TTo>;\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefix: NumberCodec,\n): Codec<TFrom, TTo> {\n    return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n","import { assertByteArrayHasEnoughBytesForCodec } from './assertions';\nimport { fixBytes } from './bytes';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    Offset,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n/**\n * Creates a fixed-size encoder from a given encoder.\n *\n * The resulting encoder ensures that encoded values always have the specified number of bytes.\n * If the original encoded value is larger than `fixedBytes`, it is truncated.\n * If it is smaller, it is padded with trailing zeroes.\n *\n * For more details, see {@link fixCodecSize}.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @param encoder - The encoder to wrap into a fixed-size encoder.\n * @param fixedBytes - The fixed number of bytes to write.\n * @returns A `FixedSizeEncoder` that ensures a consistent output size.\n *\n * @example\n * ```ts\n * const encoder = fixEncoderSize(getUtf8Encoder(), 4);\n * encoder.encode(\"Hello\"); // 0x48656c6c (truncated)\n * encoder.encode(\"Hi\");    // 0x48690000 (padded)\n * encoder.encode(\"Hiya\");  // 0x48697961 (same length)\n * ```\n *\n * @remarks\n * If you need a full codec with both encoding and decoding, use {@link fixCodecSize}.\n *\n * @see {@link fixCodecSize}\n * @see {@link fixDecoderSize}\n */\nexport function fixEncoderSize<TFrom, TSize extends number>(\n    encoder: Encoder<TFrom>,\n    fixedBytes: TSize,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: fixedBytes,\n        write: (value: TFrom, bytes: Uint8Array, offset: Offset) => {\n            // Here we exceptionally use the `encode` function instead of the `write`\n            // function as using the nested `write` function on a fixed-sized byte\n            // array may result in a out-of-bounds error on the nested encoder.\n            const variableByteArray = encoder.encode(value);\n            const fixedByteArray =\n                variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n            bytes.set(fixedByteArray, offset);\n            return offset + fixedBytes;\n        },\n    });\n}\n\n/**\n * Creates a fixed-size decoder from a given decoder.\n *\n * The resulting decoder always reads exactly `fixedBytes` bytes from the input.\n * If the nested decoder is also fixed-size, the bytes are truncated or padded as needed.\n *\n * For more details, see {@link fixCodecSize}.\n *\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @param decoder - The decoder to wrap into a fixed-size decoder.\n * @param fixedBytes - The fixed number of bytes to read.\n * @returns A `FixedSizeDecoder` that ensures a consistent input size.\n *\n * @example\n * ```ts\n * const decoder = fixDecoderSize(getUtf8Decoder(), 4);\n * decoder.decode(new Uint8Array([72, 101, 108, 108, 111])); // \"Hell\" (truncated)\n * decoder.decode(new Uint8Array([72, 105, 0, 0]));          // \"Hi\" (zeroes ignored)\n * decoder.decode(new Uint8Array([72, 105, 121, 97]));       // \"Hiya\" (same length)\n * ```\n *\n * @remarks\n * If you need a full codec with both encoding and decoding, use {@link fixCodecSize}.\n *\n * @see {@link fixCodecSize}\n * @see {@link fixEncoderSize}\n */\nexport function fixDecoderSize<TTo, TSize extends number>(\n    decoder: Decoder<TTo>,\n    fixedBytes: TSize,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: fixedBytes,\n        read: (bytes, offset) => {\n            assertByteArrayHasEnoughBytesForCodec('fixCodecSize', fixedBytes, bytes, offset);\n            // Slice the byte array to the fixed size if necessary.\n            if (offset > 0 || bytes.length > fixedBytes) {\n                bytes = bytes.slice(offset, offset + fixedBytes);\n            }\n            // If the nested decoder is fixed-size, pad and truncate the byte array accordingly.\n            if (isFixedSize(decoder)) {\n                bytes = fixBytes(bytes, decoder.fixedSize);\n            }\n            // Decode the value using the nested decoder.\n            const [value] = decoder.read(bytes, 0);\n            return [value, offset + fixedBytes];\n        },\n    });\n}\n\n/**\n * Creates a fixed-size codec from a given codec.\n *\n * The resulting codec ensures that both encoding and decoding operate on a fixed number of bytes.\n * When encoding:\n * - If the encoded value is larger than `fixedBytes`, it is truncated.\n * - If it is smaller, it is padded with trailing zeroes.\n * - If it is exactly `fixedBytes`, it remains unchanged.\n *\n * When decoding:\n * - Exactly `fixedBytes` bytes are read from the input.\n * - If the nested decoder has a smaller fixed size, bytes are truncated or padded as necessary.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @param codec - The codec to wrap into a fixed-size codec.\n * @param fixedBytes - The fixed number of bytes to read/write.\n * @returns A `FixedSizeCodec` that ensures both encoding and decoding conform to a fixed size.\n *\n * @example\n * ```ts\n * const codec = fixCodecSize(getUtf8Codec(), 4);\n *\n * const bytes1 = codec.encode(\"Hello\"); // 0x48656c6c (truncated)\n * const value1 = codec.decode(bytes1);  // \"Hell\"\n *\n * const bytes2 = codec.encode(\"Hi\");    // 0x48690000 (padded)\n * const value2 = codec.decode(bytes2);  // \"Hi\"\n *\n * const bytes3 = codec.encode(\"Hiya\");  // 0x48697961 (same length)\n * const value3 = codec.decode(bytes3);  // \"Hiya\"\n * ```\n *\n * @remarks\n * If you only need to enforce a fixed size for encoding, use {@link fixEncoderSize}.\n * If you only need to enforce a fixed size for decoding, use {@link fixDecoderSize}.\n *\n * ```ts\n * const bytes = fixEncoderSize(getUtf8Encoder(), 4).encode(\"Hiya\");\n * const value = fixDecoderSize(getUtf8Decoder(), 4).decode(bytes);\n * ```\n *\n * @see {@link fixEncoderSize}\n * @see {@link fixDecoderSize}\n */\nexport function fixCodecSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: Codec<TFrom, TTo>,\n    fixedBytes: TSize,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n","import { assertByteArrayOffsetIsNotOutOfRange } from './assertions';\nimport { Codec, createDecoder, createEncoder, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\n/**\n * Configuration object for modifying the offset of an encoder, decoder, or codec.\n *\n * This type defines optional functions for adjusting the **pre-offset** (before encoding/decoding)\n * and the **post-offset** (after encoding/decoding). These functions allow precise control\n * over where data is written or read within a byte array.\n *\n * @property preOffset - A function that modifies the offset before encoding or decoding.\n * @property postOffset - A function that modifies the offset after encoding or decoding.\n *\n * @example\n * Moving the pre-offset forward by 2 bytes.\n * ```ts\n * const config: OffsetConfig = {\n *     preOffset: ({ preOffset }) => preOffset + 2,\n * };\n * ```\n *\n * @example\n * Moving the post-offset forward by 2 bytes.\n * ```ts\n * const config: OffsetConfig = {\n *     postOffset: ({ postOffset }) => postOffset + 2,\n * };\n * ```\n *\n * @example\n * Using both pre-offset and post-offset together.\n * ```ts\n * const config: OffsetConfig = {\n *     preOffset: ({ preOffset }) => preOffset + 2,\n *     postOffset: ({ postOffset }) => postOffset + 4,\n * };\n * ```\n *\n * @see {@link offsetEncoder}\n * @see {@link offsetDecoder}\n * @see {@link offsetCodec}\n */\ntype OffsetConfig = {\n    postOffset?: PostOffsetFunction;\n    preOffset?: PreOffsetFunction;\n};\n\n/**\n * Scope provided to the `preOffset` and `postOffset` functions,\n * containing contextual information about the current encoding or decoding process.\n *\n * The pre-offset function modifies where encoding or decoding begins,\n * while the post-offset function modifies where the next operation continues.\n *\n * @property bytes - The entire byte array being encoded or decoded.\n * @property preOffset - The original offset before encoding or decoding starts.\n * @property wrapBytes - A helper function that wraps offsets around the byte array length.\n *\n * @example\n * Using `wrapBytes` to wrap a negative offset to the end of the byte array.\n * ```ts\n * const config: OffsetConfig = {\n *     preOffset: ({ wrapBytes }) => wrapBytes(-4), // Moves to last 4 bytes\n * };\n * ```\n *\n * @example\n * Adjusting the offset dynamically based on the byte array size.\n * ```ts\n * const config: OffsetConfig = {\n *     preOffset: ({ bytes }) => bytes.length > 10 ? 4 : 2,\n * };\n * ```\n *\n * @see {@link PreOffsetFunction}\n * @see {@link PostOffsetFunction}\n */\ntype PreOffsetFunctionScope = {\n    /** The entire byte array. */\n    bytes: ReadonlyUint8Array | Uint8Array;\n    /** The original offset prior to encode or decode. */\n    preOffset: Offset;\n    /** Wraps the offset to the byte array length. */\n    wrapBytes: (offset: Offset) => Offset;\n};\n\n/**\n * A function that modifies the pre-offset before encoding or decoding.\n *\n * This function is used to adjust the starting position before writing\n * or reading data in a byte array.\n *\n * @param scope - The current encoding or decoding context.\n * @returns The new offset at which encoding or decoding should start.\n *\n * @example\n * Skipping the first 2 bytes before writing or reading.\n * ```ts\n * const preOffset: PreOffsetFunction = ({ preOffset }) => preOffset + 2;\n * ```\n *\n * @example\n * Wrapping the offset to ensure it stays within bounds.\n * ```ts\n * const preOffset: PreOffsetFunction = ({ wrapBytes, preOffset }) => wrapBytes(preOffset + 10);\n * ```\n *\n * @see {@link OffsetConfig}\n * @see {@link PreOffsetFunctionScope}\n */\ntype PreOffsetFunction = (scope: PreOffsetFunctionScope) => Offset;\n\n/**\n * A function that modifies the post-offset after encoding or decoding.\n *\n * This function adjusts where the next encoder or decoder should start\n * after the current operation has completed.\n *\n * @param scope - The current encoding or decoding context, including the modified pre-offset\n * and the original post-offset.\n * @returns The new offset at which the next operation should begin.\n *\n * @example\n * Moving the post-offset forward by 4 bytes.\n * ```ts\n * const postOffset: PostOffsetFunction = ({ postOffset }) => postOffset + 4;\n * ```\n *\n * @example\n * Wrapping the post-offset within the byte array length.\n * ```ts\n * const postOffset: PostOffsetFunction = ({ wrapBytes, postOffset }) => wrapBytes(postOffset);\n * ```\n *\n * @example\n * Ensuring a minimum spacing of 8 bytes between values.\n * ```ts\n * const postOffset: PostOffsetFunction = ({ postOffset, newPreOffset }) =>\n *     Math.max(postOffset, newPreOffset + 8);\n * ```\n *\n * @see {@link OffsetConfig}\n * @see {@link PreOffsetFunctionScope}\n */\ntype PostOffsetFunction = (\n    scope: PreOffsetFunctionScope & {\n        /** The modified offset used to encode or decode. */\n        newPreOffset: Offset;\n        /** The original offset returned by the encoder or decoder. */\n        postOffset: Offset;\n    },\n) => Offset;\n\n/**\n * Moves the offset of a given encoder before and/or after encoding.\n *\n * This function allows an encoder to write its encoded value at a different offset\n * than the one originally provided. It supports both pre-offset adjustments\n * (before encoding) and post-offset adjustments (after encoding).\n *\n * The pre-offset function determines where encoding should start, while the\n * post-offset function adjusts where the next encoder should continue writing.\n *\n * For more details, see {@link offsetCodec}.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @param encoder - The encoder to adjust.\n * @param config - An object specifying how the offset should be modified.\n * @returns A new encoder with adjusted offsets.\n *\n * @example\n * Moving the pre-offset forward by 2 bytes.\n * ```ts\n * const encoder = offsetEncoder(getU32Encoder(), {\n *     preOffset: ({ preOffset }) => preOffset + 2,\n * });\n * const bytes = new Uint8Array(10);\n * encoder.write(42, bytes, 0); // Actually written at offset 2\n * ```\n *\n * @example\n * Moving the post-offset forward by 2 bytes.\n * ```ts\n * const encoder = offsetEncoder(getU32Encoder(), {\n *     postOffset: ({ postOffset }) => postOffset + 2,\n * });\n * const bytes = new Uint8Array(10);\n * const nextOffset = encoder.write(42, bytes, 0); // Next encoder starts at offset 6 instead of 4\n * ```\n *\n * @example\n * Using `wrapBytes` to ensure an offset wraps around the byte array length.\n * ```ts\n * const encoder = offsetEncoder(getU32Encoder(), {\n *     preOffset: ({ wrapBytes }) => wrapBytes(-4), // Moves offset to last 4 bytes of the array\n * });\n * const bytes = new Uint8Array(10);\n * encoder.write(42, bytes, 0); // Writes at bytes.length - 4\n * ```\n *\n * @remarks\n * If you need both encoding and decoding offsets to be adjusted, use {@link offsetCodec}.\n *\n * @see {@link offsetCodec}\n * @see {@link offsetDecoder}\n */\nexport function offsetEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, config: OffsetConfig): TEncoder {\n    return createEncoder({\n        ...encoder,\n        write: (value, bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPreOffset, bytes.length);\n            const postOffset = encoder.write(value, bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPostOffset, bytes.length);\n            return newPostOffset;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Moves the offset of a given decoder before and/or after decoding.\n *\n * This function allows a decoder to read its input from a different offset\n * than the one originally provided. It supports both pre-offset adjustments\n * (before decoding) and post-offset adjustments (after decoding).\n *\n * The pre-offset function determines where decoding should start, while the\n * post-offset function adjusts where the next decoder should continue reading.\n *\n * For more details, see {@link offsetCodec}.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @param decoder - The decoder to adjust.\n * @param config - An object specifying how the offset should be modified.\n * @returns A new decoder with adjusted offsets.\n *\n * @example\n * Moving the pre-offset forward by 2 bytes.\n * ```ts\n * const decoder = offsetDecoder(getU32Decoder(), {\n *     preOffset: ({ preOffset }) => preOffset + 2,\n * });\n * const bytes = new Uint8Array([0, 0, 42, 0]); // Value starts at offset 2\n * decoder.read(bytes, 0); // Actually reads from offset 2\n * ```\n *\n * @example\n * Moving the post-offset forward by 2 bytes.\n * ```ts\n * const decoder = offsetDecoder(getU32Decoder(), {\n *     postOffset: ({ postOffset }) => postOffset + 2,\n * });\n * const bytes = new Uint8Array([42, 0, 0, 0]);\n * const [value, nextOffset] = decoder.read(bytes, 0); // Next decoder starts at offset 6 instead of 4\n * ```\n *\n * @example\n * Using `wrapBytes` to read from the last 4 bytes of an array.\n * ```ts\n * const decoder = offsetDecoder(getU32Decoder(), {\n *     preOffset: ({ wrapBytes }) => wrapBytes(-4), // Moves offset to last 4 bytes of the array\n * });\n * const bytes = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 42]); // Value stored at the last 4 bytes\n * decoder.read(bytes, 0); // Reads from bytes.length - 4\n * ```\n *\n * @remarks\n * If you need both encoding and decoding offsets to be adjusted, use {@link offsetCodec}.\n *\n * @see {@link offsetCodec}\n * @see {@link offsetEncoder}\n */\nexport function offsetDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, config: OffsetConfig): TDecoder {\n    return createDecoder({\n        ...decoder,\n        read: (bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPreOffset, bytes.length);\n            const [value, postOffset] = decoder.read(bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPostOffset, bytes.length);\n            return [value, newPostOffset];\n        },\n    }) as TDecoder;\n}\n\n/**\n * Moves the offset of a given codec before and/or after encoding and decoding.\n *\n * This function allows a codec to encode and decode values at custom offsets\n * within a byte array. It modifies both the **pre-offset** (where encoding/decoding starts)\n * and the **post-offset** (where the next operation should continue).\n *\n * This is particularly useful when working with structured binary formats\n * that require skipping reserved bytes, inserting padding, or aligning fields at\n * specific locations.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @param codec - The codec to adjust.\n * @param config - An object specifying how the offset should be modified.\n * @returns A new codec with adjusted offsets.\n *\n * @example\n * Moving the pre-offset forward by 2 bytes when encoding and decoding.\n * ```ts\n * const codec = offsetCodec(getU32Codec(), {\n *     preOffset: ({ preOffset }) => preOffset + 2,\n * });\n * const bytes = new Uint8Array(10);\n * codec.write(42, bytes, 0); // Actually written at offset 2\n * codec.read(bytes, 0);      // Actually read from offset 2\n * ```\n *\n * @example\n * Moving the post-offset forward by 2 bytes when encoding and decoding.\n * ```ts\n * const codec = offsetCodec(getU32Codec(), {\n *     postOffset: ({ postOffset }) => postOffset + 2,\n * });\n * const bytes = new Uint8Array(10);\n * codec.write(42, bytes, 0);\n * // Next encoding starts at offset 6 instead of 4\n * codec.read(bytes, 0);\n * // Next decoding starts at offset 6 instead of 4\n * ```\n *\n * @example\n * Using `wrapBytes` to loop around negative offsets.\n * ```ts\n * const codec = offsetCodec(getU32Codec(), {\n *     preOffset: ({ wrapBytes }) => wrapBytes(-4), // Moves offset to last 4 bytes\n * });\n * const bytes = new Uint8Array(10);\n * codec.write(42, bytes, 0); // Writes at bytes.length - 4\n * codec.read(bytes, 0); // Reads from bytes.length - 4\n * ```\n *\n * @remarks\n * If you only need to adjust offsets for encoding, use {@link offsetEncoder}.\n * If you only need to adjust offsets for decoding, use {@link offsetDecoder}.\n *\n * ```ts\n * const bytes = new Uint8Array(10);\n * offsetEncoder(getU32Encoder(), { preOffset: ({ preOffset }) => preOffset + 2 }).write(42, bytes, 0);\n * const [value] = offsetDecoder(getU32Decoder(), { preOffset: ({ preOffset }) => preOffset + 2 }).read(bytes, 0);\n * ```\n *\n * @see {@link offsetEncoder}\n * @see {@link offsetDecoder}\n */\nexport function offsetCodec<TCodec extends AnyCodec>(codec: TCodec, config: OffsetConfig): TCodec {\n    return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config)) as TCodec;\n}\n\n/** A modulo function that handles negative dividends and zero divisors. */\nfunction modulo(dividend: number, divisor: number) {\n    if (divisor === 0) return 0;\n    return ((dividend % divisor) + divisor) % divisor;\n}\n","import { SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SolanaError } from '@solana/errors';\n\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\n/**\n * Updates the size of a given encoder.\n *\n * This function modifies the size of an encoder using a provided transformation function.\n * For fixed-size encoders, it updates the `fixedSize` property, and for variable-size\n * encoders, it adjusts the size calculation based on the encoded value.\n *\n * If the new size is negative, an error will be thrown.\n *\n * For more details, see {@link resizeCodec}.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TSize - The original fixed size of the encoded value.\n * @typeParam TNewSize - The new fixed size after resizing.\n *\n * @param encoder - The encoder whose size will be updated.\n * @param resize - A function that takes the current size and returns the new size.\n * @returns A new encoder with the updated size.\n *\n * @example\n * Increasing the size of a `u16` encoder by 2 bytes.\n * ```ts\n * const encoder = resizeEncoder(getU16Encoder(), size => size + 2);\n * encoder.encode(0xffff); // 0xffff0000 (two extra bytes added)\n * ```\n *\n * @example\n * Shrinking a `u32` encoder to only use 2 bytes.\n * ```ts\n * const encoder = resizeEncoder(getU32Encoder(), () => 2);\n * encoder.fixedSize; // 2\n * ```\n *\n * @see {@link resizeCodec}\n * @see {@link resizeDecoder}\n */\nexport function resizeEncoder<TFrom, TSize extends number, TNewSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeEncoder<TFrom, TNewSize>;\nexport function resizeEncoder<TEncoder extends AnyEncoder>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder;\nexport function resizeEncoder<TEncoder extends AnyEncoder>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder {\n    if (isFixedSize(encoder)) {\n        const fixedSize = resize(encoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeEncoder',\n            });\n        }\n        return createEncoder({ ...encoder, fixedSize }) as TEncoder;\n    }\n    return createEncoder({\n        ...encoder,\n        getSizeFromValue: value => {\n            const newSize = resize(encoder.getSizeFromValue(value));\n            if (newSize < 0) {\n                throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                    bytesLength: newSize,\n                    codecDescription: 'resizeEncoder',\n                });\n            }\n            return newSize;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Updates the size of a given decoder.\n *\n * This function modifies the size of a decoder using a provided transformation function.\n * For fixed-size decoders, it updates the `fixedSize` property to reflect the new size.\n * Variable-size decoders remain unchanged, as their size is determined dynamically.\n *\n * If the new size is negative, an error will be thrown.\n *\n * For more details, see {@link resizeCodec}.\n *\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The original fixed size of the decoded value.\n * @typeParam TNewSize - The new fixed size after resizing.\n *\n * @param decoder - The decoder whose size will be updated.\n * @param resize - A function that takes the current size and returns the new size.\n * @returns A new decoder with the updated size.\n *\n * @example\n * Expanding a `u16` decoder to read 4 bytes instead of 2.\n * ```ts\n * const decoder = resizeDecoder(getU16Decoder(), size => size + 2);\n * decoder.fixedSize; // 4\n * ```\n *\n * @example\n * Shrinking a `u32` decoder to only read 2 bytes.\n * ```ts\n * const decoder = resizeDecoder(getU32Decoder(), () => 2);\n * decoder.fixedSize; // 2\n * ```\n *\n * @see {@link resizeCodec}\n * @see {@link resizeEncoder}\n */\nexport function resizeDecoder<TFrom, TSize extends number, TNewSize extends number>(\n    decoder: FixedSizeDecoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeDecoder<TFrom, TNewSize>;\nexport function resizeDecoder<TDecoder extends AnyDecoder>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder;\nexport function resizeDecoder<TDecoder extends AnyDecoder>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder {\n    if (isFixedSize(decoder)) {\n        const fixedSize = resize(decoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeDecoder',\n            });\n        }\n        return createDecoder({ ...decoder, fixedSize }) as TDecoder;\n    }\n    return decoder;\n}\n\n/**\n * Updates the size of a given codec.\n *\n * This function modifies the size of both the codec using a provided\n * transformation function. It is useful for adjusting the allocated byte size for\n * encoding and decoding without altering the underlying data structure.\n *\n * If the new size is negative, an error will be thrown.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The original fixed size of the encoded/decoded value (for fixed-size codecs).\n * @typeParam TNewSize - The new fixed size after resizing (for fixed-size codecs).\n *\n * @param codec - The codec whose size will be updated.\n * @param resize - A function that takes the current size and returns the new size.\n * @returns A new codec with the updated size.\n *\n * @example\n * Expanding a `u16` codec from 2 to 4 bytes.\n * ```ts\n * const codec = resizeCodec(getU16Codec(), size => size + 2);\n * const bytes = codec.encode(0xffff); // 0xffff0000 (two extra bytes added)\n * const value = codec.decode(bytes);  // 0xffff (reads original two bytes)\n * ```\n *\n * @example\n * Shrinking a `u32` codec to only use 2 bytes.\n * ```ts\n * const codec = resizeCodec(getU32Codec(), () => 2);\n * codec.fixedSize; // 2\n * ```\n *\n * @remarks\n * If you only need to resize an encoder, use {@link resizeEncoder}.\n * If you only need to resize a decoder, use {@link resizeDecoder}.\n *\n * ```ts\n * const bytes = resizeEncoder(getU32Encoder(), (size) => size + 2).encode(0xffff);\n * const value = resizeDecoder(getU32Decoder(), (size) => size + 2).decode(bytes);\n * ```\n *\n * @see {@link resizeEncoder}\n * @see {@link resizeDecoder}\n */\nexport function resizeCodec<TFrom, TTo extends TFrom, TSize extends number, TNewSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeCodec<TFrom, TTo, TNewSize>;\nexport function resizeCodec<TCodec extends AnyCodec>(codec: TCodec, resize: (size: number) => number): TCodec;\nexport function resizeCodec<TCodec extends AnyCodec>(codec: TCodec, resize: (size: number) => number): TCodec {\n    return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize)) as TCodec;\n}\n","import { Codec, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\nimport { offsetDecoder, offsetEncoder } from './offset-codec';\nimport { resizeDecoder, resizeEncoder } from './resize-codec';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\n/**\n * Adds left padding to the given encoder, shifting the encoded value forward\n * by `offset` bytes whilst increasing the size of the encoder accordingly.\n *\n * For more details, see {@link padLeftCodec}.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @param encoder - The encoder to pad.\n * @param offset - The number of padding bytes to add before encoding.\n * @returns A new encoder with left padding applied.\n *\n * @example\n * ```ts\n * const encoder = padLeftEncoder(getU16Encoder(), 2);\n * const bytes = encoder.encode(0xffff); // 0x0000ffff (0xffff written at offset 2)\n * ```\n *\n * @see {@link padLeftCodec}\n * @see {@link padLeftDecoder}\n */\nexport function padLeftEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given encoder, extending the encoded value by `offset`\n * bytes whilst increasing the size of the encoder accordingly.\n *\n * For more details, see {@link padRightCodec}.\n *\n * @typeParam TFrom - The type of the value to encode.\n *\n * @param encoder - The encoder to pad.\n * @param offset - The number of padding bytes to add after encoding.\n * @returns A new encoder with right padding applied.\n *\n * @example\n * ```ts\n * const encoder = padRightEncoder(getU16Encoder(), 2);\n * const bytes = encoder.encode(0xffff); // 0xffff0000 (two extra bytes added at the end)\n * ```\n *\n * @see {@link padRightCodec}\n * @see {@link padRightDecoder}\n */\nexport function padRightEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given decoder, shifting the decoding position forward\n * by `offset` bytes whilst increasing the size of the decoder accordingly.\n *\n * For more details, see {@link padLeftCodec}.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @param decoder - The decoder to pad.\n * @param offset - The number of padding bytes to skip before decoding.\n * @returns A new decoder with left padding applied.\n *\n * @example\n * ```ts\n * const decoder = padLeftDecoder(getU16Decoder(), 2);\n * const value = decoder.decode(new Uint8Array([0, 0, 0x12, 0x34])); // 0xffff (reads from offset 2)\n * ```\n *\n * @see {@link padLeftCodec}\n * @see {@link padLeftEncoder}\n */\nexport function padLeftDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given decoder, extending the post-offset by `offset`\n * bytes whilst increasing the size of the decoder accordingly.\n *\n * For more details, see {@link padRightCodec}.\n *\n * @typeParam TTo - The type of the decoded value.\n *\n * @param decoder - The decoder to pad.\n * @param offset - The number of padding bytes to skip after decoding.\n * @returns A new decoder with right padding applied.\n *\n * @example\n * ```ts\n * const decoder = padRightDecoder(getU16Decoder(), 2);\n * const value = decoder.decode(new Uint8Array([0x12, 0x34, 0, 0])); // 0xffff (ignores trailing bytes)\n * ```\n *\n * @see {@link padRightCodec}\n * @see {@link padRightEncoder}\n */\nexport function padRightDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given codec, shifting the encoding and decoding positions\n * forward by `offset` bytes whilst increasing the size of the codec accordingly.\n *\n * This ensures that values are read and written at a later position in the byte array,\n * while the padding bytes remain unused.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @param codec - The codec to pad.\n * @param offset - The number of padding bytes to add before encoding and decoding.\n * @returns A new codec with left padding applied.\n *\n * @example\n * ```ts\n * const codec = padLeftCodec(getU16Codec(), 2);\n * const bytes = codec.encode(0xffff); // 0x0000ffff (0xffff written at offset 2)\n * const value = codec.decode(bytes);  // 0xffff (reads from offset 2)\n * ```\n *\n * @remarks\n * If you only need to apply padding for encoding, use {@link padLeftEncoder}.\n * If you only need to apply padding for decoding, use {@link padLeftDecoder}.\n *\n * ```ts\n * const bytes = padLeftEncoder(getU16Encoder(), 2).encode(0xffff);\n * const value = padLeftDecoder(getU16Decoder(), 2).decode(bytes);\n * ```\n *\n * @see {@link padLeftEncoder}\n * @see {@link padLeftDecoder}\n */\nexport function padLeftCodec<TCodec extends AnyCodec>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset)) as TCodec;\n}\n\n/**\n * Adds right padding to the given codec, extending the encoded and decoded value\n * by `offset` bytes whilst increasing the size of the codec accordingly.\n *\n * The extra bytes remain unused, ensuring that the next operation starts further\n * along the byte array.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n *\n * @param codec - The codec to pad.\n * @param offset - The number of padding bytes to add after encoding and decoding.\n * @returns A new codec with right padding applied.\n *\n * @example\n * ```ts\n * const codec = padRightCodec(getU16Codec(), 2);\n * const bytes = codec.encode(0xffff); // 0xffff0000 (two extra bytes added)\n * const value = codec.decode(bytes);  // 0xffff (ignores padding bytes)\n * ```\n *\n * @remarks\n * If you only need to apply padding for encoding, use {@link padRightEncoder}.\n * If you only need to apply padding for decoding, use {@link padRightDecoder}.\n *\n * ```ts\n * const bytes = padRightEncoder(getU16Encoder(), 2).encode(0xffff);\n * const value = padRightDecoder(getU16Decoder(), 2).decode(bytes);\n * ```\n *\n * @see {@link padRightEncoder}\n * @see {@link padRightDecoder}\n */\nexport function padRightCodec<TCodec extends AnyCodec>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset)) as TCodec;\n}\n","import {\n    assertIsFixedSize,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\nfunction copySourceToTargetInReverse(\n    source: ReadonlyUint8Array,\n    target_WILL_MUTATE: Uint8Array,\n    sourceOffset: number,\n    sourceLength: number,\n    targetOffset: number = 0,\n) {\n    while (sourceOffset < --sourceLength) {\n        const leftValue = source[sourceOffset];\n        target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n        target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n        sourceOffset++;\n    }\n    if (sourceOffset === sourceLength) {\n        target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n    }\n}\n\n/**\n * Reverses the bytes of a fixed-size encoder.\n *\n * Given a `FixedSizeEncoder`, this function returns a new `FixedSizeEncoder` that\n * reverses the bytes within the fixed-size byte array when encoding.\n *\n * This can be useful to modify endianness or for other byte-order transformations.\n *\n * For more details, see {@link reverseCodec}.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TSize - The fixed size of the encoded value in bytes.\n *\n * @param encoder - The fixed-size encoder to reverse.\n * @returns A new encoder that writes bytes in reverse order.\n *\n * @example\n * Encoding a `u16` value in reverse order.\n * ```ts\n * const encoder = reverseEncoder(getU16Encoder({ endian: Endian.Big }));\n * const bytes = encoder.encode(0x1234); // 0x3412 (bytes are flipped)\n * ```\n *\n * @see {@link reverseCodec}\n * @see {@link reverseDecoder}\n */\nexport function reverseEncoder<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    assertIsFixedSize(encoder);\n    return createEncoder({\n        ...encoder,\n        write: (value: TFrom, bytes, offset) => {\n            const newOffset = encoder.write(value, bytes, offset);\n            copySourceToTargetInReverse(\n                bytes /* source */,\n                bytes /* target_WILL_MUTATE */,\n                offset /* sourceOffset */,\n                offset + encoder.fixedSize /* sourceLength */,\n            );\n            return newOffset;\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size decoder.\n *\n * Given a `FixedSizeDecoder`, this function returns a new `FixedSizeDecoder` that\n * reverses the bytes within the fixed-size byte array before decoding.\n *\n * This can be useful to modify endianness or for other byte-order transformations.\n *\n * For more details, see {@link reverseCodec}.\n *\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the decoded value in bytes.\n *\n * @param decoder - The fixed-size decoder to reverse.\n * @returns A new decoder that reads bytes in reverse order.\n *\n * @example\n * Decoding a reversed `u16` value.\n * ```ts\n * const decoder = reverseDecoder(getU16Decoder({ endian: Endian.Big }));\n * const value = decoder.decode(new Uint8Array([0x34, 0x12])); // 0x1234 (bytes are flipped back)\n * ```\n *\n * @see {@link reverseCodec}\n * @see {@link reverseEncoder}\n */\nexport function reverseDecoder<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    assertIsFixedSize(decoder);\n    return createDecoder({\n        ...decoder,\n        read: (bytes, offset) => {\n            const reversedBytes = bytes.slice();\n            copySourceToTargetInReverse(\n                bytes /* source */,\n                reversedBytes /* target_WILL_MUTATE */,\n                offset /* sourceOffset */,\n                offset + decoder.fixedSize /* sourceLength */,\n            );\n            return decoder.read(reversedBytes, offset);\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size codec.\n *\n * Given a `FixedSizeCodec`, this function returns a new `FixedSizeCodec` that\n * reverses the bytes within the fixed-size byte array during encoding and decoding.\n *\n * This can be useful to modify endianness or for other byte-order transformations.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value.\n * @typeParam TSize - The fixed size of the encoded/decoded value in bytes.\n *\n * @param codec - The fixed-size codec to reverse.\n * @returns A new codec that encodes and decodes bytes in reverse order.\n *\n * @example\n * Reversing a `u16` codec.\n * ```ts\n * const codec = reverseCodec(getU16Codec({ endian: Endian.Big }));\n * const bytes = codec.encode(0x1234); // 0x3412 (bytes are flipped)\n * const value = codec.decode(bytes);  // 0x1234 (bytes are flipped back)\n * ```\n *\n * @remarks\n * If you only need to reverse an encoder, use {@link reverseEncoder}.\n * If you only need to reverse a decoder, use {@link reverseDecoder}.\n *\n * ```ts\n * const bytes = reverseEncoder(getU16Encoder()).encode(0x1234);\n * const value = reverseDecoder(getU16Decoder()).decode(bytes);\n * ```\n *\n * @see {@link reverseEncoder}\n * @see {@link reverseDecoder}\n */\nexport function reverseCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n","import {\n    Codec,\n    createCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isVariableSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Transforms an encoder by mapping its input values.\n *\n * This function takes an existing `Encoder<A>` and returns an `Encoder<B>`, allowing values of type `B`\n * to be converted into values of type `A` before encoding. The transformation is applied via the `unmap` function.\n *\n * This is useful for handling type conversions, applying default values, or structuring data before encoding.\n *\n * For more details, see {@link transformCodec}.\n *\n * @typeParam TOldFrom - The original type expected by the encoder.\n * @typeParam TNewFrom - The new type that will be transformed before encoding.\n *\n * @param encoder - The encoder to transform.\n * @param unmap - A function that converts values of `TNewFrom` into `TOldFrom` before encoding.\n * @returns A new encoder that accepts `TNewFrom` values and transforms them before encoding.\n *\n * @example\n * Encoding a string by counting its characters and storing the length as a `u32`.\n * ```ts\n * const encoder = transformEncoder(getU32Encoder(), (value: string) => value.length);\n * encoder.encode(\"hello\"); // 0x05000000 (stores length 5)\n * ```\n *\n * @see {@link transformCodec}\n * @see {@link transformDecoder}\n */\nexport function transformEncoder<TOldFrom, TNewFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TOldFrom, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeEncoder<TNewFrom, TSize>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: VariableSizeEncoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeEncoder<TNewFrom>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom> {\n    return createEncoder({\n        ...(isVariableSize(encoder)\n            ? { ...encoder, getSizeFromValue: (value: TNewFrom) => encoder.getSizeFromValue(unmap(value)) }\n            : encoder),\n        write: (value: TNewFrom, bytes, offset) => encoder.write(unmap(value), bytes, offset),\n    });\n}\n\n/**\n * Transforms a decoder by mapping its output values.\n *\n * This function takes an existing `Decoder<A>` and returns a `Decoder<B>`, allowing values of type `A`\n * to be converted into values of type `B` after decoding. The transformation is applied via the `map` function.\n *\n * This is useful for post-processing, type conversions, or enriching decoded data.\n *\n * For more details, see {@link transformCodec}.\n *\n * @typeParam TOldTo - The original type returned by the decoder.\n * @typeParam TNewTo - The new type that will be transformed after decoding.\n *\n * @param decoder - The decoder to transform.\n * @param map - A function that converts values of `TOldTo` into `TNewTo` after decoding.\n * @returns A new decoder that decodes into `TNewTo`.\n *\n * @example\n * Decoding a stored `u32` length into a string of `'x'` characters.\n * ```ts\n * const decoder = transformDecoder(getU32Decoder(), (length) => 'x'.repeat(length));\n * decoder.decode(new Uint8Array([0x05, 0x00, 0x00, 0x00])); // \"xxxxx\"\n * ```\n *\n * @see {@link transformCodec}\n * @see {@link transformEncoder}\n */\nexport function transformDecoder<TOldTo, TNewTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TOldTo, TSize>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): FixedSizeDecoder<TNewTo, TSize>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: VariableSizeDecoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): VariableSizeDecoder<TNewTo>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo> {\n    return createDecoder({\n        ...decoder,\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset) => {\n            const [value, newOffset] = decoder.read(bytes, offset);\n            return [map(value, bytes, offset), newOffset];\n        },\n    });\n}\n\n/**\n * Transforms a codec by mapping its input and output values.\n *\n * This function takes an existing `Codec<A, B>` and returns a `Codec<C, D>`, allowing:\n * - Values of type `C` to be transformed into `A` before encoding.\n * - Values of type `B` to be transformed into `D` after decoding.\n *\n * This is useful for adapting codecs to work with different representations, handling default values, or\n * converting between primitive and structured types.\n *\n * @typeParam TOldFrom - The original type expected by the codec.\n * @typeParam TNewFrom - The new type that will be transformed before encoding.\n * @typeParam TOldTo - The original type returned by the codec.\n * @typeParam TNewTo - The new type that will be transformed after decoding.\n *\n * @param codec - The codec to transform.\n * @param unmap - A function that converts values of `TNewFrom` into `TOldFrom` before encoding.\n * @param map - A function that converts values of `TOldTo` into `TNewTo` after decoding (optional).\n * @returns A new codec that encodes `TNewFrom` and decodes into `TNewTo`.\n *\n * @example\n * Mapping a `u32` codec to encode string lengths and decode them into `'x'` characters.\n * ```ts\n * const codec = transformCodec(\n *     getU32Codec(),\n *     (value: string) => value.length, // Encode string length\n *     (length) => 'x'.repeat(length)  // Decode length into a string of 'x's\n * );\n *\n * const bytes = codec.encode(\"hello\"); // 0x05000000 (stores length 5)\n * const value = codec.decode(bytes);   // \"xxxxx\"\n * ```\n *\n * @remarks\n * If only input transformation is needed, use {@link transformEncoder}.\n * If only output transformation is needed, use {@link transformDecoder}.\n *\n * ```ts\n * const bytes = transformEncoder(getU32Encoder(), (value: string) => value.length).encode(\"hello\");\n * const value = transformDecoder(getU32Decoder(), (length) => 'x'.repeat(length)).decode(bytes);\n * ```\n *\n * @see {@link transformEncoder}\n * @see {@link transformDecoder}\n */\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom, TSize extends number>(\n    codec: FixedSizeCodec<TOldFrom, TTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeCodec<TNewFrom, TTo, TSize>;\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: VariableSizeCodec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeCodec<TNewFrom, TTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: Codec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Codec<TNewFrom, TTo>;\nexport function transformCodec<\n    TOldFrom,\n    TNewFrom,\n    TOldTo extends TOldFrom,\n    TNewTo extends TNewFrom,\n    TSize extends number,\n>(\n    codec: FixedSizeCodec<TOldFrom, TOldTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): FixedSizeCodec<TNewFrom, TNewTo, TSize>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: VariableSizeCodec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): VariableSizeCodec<TNewFrom, TNewTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map?: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo> {\n    return createCodec({\n        ...transformEncoder(codec, unmap),\n        read: map ? transformDecoder(codec, map).read : (codec.read as unknown as Decoder<TNewTo>['read']),\n    });\n}\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar call = require('../internals/function-call');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toIndexedObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar RangeError = globalThis.RangeError;\nvar Int8Array = globalThis.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar $set = Int8ArrayPrototype && Int8ArrayPrototype.set;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Uint8ClampedArray(2);\n  call($set, array, { length: 1, 0: 3 }, 1);\n  return array[1] !== 3;\n});\n\n// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other\nvar TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {\n  var array = new Int8Array(2);\n  array.set(1);\n  array.set('2', 1);\n  return array[0] !== 0 || array[1] !== 2;\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var src = toIndexedObject(arrayLike);\n  if (WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);\n  var length = this.length;\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw new RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, !WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transferToFixedLength` method\n// https://tc39.es/ecma262/#sec-arraybuffer.prototype.transfertofixedlength\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transferToFixedLength: function transferToFixedLength() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, false);\n  }\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar toIndex = require('../internals/to-index');\nvar notDetached = require('../internals/array-buffer-not-detached');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\nvar detachTransferable = require('../internals/detach-transferable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar DataView = globalThis.DataView;\nvar min = Math.min;\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\nvar DataViewPrototype = DataView.prototype;\nvar slice = uncurryThis(ArrayBufferPrototype.slice);\nvar isResizable = uncurryThisAccessor(ArrayBufferPrototype, 'resizable', 'get');\nvar maxByteLength = uncurryThisAccessor(ArrayBufferPrototype, 'maxByteLength', 'get');\nvar getInt8 = uncurryThis(DataViewPrototype.getInt8);\nvar setInt8 = uncurryThis(DataViewPrototype.setInt8);\n\nmodule.exports = (PROPER_STRUCTURED_CLONE_TRANSFER || detachTransferable) && function (arrayBuffer, newLength, preserveResizability) {\n  var byteLength = arrayBufferByteLength(arrayBuffer);\n  var newByteLength = newLength === undefined ? byteLength : toIndex(newLength);\n  var fixedLength = !isResizable || !isResizable(arrayBuffer);\n  var newBuffer;\n  notDetached(arrayBuffer);\n  if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n    arrayBuffer = structuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;\n  }\n  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {\n    newBuffer = slice(arrayBuffer, 0, newByteLength);\n  } else {\n    var options = preserveResizability && !fixedLength && maxByteLength ? { maxByteLength: maxByteLength(arrayBuffer) } : undefined;\n    newBuffer = new ArrayBuffer(newByteLength, options);\n    var a = new DataView(arrayBuffer);\n    var b = new DataView(newBuffer);\n    var copyLength = min(newByteLength, byteLength);\n    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));\n  }\n  if (!PROPER_STRUCTURED_CLONE_TRANSFER) detachTransferable(arrayBuffer);\n  return newBuffer;\n};\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Find code of next character\n      var charCode = source.charCodeAt(psz)\n            // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n            // Decode character\n      var carry = BASE_MAP[charCode]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n",null,"'use strict';\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// Bug in WebKit. It should truncate a negative fractional index to zero, but instead throws an error\nvar THROW_ON_NEGATIVE_FRACTIONAL_INDEX = PROPER_ORDER && function () {\n  try {\n    // eslint-disable-next-line es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](-0.5, 1);\n  } catch (error) {\n    return true;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER || THROW_ON_NEGATIVE_FRACTIONAL_INDEX);\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n",null,null,"/**\n * To add a new error, follow the instructions at\n * https://github.com/anza-xyz/kit/tree/main/packages/errors/#adding-a-new-error\n *\n * @module\n * @privateRemarks\n * WARNING:\n *   - Don't remove error codes\n *   - Don't change or reorder error codes.\n *\n * Good naming conventions:\n *   - Prefixing common errors — e.g. under the same package — can be a good way to namespace them. E.g. All codec-related errors start with `SOLANA_ERROR__CODECS__`.\n *   - Use consistent names — e.g. choose `PDA` or `PROGRAM_DERIVED_ADDRESS` and stick with it. Ensure your names are consistent with existing error codes. The decision might have been made for you.\n *   - Recommended prefixes and suffixes:\n *     - `MALFORMED_`: Some input was not constructed properly. E.g. `MALFORMED_BASE58_ENCODED_ADDRESS`.\n *     - `INVALID_`: Some input is invalid (other than because it was MALFORMED). E.g. `INVALID_NUMBER_OF_BYTES`.\n *     - `EXPECTED_`: Some input was different than expected, no need to specify the \"GOT\" part unless necessary. E.g. `EXPECTED_DECODED_ACCOUNT`.\n *     - `_CANNOT_`: Some operation cannot be performed or some input cannot be used due to some condition. E.g. `CANNOT_DECODE_EMPTY_BYTE_ARRAY` or `PDA_CANNOT_END_WITH_PDA_MARKER`.\n *     - `_MUST_BE_`: Some condition must be true. E.g. `NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE`.\n *     - `_FAILED_TO_`: Tried to perform some operation and failed. E.g. `FAILED_TO_DECODE_ACCOUNT`.\n *     - `_NOT_FOUND`: Some operation lead to not finding something. E.g. `ACCOUNT_NOT_FOUND`.\n *     - `_OUT_OF_RANGE`: Some value is out of range. E.g. `ENUM_DISCRIMINATOR_OUT_OF_RANGE`.\n *     - `_EXCEEDED`: Some limit was exceeded. E.g. `PDA_MAX_SEED_LENGTH_EXCEEDED`.\n *     - `_MISMATCH`: Some elements do not match. E.g. `ENCODER_DECODER_FIXED_SIZE_MISMATCH`.\n *     - `_MISSING`: Some required input is missing. E.g. `TRANSACTION_FEE_PAYER_MISSING`.\n *     - `_UNIMPLEMENTED`: Some required component is not available in the environment. E.g. `SUBTLE_CRYPTO_VERIFY_FUNCTION_UNIMPLEMENTED`.\n */\nexport const SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nexport const SOLANA_ERROR__INVALID_NONCE = 2;\nexport const SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nexport const SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nexport const SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nexport const SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nexport const SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nexport const SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nexport const SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nexport const SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR = 10;\n\n// JSON-RPC-related errors.\n// Reserve error codes in the range [-32768, -32000]\n// Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-api/src/custom_error.rs\nexport const SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nexport const SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nexport const SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nexport const SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\n\n// Addresses-related errors.\n// Reserve error codes in the range [2800000-2800999].\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 2800000;\nexport const SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nexport const SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nexport const SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nexport const SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nexport const SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nexport const SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nexport const SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS = 2800011;\n\n// Account-related errors.\n// Reserve error codes in the range [3230000-3230999].\nexport const SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 3230000;\nexport const SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nexport const SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\n\n// Subtle-Crypto-related errors.\n// Reserve error codes in the range [3610000-3610999].\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 3610000;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\n\n// Crypto-related errors.\n// Reserve error codes in the range [3611000-3611050].\nexport const SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611000;\n\n// Key-related errors.\n// Reserve error codes in the range [3704000-3704999].\nexport const SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704000;\nexport const SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nexport const SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nexport const SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nexport const SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\n\n// Instruction-related errors.\n// Reserve error codes in the range [4128000-4128999].\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128000;\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nexport const SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\n\n// Instruction errors.\n// Reserve error codes starting with [4615000-4615999] for the Rust enum `InstructionError`.\n// Error names here are dictated by the RPC (see ./instruction-error.ts).\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615000;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\n\n// Signer-related errors.\n// Reserve error codes in the range [5508000-5508999].\nexport const SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508000;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nexport const SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\n\n// Transaction-related errors.\n// Reserve error codes in the range [5663000-5663999].\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663000;\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nexport const SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nexport const SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nexport const SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nexport const SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nexport const SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nexport const SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT = 5663019;\nexport const SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT = 5663020;\n\n// Transaction errors.\n// Reserve error codes starting with [7050000-7050999] for the Rust enum `TransactionError`.\n// Error names here are dictated by the RPC (see ./transaction-error.ts).\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 7050000;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\n// `InstructionError` intentionally omitted.\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\n\n// Codec-related errors.\n// Reserve error codes in the range [8078000-8078999].\nexport const SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078000;\nexport const SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nexport const SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nexport const SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nexport const SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nexport const SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nexport const SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nexport const SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nexport const SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nexport const SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nexport const SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nexport const SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nexport const SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nexport const SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nexport const SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nexport const SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nexport const SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nexport const SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nexport const SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nexport const SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\n\n// RPC-related errors.\n// Reserve error codes in the range [8100000-8100999].\nexport const SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 8100000;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nexport const SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD = 8100003;\n\n// RPC-Subscriptions-related errors.\n// Reserve error codes in the range [8190000-8190999].\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN = 8190000;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED = 8190003;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT = 8190004;\n\n// Invariant violation errors.\n// Reserve error codes in the range [9900000-9900999].\n// These errors should only be thrown when there is a bug with the\n// library itself and should, in theory, never reach the end user.\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING = 9900000;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED = 9900004;\n\n/**\n * A union of every Solana error code\n *\n * @privateRemarks\n * You might be wondering why this is not a TypeScript enum or const enum.\n *\n * One of the goals of this library is to enable people to use some or none of it without having to\n * bundle all of it.\n *\n * If we made the set of error codes an enum then anyone who imported it (even if to only use a\n * single error code) would be forced to bundle every code and its label.\n *\n * Const enums appear to solve this problem by letting the compiler inline only the codes that are\n * actually used. Unfortunately exporting ambient (const) enums from a library like `@solana/errors`\n * is not safe, for a variety of reasons covered here: https://stackoverflow.com/a/28818850\n */\nexport type SolanaErrorCode =\n    | typeof SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND\n    | typeof SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE\n    | typeof SOLANA_ERROR__ADDRESSES__MALFORMED_PDA\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER\n    | typeof SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED\n    | typeof SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY\n    | typeof SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS\n    | typeof SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE\n    | typeof SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__INVALID_CONSTANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS\n    | typeof SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE\n    | typeof SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES\n    | typeof SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR\n    | typeof SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH\n    | typeof SOLANA_ERROR__INVALID_NONCE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE\n    | typeof SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_PARAMS\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_REQUEST\n    | typeof SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND\n    | typeof SOLANA_ERROR__JSON_RPC__PARSE_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SCAN_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION\n    | typeof SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY\n    | typeof SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__MALFORMED_BIGINT_STRING\n    | typeof SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR\n    | typeof SOLANA_ERROR__MALFORMED_NUMBER_STRING\n    | typeof SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD\n    | typeof SOLANA_ERROR__RPC__INTEGER_OVERFLOW\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID\n    | typeof SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING\n    | typeof SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES\n    | typeof SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE\n    | typeof SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH\n    | typeof SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT;\n\n/**\n * Errors of this type are understood to have an optional {@link SolanaError} nested inside as\n * `cause`.\n */\nexport type SolanaErrorCodeWithCause = typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE;\n","/**\n * To add a new error, follow the instructions at\n * https://github.com/anza-xyz/kit/tree/main/packages/errors/#adding-a-new-error\n *\n * @privateRemarks\n * WARNING:\n *   - Don't change or remove members of an error's context.\n */\nimport {\n    SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND,\n    SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS,\n    SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE,\n    SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED,\n    SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS,\n    SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__INVALID_CONSTANT,\n    SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS,\n    SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,\n    SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,\n    SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA,\n    SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND,\n    SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR,\n    SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH,\n    SOLANA_ERROR__INVALID_NONCE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING,\n    SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED,\n    SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE,\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__MALFORMED_BIGINT_STRING,\n    SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR,\n    SOLANA_ERROR__MALFORMED_NUMBER_STRING,\n    SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD,\n    SOLANA_ERROR__RPC__INTEGER_OVERFLOW,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT,\n    SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS,\n    SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER,\n    SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY,\n    SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING,\n    SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION,\n    SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE,\n    SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH,\n    SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING,\n    SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n    SolanaErrorCode,\n} from './codes';\nimport { RpcSimulateTransactionResult } from './json-rpc-error';\n\ntype BasicInstructionErrorContext<T extends SolanaErrorCode> = Readonly<{ [P in T]: { index: number } }>;\n\ntype DefaultUnspecifiedErrorContextToUndefined<T> = {\n    [P in SolanaErrorCode]: P extends keyof T ? T[P] : undefined;\n};\n\ntype TypedArrayMutableProperties = 'copyWithin' | 'fill' | 'reverse' | 'set' | 'sort';\ninterface ReadonlyUint8Array extends Omit<Uint8Array, TypedArrayMutableProperties> {\n    readonly [n: number]: number;\n}\n\n/** A amount of bytes. */\ntype Bytes = number;\n\n/**\n * A map of every {@link SolanaError} code to the type of its `context` property.\n */\nexport type SolanaErrorContext = DefaultUnspecifiedErrorContextToUndefined<\n    BasicInstructionErrorContext<\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR\n    > & {\n        [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: {\n            putativeAddress: string;\n        };\n        [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: {\n            actual: number;\n            maxSeeds: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: {\n            actual: number;\n            index: number;\n            maxSeedLength: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: {\n            bump: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: {\n            currentBlockHeight: bigint;\n            lastValidBlockHeight: bigint;\n        };\n        [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: {\n            codecDescription: string;\n        };\n        [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: {\n            stringValues: string[];\n        };\n        [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: {\n            encodedBytes: ReadonlyUint8Array;\n            hexEncodedBytes: string;\n            hexSentinel: string;\n            sentinel: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: {\n            decoderFixedSize: number;\n            encoderFixedSize: number;\n        };\n        [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: {\n            decoderMaxSize: number | undefined;\n            encoderMaxSize: number | undefined;\n        };\n        [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: {\n            discriminator: bigint | number;\n            formattedValidDiscriminators: string;\n            validDiscriminators: number[];\n        };\n        [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: {\n            bytesLength: number;\n            codecDescription: string;\n        };\n        [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: {\n            codecDescription: string;\n            expectedSize: number;\n            hexZeroValue: string;\n            zeroValue: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: {\n            bytesLength: number;\n            codecDescription: string;\n            expected: number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: {\n            constant: ReadonlyUint8Array;\n            data: ReadonlyUint8Array;\n            hexConstant: string;\n            hexData: string;\n            offset: number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: {\n            value: bigint | boolean | number | string | null | undefined;\n            variants: readonly (bigint | boolean | number | string | null | undefined)[];\n        };\n        [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: {\n            formattedNumericalValues: string;\n            numericalValues: number[];\n            stringValues: string[];\n            variant: number | string | symbol;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: {\n            value: bigint | boolean | number | string | null | undefined;\n            variants: readonly (bigint | boolean | number | string | null | undefined)[];\n        };\n        [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: {\n            actual: bigint | number;\n            codecDescription: string;\n            expected: bigint | number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: {\n            alphabet: string;\n            base: number;\n            value: string;\n        };\n        [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: {\n            discriminator: bigint | number;\n            maxRange: number;\n            minRange: number;\n        };\n        [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: {\n            codecDescription: string;\n            max: bigint | number;\n            min: bigint | number;\n            value: bigint | number;\n        };\n        [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: {\n            bytesLength: number;\n            codecDescription: string;\n            offset: number;\n        };\n        [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: {\n            decodedBytes: ReadonlyUint8Array;\n            hexDecodedBytes: string;\n            hexSentinel: string;\n            sentinel: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: {\n            maxRange: number;\n            minRange: number;\n            variant: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: {\n            encodedData: string;\n            index: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: {\n            code: number;\n            index: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: {\n            errorName: string;\n            index: number;\n            instructionErrorContext?: unknown;\n        };\n        [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: {\n            data?: ReadonlyUint8Array;\n            programAddress: string;\n        };\n        [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: {\n            accountAddresses?: string[];\n            programAddress: string;\n        };\n        [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: {\n            actualProgramAddress: string;\n            expectedProgramAddress: string;\n        };\n        [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__INVALID_NONCE]: {\n            actualNonceValue: string;\n            expectedNonceValue: string;\n        };\n        [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: {\n            cacheKey: string;\n        };\n        [SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED]: {\n            channelName: string;\n            supportedChannelNames: string[];\n        };\n        [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: {\n            unexpectedValue: unknown;\n        };\n        [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: {\n            contextSlot: bigint;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: {\n            numSlotsBehind?: number;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: Omit<\n            RpcSimulateTransactionResult,\n            'err'\n        >;\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: {\n            byteLength: number;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: {\n            value: string;\n        };\n        [SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR]: {\n            error: unknown;\n            message: string;\n        };\n        [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: {\n            value: string;\n        };\n        [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: {\n            nonceAccountAddress: string;\n        };\n        [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN]: {\n            notificationName: string;\n        };\n        [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT]: {\n            errorEvent: Event;\n        };\n        [SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD]: {\n            method: string;\n            params: unknown[];\n        };\n        [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: {\n            argumentLabel: string;\n            keyPath: readonly (number | string | symbol)[];\n            methodName: string;\n            optionalPathLabel: string;\n            path?: string;\n            value: bigint;\n        };\n        [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: {\n            headers: Headers;\n            message: string;\n            statusCode: number;\n        };\n        [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: {\n            headers: string[];\n        };\n        [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: {\n            key: CryptoKey;\n        };\n        [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: {\n            value: bigint;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: {\n            accountIndex: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: {\n            accountIndex: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: {\n            errorName: string;\n            transactionErrorContext?: unknown;\n        };\n        [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: {\n            expectedAddresses: string[];\n            unexpectedAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT]: {\n            transactionSize: Bytes;\n            transactionSizeLimit: Bytes;\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: {\n            lookupTableAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: {\n            highestKnownIndex: number;\n            highestRequestedIndex: number;\n            lookupTableAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT]: {\n            unitsConsumed: number;\n        };\n        [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: {\n            programAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: {\n            programAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: {\n            numRequiredSignatures: number;\n            signaturesLength: number;\n            signerAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: {\n            actualVersion: number;\n        };\n    }\n>;\n\nexport function decodeEncodedContext(encodedContext: string): object {\n    const decodedUrlString = __NODEJS__ ? Buffer.from(encodedContext, 'base64').toString('utf8') : atob(encodedContext);\n    return Object.fromEntries(new URLSearchParams(decodedUrlString).entries());\n}\n\nfunction encodeValue(value: unknown): string {\n    if (Array.isArray(value)) {\n        const commaSeparatedValues = value.map(encodeValue).join('%2C%20' /* \", \" */);\n        return '%5B' /* \"[\" */ + commaSeparatedValues + /* \"]\" */ '%5D';\n    } else if (typeof value === 'bigint') {\n        return `${value}n`;\n    } else {\n        return encodeURIComponent(\n            String(\n                value != null && Object.getPrototypeOf(value) === null\n                    ? // Plain objects with no prototype don't have a `toString` method.\n                      // Convert them before stringifying them.\n                      { ...(value as object) }\n                    : value,\n            ),\n        );\n    }\n}\n\nfunction encodeObjectContextEntry([key, value]: [string, unknown]): `${typeof key}=${string}` {\n    return `${key}=${encodeValue(value)}`;\n}\n\nexport function encodeContextObject(context: object): string {\n    const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join('&');\n    return __NODEJS__ ? Buffer.from(searchParamsString, 'utf8').toString('base64') : btoa(searchParamsString);\n}\n","import { SolanaErrorCode } from './codes';\nimport { encodeContextObject } from './context';\nimport { SolanaErrorMessages } from './messages';\n\nconst enum StateType {\n    EscapeSequence,\n    Text,\n    Variable,\n}\ntype State = Readonly<{\n    [START_INDEX]: number;\n    [TYPE]: StateType;\n}>;\nconst START_INDEX = 'i';\nconst TYPE = 't';\n\nexport function getHumanReadableErrorMessage<TErrorCode extends SolanaErrorCode>(\n    code: TErrorCode,\n    context: object = {},\n): string {\n    const messageFormatString = SolanaErrorMessages[code];\n    if (messageFormatString.length === 0) {\n        return '';\n    }\n    let state: State;\n    function commitStateUpTo(endIndex?: number) {\n        if (state[TYPE] === StateType.Variable) {\n            const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n\n            fragments.push(\n                variableName in context\n                    ? // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                      `${context[variableName as keyof typeof context]}`\n                    : `$${variableName}`,\n            );\n        } else if (state[TYPE] === StateType.Text) {\n            fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n        }\n    }\n    const fragments: string[] = [];\n    messageFormatString.split('').forEach((char, ii) => {\n        if (ii === 0) {\n            state = {\n                [START_INDEX]: 0,\n                [TYPE]:\n                    messageFormatString[0] === '\\\\'\n                        ? StateType.EscapeSequence\n                        : messageFormatString[0] === '$'\n                          ? StateType.Variable\n                          : StateType.Text,\n            };\n            return;\n        }\n        let nextState;\n        switch (state[TYPE]) {\n            case StateType.EscapeSequence:\n                nextState = { [START_INDEX]: ii, [TYPE]: StateType.Text };\n                break;\n            case StateType.Text:\n                if (char === '\\\\') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.EscapeSequence };\n                } else if (char === '$') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Variable };\n                }\n                break;\n            case StateType.Variable:\n                if (char === '\\\\') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.EscapeSequence };\n                } else if (char === '$') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Variable };\n                } else if (!char.match(/\\w/)) {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Text };\n                }\n                break;\n        }\n        if (nextState) {\n            if (state !== nextState) {\n                commitStateUpTo(ii);\n            }\n            state = nextState;\n        }\n    });\n    commitStateUpTo();\n    return fragments.join('');\n}\n\nexport function getErrorMessage<TErrorCode extends SolanaErrorCode>(\n    code: TErrorCode,\n    context: Record<string, unknown> = {},\n): string {\n    if (process.env.NODE_ENV !== \"production\") {\n        return getHumanReadableErrorMessage(code, context);\n    } else {\n        let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n        if (Object.keys(context).length) {\n            /**\n             * DANGER: Be sure that the shell command is escaped in such a way that makes it\n             *         impossible for someone to craft malicious context values that would result in\n             *         an exploit against anyone who bindly copy/pastes it into their terminal.\n             */\n            decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n        }\n        return `${decodingAdviceMessage}\\``;\n    }\n}\n","import { SolanaErrorCode, SolanaErrorCodeWithCause } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { getErrorMessage } from './message-formatter';\n\n/**\n * A type guard that returns `true` if the input is a {@link SolanaError}, optionally with a\n * particular error code.\n *\n * When the `code` argument is supplied and the input is a {@link SolanaError}, TypeScript will\n * refine the error's {@link SolanaError#context | `context`} property to the type associated with\n * that error code. You can use that context to render useful error messages, or to make\n * context-aware decisions that help your application to recover from the error.\n *\n * @example\n * ```ts\n * import {\n *     SOLANA_ERROR__TRANSACTION__MISSING_SIGNATURE,\n *     SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING,\n *     isSolanaError,\n * } from '@solana/errors';\n * import { assertIsFullySignedTransaction, getSignatureFromTransaction } from '@solana/transactions';\n *\n * try {\n *     const transactionSignature = getSignatureFromTransaction(tx);\n *     assertIsFullySignedTransaction(tx);\n *     /* ... *\\/\n * } catch (e) {\n *     if (isSolanaError(e, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING)) {\n *         displayError(\n *             \"We can't send this transaction without signatures for these addresses:\\n- %s\",\n *             // The type of the `context` object is now refined to contain `addresses`.\n *             e.context.addresses.join('\\n- '),\n *         );\n *         return;\n *     } else if (isSolanaError(e, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING)) {\n *         if (!tx.feePayer) {\n *             displayError('Choose a fee payer for this transaction before sending it');\n *         } else {\n *             displayError('The fee payer still needs to sign for this transaction');\n *         }\n *         return;\n *     }\n *     throw e;\n * }\n * ```\n */\nexport function isSolanaError<TErrorCode extends SolanaErrorCode>(\n    e: unknown,\n    /**\n     * When supplied, this function will require that the input is a {@link SolanaError} _and_ that\n     * its error code is exactly this value.\n     */\n    code?: TErrorCode,\n): e is SolanaError<TErrorCode> {\n    const isSolanaError = e instanceof Error && e.name === 'SolanaError';\n    if (isSolanaError) {\n        if (code !== undefined) {\n            return (e as SolanaError<TErrorCode>).context.__code === code;\n        }\n        return true;\n    }\n    return false;\n}\n\ntype SolanaErrorCodedContext = Readonly<{\n    [P in SolanaErrorCode]: (SolanaErrorContext[P] extends undefined ? object : SolanaErrorContext[P]) & {\n        __code: P;\n    };\n}>;\n\n/**\n * Encapsulates an error's stacktrace, a Solana-specific numeric code that indicates what went\n * wrong, and optional context if the type of error indicated by the code supports it.\n */\nexport class SolanaError<TErrorCode extends SolanaErrorCode = SolanaErrorCode> extends Error {\n    /**\n     * Indicates the root cause of this {@link SolanaError}, if any.\n     *\n     * For example, a transaction error might have an instruction error as its root cause. In this\n     * case, you will be able to access the instruction error on the transaction error as `cause`.\n     */\n    readonly cause?: TErrorCode extends SolanaErrorCodeWithCause ? SolanaError : unknown = this.cause;\n    /**\n     * Contains context that can assist in understanding or recovering from a {@link SolanaError}.\n     */\n    readonly context: SolanaErrorCodedContext[TErrorCode];\n    constructor(\n        ...[code, contextAndErrorOptions]: SolanaErrorContext[TErrorCode] extends undefined\n            ? [code: TErrorCode, errorOptions?: ErrorOptions | undefined]\n            : [code: TErrorCode, contextAndErrorOptions: SolanaErrorContext[TErrorCode] & (ErrorOptions | undefined)]\n    ) {\n        let context: SolanaErrorContext[TErrorCode] | undefined;\n        let errorOptions: ErrorOptions | undefined;\n        if (contextAndErrorOptions) {\n            // If the `ErrorOptions` type ever changes, update this code.\n            const { cause, ...contextRest } = contextAndErrorOptions;\n            if (cause) {\n                errorOptions = { cause };\n            }\n            if (Object.keys(contextRest).length > 0) {\n                context = contextRest as SolanaErrorContext[TErrorCode];\n            }\n        }\n        const message = getErrorMessage(code, context);\n        super(message, errorOptions);\n        this.context = {\n            __code: code,\n            ...context,\n        } as SolanaErrorCodedContext[TErrorCode];\n        // This is necessary so that `isSolanaError()` can identify a `SolanaError` without having\n        // to import the class for use in an `instanceof` check.\n        this.name = 'SolanaError';\n    }\n}\n","export function safeCaptureStackTrace(...args: Parameters<typeof Error.captureStackTrace>): void {\n    if ('captureStackTrace' in Error && typeof Error.captureStackTrace === 'function') {\n        Error.captureStackTrace(...args);\n    }\n}\n","import { SolanaErrorCode } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\n\ntype Config = Readonly<{\n    /**\n     * Oh, hello. You might wonder what in tarnation is going on here. Allow us to explain.\n     *\n     * One of the goals of `@solana/errors` is to allow errors that are not interesting to your\n     * application to shake out of your app bundle in production. This means that we must never\n     * export large hardcoded maps of error codes/messages.\n     *\n     * Unfortunately, where instruction and transaction errors from the RPC are concerned, we have\n     * no choice but to keep a map between the RPC `rpcEnumError` enum name and its corresponding\n     * `SolanaError` code. In the interest of implementing that map in as few bytes of source code\n     * as possible, we do the following:\n     *\n     *   1. Reserve a block of sequential error codes for the enum in question\n     *   2. Hardcode the list of enum names in that same order\n     *   3. Match the enum error name from the RPC with its index in that list, and reconstruct the\n     *      `SolanaError` code by adding the `errorCodeBaseOffset` to that index\n     */\n    errorCodeBaseOffset: number;\n    getErrorContext: (\n        errorCode: SolanaErrorCode,\n        rpcErrorName: string,\n        rpcErrorContext?: unknown,\n    ) => SolanaErrorContext[SolanaErrorCode];\n    orderedErrorNames: string[];\n    rpcEnumError: string | { [key: string]: unknown };\n}>;\n\nexport function getSolanaErrorFromRpcError(\n    { errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }: Config,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    constructorOpt: Function,\n): SolanaError {\n    let rpcErrorName;\n    let rpcErrorContext;\n    if (typeof rpcEnumError === 'string') {\n        rpcErrorName = rpcEnumError;\n    } else {\n        rpcErrorName = Object.keys(rpcEnumError)[0];\n        rpcErrorContext = rpcEnumError[rpcErrorName];\n    }\n    const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n    const errorCode = (errorCodeBaseOffset + codeOffset) as SolanaErrorCode;\n    const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n    const err = new SolanaError(errorCode, errorContext);\n    safeCaptureStackTrace(err, constructorOpt);\n    return err;\n}\n","import {\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'GenericError',\n    'InvalidArgument',\n    'InvalidInstructionData',\n    'InvalidAccountData',\n    'AccountDataTooSmall',\n    'InsufficientFunds',\n    'IncorrectProgramId',\n    'MissingRequiredSignature',\n    'AccountAlreadyInitialized',\n    'UninitializedAccount',\n    'UnbalancedInstruction',\n    'ModifiedProgramId',\n    'ExternalAccountLamportSpend',\n    'ExternalAccountDataModified',\n    'ReadonlyLamportChange',\n    'ReadonlyDataModified',\n    'DuplicateAccountIndex',\n    'ExecutableModified',\n    'RentEpochModified',\n    'NotEnoughAccountKeys',\n    'AccountDataSizeChanged',\n    'AccountNotExecutable',\n    'AccountBorrowFailed',\n    'AccountBorrowOutstanding',\n    'DuplicateAccountOutOfSync',\n    'Custom',\n    'InvalidError',\n    'ExecutableDataModified',\n    'ExecutableLamportChange',\n    'ExecutableAccountNotRentExempt',\n    'UnsupportedProgramId',\n    'CallDepth',\n    'MissingAccount',\n    'ReentrancyNotAllowed',\n    'MaxSeedLengthExceeded',\n    'InvalidSeeds',\n    'InvalidRealloc',\n    'ComputationalBudgetExceeded',\n    'PrivilegeEscalation',\n    'ProgramEnvironmentSetupFailure',\n    'ProgramFailedToComplete',\n    'ProgramFailedToCompile',\n    'Immutable',\n    'IncorrectAuthority',\n    'BorshIoError',\n    'AccountNotRentExempt',\n    'InvalidAccountOwner',\n    'ArithmeticOverflow',\n    'UnsupportedSysvar',\n    'IllegalOwner',\n    'MaxAccountsDataAllocationsExceeded',\n    'MaxAccountsExceeded',\n    'MaxInstructionTraceLengthExceeded',\n    'BuiltinProgramsMustConsumeComputeUnits',\n];\n\nexport function getSolanaErrorFromInstructionError(\n    /**\n     * The index of the instruction inside the transaction.\n     */\n    index: bigint | number,\n    instructionError: string | { [key: string]: unknown },\n): SolanaError {\n    const numberIndex = Number(index);\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 4615001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        index: numberIndex,\n                        ...(rpcErrorContext !== undefined ? { instructionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n                    return {\n                        code: Number(rpcErrorContext as bigint | number),\n                        index: numberIndex,\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n                    return {\n                        encodedData: rpcErrorContext as string,\n                        index: numberIndex,\n                    };\n                }\n                return { index: numberIndex };\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: instructionError,\n        },\n        getSolanaErrorFromInstructionError,\n    );\n}\n","import {\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromInstructionError } from './instruction-error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\n/**\n * How to add an error when an entry is added to the RPC `TransactionError` enum:\n *\n *   1. Follow the instructions in `./codes.ts` to add a corresponding Solana error code\n *   2. Add the `TransactionError` enum name in the same order as it appears in `./codes.ts`\n *   3. Add the new error name/code mapping to `./__tests__/transaction-error-test.ts`\n */\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'AccountInUse',\n    'AccountLoadedTwice',\n    'AccountNotFound',\n    'ProgramAccountNotFound',\n    'InsufficientFundsForFee',\n    'InvalidAccountForFee',\n    'AlreadyProcessed',\n    'BlockhashNotFound',\n    // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n    'CallChainTooDeep',\n    'MissingSignatureForFee',\n    'InvalidAccountIndex',\n    'SignatureFailure',\n    'InvalidProgramForExecution',\n    'SanitizeFailure',\n    'ClusterMaintenance',\n    'AccountBorrowOutstanding',\n    'WouldExceedMaxBlockCostLimit',\n    'UnsupportedVersion',\n    'InvalidWritableAccount',\n    'WouldExceedMaxAccountCostLimit',\n    'WouldExceedAccountDataBlockLimit',\n    'TooManyAccountLocks',\n    'AddressLookupTableNotFound',\n    'InvalidAddressLookupTableOwner',\n    'InvalidAddressLookupTableData',\n    'InvalidAddressLookupTableIndex',\n    'InvalidRentPayingAccount',\n    'WouldExceedMaxVoteCostLimit',\n    'WouldExceedAccountDataTotalLimit',\n    'DuplicateInstruction',\n    'InsufficientFundsForRent',\n    'MaxLoadedAccountsDataSizeExceeded',\n    'InvalidLoadedAccountsDataSizeLimit',\n    'ResanitizationNeeded',\n    'ProgramExecutionTemporarilyRestricted',\n    'UnbalancedTransaction',\n];\n\nexport function getSolanaErrorFromTransactionError(transactionError: string | { [key: string]: unknown }): SolanaError {\n    if (typeof transactionError === 'object' && 'InstructionError' in transactionError) {\n        return getSolanaErrorFromInstructionError(\n            ...(transactionError.InstructionError as Parameters<typeof getSolanaErrorFromInstructionError>),\n        );\n    }\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 7050001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        ...(rpcErrorContext !== undefined ? { transactionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n                    return {\n                        index: Number(rpcErrorContext as bigint | number),\n                    };\n                } else if (\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT ||\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n                ) {\n                    return {\n                        accountIndex: Number((rpcErrorContext as { account_index: bigint | number }).account_index),\n                    };\n                }\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: transactionError,\n        },\n        getSolanaErrorFromTransactionError,\n    );\n}\n","import {\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR,\n    SolanaErrorCode,\n} from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\nimport { getSolanaErrorFromTransactionError } from './transaction-error';\n\ninterface RpcErrorResponse {\n    code: bigint | number;\n    data?: unknown;\n    message: string;\n}\n\ntype TransactionError = string | { [key: string]: unknown };\n\n/**\n * Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-types/src/response.rs\n * @hidden\n */\nexport interface RpcSimulateTransactionResult {\n    accounts:\n        | ({\n              data:\n                  | string // LegacyBinary\n                  | {\n                        // Json\n                        parsed: unknown;\n                        program: string;\n                        space: number;\n                    }\n                  // Binary\n                  | [encodedBytes: string, encoding: 'base58' | 'base64' | 'base64+zstd' | 'binary' | 'jsonParsed'];\n              executable: boolean;\n              lamports: number;\n              owner: string;\n              rentEpoch: number;\n              space?: number;\n          } | null)[]\n        | null;\n    err: TransactionError | null;\n    // Enabled by `enable_cpi_recording`\n    innerInstructions?:\n        | {\n              index: number;\n              instructions: (\n                  | {\n                        // Compiled\n                        accounts: number[];\n                        data: string;\n                        programIdIndex: number;\n                        stackHeight?: number;\n                    }\n                  | {\n                        // Parsed\n                        parsed: unknown;\n                        program: string;\n                        programId: string;\n                        stackHeight?: number;\n                    }\n                  | {\n                        // PartiallyDecoded\n                        accounts: string[];\n                        data: string;\n                        programId: string;\n                        stackHeight?: number;\n                    }\n              )[];\n          }[]\n        | null;\n    logs: string[] | null;\n    replacementBlockhash: string | null;\n    returnData: {\n        data: [string, 'base64'];\n        programId: string;\n    } | null;\n    unitsConsumed: bigint | null;\n}\n\nexport function getSolanaErrorFromJsonRpcError(putativeErrorResponse: unknown): SolanaError {\n    let out: SolanaError;\n    if (isRpcErrorResponse(putativeErrorResponse)) {\n        const { code: rawCode, data, message } = putativeErrorResponse;\n        const code = Number(rawCode);\n        if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n            const { err, ...preflightErrorContext } = data as RpcSimulateTransactionResult;\n            const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n            out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n                ...preflightErrorContext,\n                ...causeObject,\n            });\n        } else {\n            let errorContext;\n            switch (code) {\n                case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n                case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n                case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n                case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n                case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n                case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n                case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n                    // The server supplies no structured data, but rather a pre-formatted message. Put\n                    // the server message in `context` so as not to completely lose the data. The long\n                    // term fix for this is to add data to the server responses and modify the\n                    // messages in `@solana/errors` to be actual format strings.\n                    errorContext = { __serverMessage: message };\n                    break;\n                default:\n                    if (typeof data === 'object' && !Array.isArray(data)) {\n                        errorContext = data;\n                    }\n            }\n            out = new SolanaError(code as SolanaErrorCode, errorContext as SolanaErrorContext[SolanaErrorCode]);\n        }\n    } else {\n        const message =\n            typeof putativeErrorResponse === 'object' &&\n            putativeErrorResponse !== null &&\n            'message' in putativeErrorResponse &&\n            typeof putativeErrorResponse.message === 'string'\n                ? putativeErrorResponse.message\n                : 'Malformed JSON-RPC error with no message attribute';\n        out = new SolanaError(SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, { error: putativeErrorResponse, message });\n    }\n    safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n    return out;\n}\n\nfunction isRpcErrorResponse(value: unknown): value is RpcErrorResponse {\n    return (\n        typeof value === 'object' &&\n        value !== null &&\n        'code' in value &&\n        'message' in value &&\n        (typeof value.code === 'number' || typeof value.code === 'bigint') &&\n        typeof value.message === 'string'\n    );\n}\n",null,"module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","const END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nexport function guardedShift<T>(byteArray: T[]): T {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift() as T;\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nexport function guardedSplice<T>(\n  byteArray: T[],\n  ...args:\n    | [start: number, deleteCount?: number]\n    | [start: number, deleteCount: number, ...items: T[]]\n): T[] {\n  const [start] = args;\n  if (\n    args.length === 2 // Implies that `deleteCount` was supplied\n      ? start + (args[1] ?? 0) > byteArray.length\n      : start >= byteArray.length\n  ) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(\n    ...(args as Parameters<typeof Array.prototype.splice>),\n  );\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray),\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(\n      guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n    );\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(\n        byteArray,\n        0,\n        accountKeyIndexesLength,\n      );\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = guardedSplice(\n        byteArray,\n        0,\n        writableIndexesLength,\n      );\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(\n        byteArray,\n        0,\n        readonlyIndexesLength,\n      );\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\n/** @internal */\ntype MessageSignednessErrors = {\n  invalid?: PublicKey[];\n  missing?: PublicKey[];\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures: boolean = true): boolean {\n    const signatureErrors = this._getMessageSignednessErrors(\n      this.serializeMessage(),\n      requireAllSignatures,\n    );\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(\n    message: Uint8Array,\n    requireAllSignatures: boolean,\n  ): MessageSignednessErrors | undefined {\n    const errors: MessageSignednessErrors = {};\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(\n        signData,\n        requireAllSignatures,\n      );\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${\n            sigErrors.invalid.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${\n            sigErrors.missing.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from './connection';\nimport {TransactionSignature} from './transaction';\n\nexport class SendTransactionError extends Error {\n  private signature: TransactionSignature;\n  private transactionMessage: string;\n  private transactionLogs: string[] | Promise<string[]> | undefined;\n\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs,\n  }: {\n    action: 'send' | 'simulate';\n    signature: TransactionSignature;\n    transactionMessage: string;\n    logs?: string[];\n  }) {\n    const maybeLogsOutput = logs\n      ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. `\n      : '';\n    const guideText =\n      '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message: string;\n    switch (action) {\n      case 'send':\n        message =\n          `Transaction ${signature} resulted in an error. \\n` +\n          `${transactionMessage}. ` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      case 'simulate':\n        message =\n          `Simulation failed. \\nMessage: ${transactionMessage}. \\n` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      default: {\n        message = `Unknown action '${((a: never) => a)(action)}'`;\n      }\n    }\n    super(message);\n\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n\n  get transactionError(): {message: string; logs?: string[]} {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs)\n        ? this.transactionLogs\n        : undefined,\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs(): string[] | undefined {\n    const cachedLogs = this.transactionLogs;\n    if (\n      cachedLogs != null &&\n      typeof cachedLogs === 'object' &&\n      'then' in cachedLogs\n    ) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n\n  async getLogs(connection: Connection): Promise<string[]> {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection\n          .getTransaction(this.signature)\n          .then(tx => {\n            if (tx && tx.meta && tx.meta.logMessages) {\n              const logs = tx.meta.logMessages;\n              this.transactionLogs = logs;\n              resolve(logs);\n            } else {\n              reject(new Error('Log messages not found'));\n            }\n          })\n          .catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {getU64Codec} from '@solana/codecs-numbers';\n\nexport function u64(property?: string): Layout<bigint> {\n  const layout = blob(8 /* bytes */, property);\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n\n  const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n  const codec = getU64Codec();\n\n  bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n    const src = decode(buffer as Uint8Array, offset);\n    return codec.decode(src);\n  };\n\n  bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n    const src = codec.encode(bigInt) as Uint8Array;\n    return encode(src, buffer as Uint8Array, offset);\n  };\n\n  return bigIntLayout;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export const Headers: typeof globalThis.Headers = globalThis.Headers;\nexport const Request: typeof globalThis.Request = globalThis.Request;\nexport const Response: typeof globalThis.Response = globalThis.Response;\nexport default globalThis.fetch;\n","import {\n  CommonClient,\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n  WebSocket as createRpc,\n} from 'rpc-websockets';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends CommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket as ReturnType<typeof createRpc>;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<CommonClient['call']>\n  ): ReturnType<CommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<CommonClient['notify']>\n  ): ReturnType<CommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to agave-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(\n  filters: GetProgramAccountsFilter[],\n): GetProgramAccountsFilter[] {\n  return filters.map(filter =>\n    'memcmp' in filter\n      ? {\n          ...filter,\n          memcmp: {\n            ...filter.memcmp,\n            encoding: filter.memcmp.encoding ?? 'base58',\n          },\n        }\n      : filter,\n  );\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state for */\n  accounts?: {\n    /** The encoding of the returned account's data */\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n  /** Optional parameter used to include inner instructions in the simulation */\n  innerInstructions?: boolean;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n  innerInstructions?: ParsedInnerInstruction[] | null;\n};\nconst ParsedInstructionStruct = pick({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown(),\n});\n\nconst PartiallyDecodedInstructionStruct = pick({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string(),\n});\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n    innerInstructions: optional(\n      nullable(\n        array(\n          pick({\n            index: number(),\n            instructions: array(\n              union([\n                ParsedInstructionStruct,\n                PartiallyDecodedInstructionStruct,\n              ]),\n            ),\n          }),\n        ),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  programId?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n  /** The cost units consumed after processing the transaction */\n  costUnits?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n  /** The cost units consumed after processing the transaction */\n  costUnits?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n  } & (\n    | {\n        encoding?: 'base58'; // Base-58 is the default when not supplied.\n        /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n        bytes: string;\n      }\n    | {\n        encoding: 'base64';\n        /** data to match, as base-64 encoded string */\n        bytes: string;\n      }\n  );\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\nexport type AccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n}>;\n\nexport type ProgramAccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n  /**\n   * Filter results using various filter objects\n   * The resultant account must meet ALL filter criteria to be included in the returned results\n   */\n  filters?: GetProgramAccountsFilter[];\n}>;\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      {\n        ...configWithoutEncoding,\n        ...(configWithoutEncoding.filters\n          ? {\n              filters: applyDefaultMemcmpEncodingToFilters(\n                configWithoutEncoding.filters,\n              ),\n            }\n          : null),\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const {\n      context,\n      value: {blockhash},\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature(): number {\n        throw new Error(\n          'The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' +\n            'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' +\n            'for a given message.',\n        );\n      },\n      toJSON() {\n        return {};\n      },\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator,\n      },\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      if (\n        configOrSigners &&\n        typeof configOrSigners === 'object' &&\n        'innerInstructions' in configOrSigners\n      ) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    if (\n      configOrSigners &&\n      typeof configOrSigners === 'object' &&\n      'innerInstructions' in configOrSigners\n    ) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      skipPreflight === true\n        ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n        : (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                console.error(\n                  `Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``,\n                  {\n                    args,\n                    error: e,\n                  },\n                );\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    config?: AccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitmentOrConfig?: Commitment | AccountSubscriptionConfig,\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n      config,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    config?: ProgramAccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitmentOrConfig?: Commitment | ProgramAccountSubscriptionConfig,\n    maybeFilters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      config\n        ? config\n        : maybeFilters\n          ? {filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)}\n          : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {getU64Encoder} from '@solana/codecs-numbers';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [\n        params.authority.toBuffer(),\n        getU64Encoder().encode(params.recentSlot) as Uint8Array,\n      ],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeStateV2::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(\n    params: SplitStakeParams,\n    // Compute the cost of allocating the new stake account in lamports\n    rentExemptReserve: number,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: rentExemptReserve,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(\n    params: SplitStakeWithSeedParams,\n    // If this stake account is new, compute the cost of allocating it in lamports\n    rentExemptReserve?: number,\n  ): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(\n        SystemProgram.transfer({\n          fromPubkey: params.authorizedPubkey,\n          toPubkey: splitStakePubkey,\n          lamports: rentExemptReserve,\n        }),\n      );\n    }\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\nexport type UpdateValidatorIdentityParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  nodePubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'InitializeAccount'\n  | 'Withdraw'\n  | 'UpdateValidatorIdentity';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n  UpdateValidatorIdentity: IInstructionInputData;\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct<\n      VoteInstructionInputData['UpdateValidatorIdentity']\n    >([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3762;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insufficient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(\n    params: UpdateValidatorIdentityParams,\n  ): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, nodePubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\nimport {guardedShift, guardedSplice} from './utils/guarded-array-utils';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, validator logo URL */\n  iconUrl?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n",null,"'use strict';\nvar arrayToReversed = require('../internals/array-to-reversed');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\n\n// `%TypedArray%.prototype.toReversed` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nexportTypedArrayMethod('toReversed', function toReversed() {\n  return arrayToReversed(aTypedArray(this), getTypedArrayConstructor(this));\n});\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { Codec, Decoder, Encoder, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n/**\n * Represents an encoder for numbers and bigints.\n *\n * This type allows encoding values that are either `number` or `bigint`.\n * Depending on the specific implementation, the encoded output may have a fixed or variable size.\n *\n * @see {@link FixedSizeNumberEncoder}\n */\nexport type NumberEncoder = Encoder<bigint | number>;\n\n/**\n * Represents a fixed-size encoder for numbers and bigints.\n *\n * This encoder serializes values using an exact number of bytes, defined by `TSize`.\n *\n * @typeParam TSize - The number of bytes used for encoding.\n *\n * @see {@link NumberEncoder}\n */\nexport type FixedSizeNumberEncoder<TSize extends number = number> = FixedSizeEncoder<bigint | number, TSize>;\n\n/**\n * Represents a decoder for numbers and bigints.\n *\n * This type supports decoding values as either `number` or `bigint`, depending on the implementation.\n *\n * @see {@link FixedSizeNumberDecoder}\n */\nexport type NumberDecoder = Decoder<bigint> | Decoder<number>;\n\n/**\n * Represents a fixed-size decoder for numbers and bigints.\n *\n * This decoder reads a fixed number of bytes (`TSize`) and converts them into a `number` or `bigint`.\n *\n * @typeParam TSize - The number of bytes expected for decoding.\n *\n * @see {@link NumberDecoder}\n */\nexport type FixedSizeNumberDecoder<TSize extends number = number> =\n    | FixedSizeDecoder<bigint, TSize>\n    | FixedSizeDecoder<number, TSize>;\n\n/**\n * Represents a codec for encoding and decoding numbers and bigints.\n *\n * - The encoded value can be either a `number` or a `bigint`.\n * - The decoded value will always be either a `number` or `bigint`, depending on the implementation.\n *\n * @see {@link FixedSizeNumberCodec}\n */\nexport type NumberCodec = Codec<bigint | number, bigint> | Codec<bigint | number, number>;\n\n/**\n * Represents a fixed-size codec for encoding and decoding numbers and bigints.\n *\n * This codec uses a specific number of bytes (`TSize`) for serialization.\n * The encoded value can be either a `number` or `bigint`, but the decoded value will always be a `number` or `bigint`,\n * depending on the implementation.\n *\n * @typeParam TSize - The number of bytes used for encoding and decoding.\n *\n * @see {@link NumberCodec}\n */\nexport type FixedSizeNumberCodec<TSize extends number = number> =\n    | FixedSizeCodec<bigint | number, bigint, TSize>\n    | FixedSizeCodec<bigint | number, number, TSize>;\n\n/**\n * Configuration options for number codecs that use more than one byte.\n *\n * This configuration applies to all number codecs except `u8` and `i8`,\n * allowing the user to specify the endianness of serialization.\n */\nexport type NumberCodecConfig = {\n    /**\n     * Specifies whether numbers should be encoded in little-endian or big-endian format.\n     *\n     * @defaultValue `Endian.Little`\n     */\n    endian?: Endian;\n};\n\n/**\n * Defines the byte order used for number serialization.\n *\n * - `Little`: The least significant byte is stored first.\n * - `Big`: The most significant byte is stored first.\n */\nexport enum Endian {\n    Little,\n    Big,\n}\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    assertByteArrayIsNotEmptyForCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    Offset,\n    ReadonlyUint8Array,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\nimport { Endian, NumberCodecConfig } from './common';\n\ntype NumberFactorySharedInput<TSize extends number> = {\n    config?: NumberCodecConfig;\n    name: string;\n    size: TSize;\n};\n\ntype NumberFactoryEncoderInput<TFrom, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    range?: [bigint | number, bigint | number];\n    set: (view: DataView, value: TFrom, littleEndian?: boolean) => void;\n};\n\ntype NumberFactoryDecoderInput<TTo, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    get: (view: DataView, littleEndian?: boolean) => TTo;\n};\n\nfunction isLittleEndian(config?: NumberCodecConfig): boolean {\n    return config?.endian === Endian.Big ? false : true;\n}\n\nexport function numberEncoderFactory<TFrom extends bigint | number, TSize extends number>(\n    input: NumberFactoryEncoderInput<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: input.size,\n        write(value: TFrom, bytes: Uint8Array, offset: Offset): Offset {\n            if (input.range) {\n                assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n            }\n            const arrayBuffer = new ArrayBuffer(input.size);\n            input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n            bytes.set(new Uint8Array(arrayBuffer), offset);\n            return offset + input.size;\n        },\n    });\n}\n\nexport function numberDecoderFactory<TTo extends bigint | number, TSize extends number>(\n    input: NumberFactoryDecoderInput<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: input.size,\n        read(bytes, offset = 0): [TTo, number] {\n            assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n            assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n            const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n            return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n        },\n    });\n}\n\n/**\n * Helper function to ensure that the ArrayBuffer is converted properly from a Uint8Array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n */\nfunction toArrayBuffer(bytes: ReadonlyUint8Array | Uint8Array, offset?: number, length?: number): ArrayBuffer {\n    const bytesOffset = bytes.byteOffset + (offset ?? 0);\n    const bytesLength = length ?? bytes.byteLength;\n    return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 32-bit floating-point numbers (`f32`).\n *\n * This encoder serializes `f32` values using 4 bytes.\n * Floating-point values may lose precision when encoded.\n *\n * For more details, see {@link getF32Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number, 4>` for encoding `f32` values.\n *\n * @example\n * Encoding an `f32` value.\n * ```ts\n * const encoder = getF32Encoder();\n * const bytes = encoder.encode(-1.5); // 0x0000c0bf\n * ```\n *\n * @see {@link getF32Codec}\n */\nexport const getF32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'f32',\n        set: (view, value, le) => view.setFloat32(0, Number(value), le),\n        size: 4,\n    });\n\n/**\n * Returns a decoder for 32-bit floating-point numbers (`f32`).\n *\n * This decoder deserializes `f32` values from 4 bytes.\n * Some precision may be lost during decoding due to floating-point representation.\n *\n * For more details, see {@link getF32Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<number, 4>` for decoding `f32` values.\n *\n * @example\n * Decoding an `f32` value.\n * ```ts\n * const decoder = getF32Decoder();\n * const value = decoder.decode(new Uint8Array([0x00, 0x00, 0xc0, 0xbf])); // -1.5\n * ```\n *\n * @see {@link getF32Codec}\n */\nexport const getF32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat32(0, le),\n        name: 'f32',\n        size: 4,\n    });\n\n/**\n * Returns a codec for encoding and decoding 32-bit floating-point numbers (`f32`).\n *\n * This codec serializes `f32` values using 4 bytes.\n * Due to the IEEE 754 floating-point representation, some precision loss may occur.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number, number, 4>` for encoding and decoding `f32` values.\n *\n * @example\n * Encoding and decoding an `f32` value.\n * ```ts\n * const codec = getF32Codec();\n * const bytes = codec.encode(-1.5); // 0x0000c0bf\n * const value = codec.decode(bytes); // -1.5\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getF32Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-1.5); // 0xbfc00000\n * ```\n *\n * @remarks\n * `f32` values follow the IEEE 754 single-precision floating-point standard.\n * Precision loss may occur for certain values.\n *\n * - If you need higher precision, consider using {@link getF64Codec}.\n * - If you need integer values, consider using {@link getI32Codec} or {@link getU32Codec}.\n *\n * Separate {@link getF32Encoder} and {@link getF32Decoder} functions are available.\n *\n * ```ts\n * const bytes = getF32Encoder().encode(-1.5);\n * const value = getF32Decoder().decode(bytes);\n * ```\n *\n * @see {@link getF32Encoder}\n * @see {@link getF32Decoder}\n */\nexport const getF32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getF32Encoder(config), getF32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 64-bit floating-point numbers (`f64`).\n *\n * This encoder serializes `f64` values using 8 bytes.\n * Floating-point values may lose precision when encoded.\n *\n * For more details, see {@link getF64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number, 8>` for encoding `f64` values.\n *\n * @example\n * Encoding an `f64` value.\n * ```ts\n * const encoder = getF64Encoder();\n * const bytes = encoder.encode(-1.5); // 0x000000000000f8bf\n * ```\n *\n * @see {@link getF64Codec}\n */\nexport const getF64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'f64',\n        set: (view, value, le) => view.setFloat64(0, Number(value), le),\n        size: 8,\n    });\n\n/**\n * Returns a decoder for 64-bit floating-point numbers (`f64`).\n *\n * This decoder deserializes `f64` values from 8 bytes.\n * Some precision may be lost during decoding due to floating-point representation.\n *\n * For more details, see {@link getF64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<number, 8>` for decoding `f64` values.\n *\n * @example\n * Decoding an `f64` value.\n * ```ts\n * const decoder = getF64Decoder();\n * const value = decoder.decode(new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xbf])); // -1.5\n * ```\n *\n * @see {@link getF64Codec}\n */\nexport const getF64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat64(0, le),\n        name: 'f64',\n        size: 8,\n    });\n\n/**\n * Returns a codec for encoding and decoding 64-bit floating-point numbers (`f64`).\n *\n * This codec serializes `f64` values using 8 bytes.\n * Due to the IEEE 754 floating-point representation, some precision loss may occur.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number, number, 8>` for encoding and decoding `f64` values.\n *\n * @example\n * Encoding and decoding an `f64` value.\n * ```ts\n * const codec = getF64Codec();\n * const bytes = codec.encode(-1.5); // 0x000000000000f8bf\n * const value = codec.decode(bytes); // -1.5\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getF64Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-1.5); // 0xbff8000000000000\n * ```\n *\n * @remarks\n * `f64` values follow the IEEE 754 double-precision floating-point standard.\n * Precision loss may still occur but is significantly lower than `f32`.\n *\n * - If you need smaller floating-point values, consider using {@link getF32Codec}.\n * - If you need integer values, consider using {@link getI64Codec} or {@link getU64Codec}.\n *\n * Separate {@link getF64Encoder} and {@link getF64Decoder} functions are available.\n *\n * ```ts\n * const bytes = getF64Encoder().encode(-1.5);\n * const value = getF64Decoder().decode(bytes);\n * ```\n *\n * @see {@link getF64Encoder}\n * @see {@link getF64Decoder}\n */\nexport const getF64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 8> =>\n    combineCodec(getF64Encoder(config), getF64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 128-bit signed integers (`i128`).\n *\n * This encoder serializes `i128` values using 16 bytes.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getI128Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number | bigint, 16>` for encoding `i128` values.\n *\n * @example\n * Encoding an `i128` value.\n * ```ts\n * const encoder = getI128Encoder();\n * const bytes = encoder.encode(-42n); // 0xd6ffffffffffffffffffffffffffffff\n * ```\n *\n * @see {@link getI128Codec}\n */\nexport const getI128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'i128',\n        range: [-BigInt('0x7fffffffffffffffffffffffffffffff') - 1n, BigInt('0x7fffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\n/**\n * Returns a decoder for 128-bit signed integers (`i128`).\n *\n * This decoder deserializes `i128` values from 16 bytes.\n * The decoded value is always a `bigint`.\n *\n * For more details, see {@link getI128Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<bigint, 16>` for decoding `i128` values.\n *\n * @example\n * Decoding an `i128` value.\n * ```ts\n * const decoder = getI128Decoder();\n * const value = decoder.decode(new Uint8Array([\n *   0xd6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n *   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff\n * ])); // -42n\n * ```\n *\n * @see {@link getI128Codec}\n */\nexport const getI128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigInt64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'i128',\n        size: 16,\n    });\n\n/**\n * Returns a codec for encoding and decoding 128-bit signed integers (`i128`).\n *\n * This codec serializes `i128` values using 16 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `bigint`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, bigint, 16>` for encoding and decoding `i128` values.\n *\n * @example\n * Encoding and decoding an `i128` value.\n * ```ts\n * const codec = getI128Codec();\n * const bytes = codec.encode(-42n); // 0xd6ffffffffffffffffffffffffffffff\n * const value = codec.decode(bytes); // -42n\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getI128Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-42n); // 0xffffffffffffffffffffffffffffd6\n * ```\n *\n * @remarks\n * This codec supports values between `-2^127` and `2^127 - 1`.\n * Since JavaScript `number` cannot safely represent values beyond `2^53 - 1`, the decoded value is always a `bigint`.\n *\n * - If you need a smaller signed integer, consider using {@link getI64Codec} or {@link getI32Codec}.\n * - If you need a larger signed integer, consider using a custom codec.\n * - If you need unsigned integers, consider using {@link getU128Codec}.\n *\n * Separate {@link getI128Encoder} and {@link getI128Decoder} functions are available.\n *\n * ```ts\n * const bytes = getI128Encoder().encode(-42);\n * const value = getI128Decoder().decode(bytes);\n * ```\n *\n * @see {@link getI128Encoder}\n * @see {@link getI128Decoder}\n */\nexport const getI128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getI128Encoder(config), getI128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 16-bit signed integers (`i16`).\n *\n * This encoder serializes `i16` values using 2 bytes.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getI16Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number | bigint, 2>` for encoding `i16` values.\n *\n * @example\n * Encoding an `i16` value.\n * ```ts\n * const encoder = getI16Encoder();\n * const bytes = encoder.encode(-42); // 0xd6ff\n * ```\n *\n * @see {@link getI16Codec}\n */\nexport const getI16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'i16',\n        range: [-Number('0x7fff') - 1, Number('0x7fff')],\n        set: (view, value, le) => view.setInt16(0, Number(value), le),\n        size: 2,\n    });\n\n/**\n * Returns a decoder for 16-bit signed integers (`i16`).\n *\n * This decoder deserializes `i16` values from 2 bytes.\n * The decoded value is always a `number`.\n *\n * For more details, see {@link getI16Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<number, 2>` for decoding `i16` values.\n *\n * @example\n * Decoding an `i16` value.\n * ```ts\n * const decoder = getI16Decoder();\n * const value = decoder.decode(new Uint8Array([0xd6, 0xff])); // -42\n * ```\n *\n * @see {@link getI16Codec}\n */\nexport const getI16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt16(0, le),\n        name: 'i16',\n        size: 2,\n    });\n\n/**\n * Returns a codec for encoding and decoding 16-bit signed integers (`i16`).\n *\n * This codec serializes `i16` values using 2 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `number`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, number, 2>` for encoding and decoding `i16` values.\n *\n * @example\n * Encoding and decoding an `i16` value.\n * ```ts\n * const codec = getI16Codec();\n * const bytes = codec.encode(-42); // 0xd6ff\n * const value = codec.decode(bytes); // -42\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getI16Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-42); // 0xffd6\n * ```\n *\n * @remarks\n * This codec supports values between `-2^15` (`-32,768`) and `2^15 - 1` (`32,767`).\n *\n * - If you need a smaller signed integer, consider using {@link getI8Codec}.\n * - If you need a larger signed integer, consider using {@link getI32Codec}.\n * - If you need unsigned integers, consider using {@link getU16Codec}.\n *\n * Separate {@link getI16Encoder} and {@link getI16Decoder} functions are available.\n *\n * ```ts\n * const bytes = getI16Encoder().encode(-42);\n * const value = getI16Decoder().decode(bytes);\n * ```\n *\n * @see {@link getI16Encoder}\n * @see {@link getI16Decoder}\n */\nexport const getI16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 2> =>\n    combineCodec(getI16Encoder(config), getI16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 32-bit signed integers (`i32`).\n *\n * This encoder serializes `i32` values using 4 bytes.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getI32Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number | bigint, 4>` for encoding `i32` values.\n *\n * @example\n * Encoding an `i32` value.\n * ```ts\n * const encoder = getI32Encoder();\n * const bytes = encoder.encode(-42); // 0xd6ffffff\n * ```\n *\n * @see {@link getI32Codec}\n */\nexport const getI32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'i32',\n        range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n        set: (view, value, le) => view.setInt32(0, Number(value), le),\n        size: 4,\n    });\n\n/**\n * Returns a decoder for 32-bit signed integers (`i32`).\n *\n * This decoder deserializes `i32` values from 4 bytes.\n * The decoded value is always a `number`.\n *\n * For more details, see {@link getI32Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<number, 4>` for decoding `i32` values.\n *\n * @example\n * Decoding an `i32` value.\n * ```ts\n * const decoder = getI32Decoder();\n * const value = decoder.decode(new Uint8Array([0xd6, 0xff, 0xff, 0xff])); // -42\n * ```\n *\n * @see {@link getI32Codec}\n */\nexport const getI32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt32(0, le),\n        name: 'i32',\n        size: 4,\n    });\n\n/**\n * Returns a codec for encoding and decoding 32-bit signed integers (`i32`).\n *\n * This codec serializes `i32` values using 4 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `number`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, number, 4>` for encoding and decoding `i32` values.\n *\n * @example\n * Encoding and decoding an `i32` value.\n * ```ts\n * const codec = getI32Codec();\n * const bytes = codec.encode(-42); // 0xd6ffffff\n * const value = codec.decode(bytes); // -42\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getI32Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-42); // 0xffffffd6\n * ```\n *\n * @remarks\n * This codec supports values between `-2^31` (`-2,147,483,648`) and `2^31 - 1` (`2,147,483,647`).\n *\n * - If you need a smaller signed integer, consider using {@link getI16Codec} or {@link getI8Codec}.\n * - If you need a larger signed integer, consider using {@link getI64Codec}.\n * - If you need unsigned integers, consider using {@link getU32Codec}.\n *\n * Separate {@link getI32Encoder} and {@link getI32Decoder} functions are available.\n *\n * ```ts\n * const bytes = getI32Encoder().encode(-42);\n * const value = getI32Decoder().decode(bytes);\n * ```\n *\n * @see {@link getI32Encoder}\n * @see {@link getI32Decoder}\n */\nexport const getI32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getI32Encoder(config), getI32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 64-bit signed integers (`i64`).\n *\n * This encoder serializes `i64` values using 8 bytes.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getI64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number | bigint, 8>` for encoding `i64` values.\n *\n * @example\n * Encoding an `i64` value.\n * ```ts\n * const encoder = getI64Encoder();\n * const bytes = encoder.encode(-42n); // 0xd6ffffffffffffff\n * ```\n *\n * @see {@link getI64Codec}\n */\nexport const getI64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'i64',\n        range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n        set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n        size: 8,\n    });\n\n/**\n * Returns a decoder for 64-bit signed integers (`i64`).\n *\n * This decoder deserializes `i64` values from 8 bytes.\n * The decoded value is always a `bigint`.\n *\n * For more details, see {@link getI64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<bigint, 8>` for decoding `i64` values.\n *\n * @example\n * Decoding an `i64` value.\n * ```ts\n * const decoder = getI64Decoder();\n * const value = decoder.decode(new Uint8Array([\n *   0xd6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff\n * ])); // -42n\n * ```\n *\n * @see {@link getI64Codec}\n */\nexport const getI64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigInt64(0, le),\n        name: 'i64',\n        size: 8,\n    });\n\n/**\n * Returns a codec for encoding and decoding 64-bit signed integers (`i64`).\n *\n * This codec serializes `i64` values using 8 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `bigint`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, bigint, 8>` for encoding and decoding `i64` values.\n *\n * @example\n * Encoding and decoding an `i64` value.\n * ```ts\n * const codec = getI64Codec();\n * const bytes = codec.encode(-42n); // 0xd6ffffffffffffff\n * const value = codec.decode(bytes); // -42n\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getI64Codec({ endian: Endian.Big });\n * const bytes = codec.encode(-42n); // 0xffffffffffffffd6\n * ```\n *\n * @remarks\n * This codec supports values between `-2^63` and `2^63 - 1`.\n * Since JavaScript `number` cannot safely represent values beyond `2^53 - 1`, the decoded value is always a `bigint`.\n *\n * - If you need a smaller signed integer, consider using {@link getI32Codec} or {@link getI16Codec}.\n * - If you need a larger signed integer, consider using {@link getI128Codec}.\n * - If you need unsigned integers, consider using {@link getU64Codec}.\n *\n * Separate {@link getI64Encoder} and {@link getI64Decoder} functions are available.\n *\n * ```ts\n * const bytes = getI64Encoder().encode(-42);\n * const value = getI64Decoder().decode(bytes);\n * ```\n *\n * @see {@link getI64Encoder}\n * @see {@link getI64Decoder}\n */\nexport const getI64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getI64Encoder(config), getI64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 8-bit signed integers (`i8`).\n *\n * This encoder serializes `i8` values using 1 byte.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getI8Codec}.\n *\n * @returns A `FixedSizeEncoder<number | bigint, 1>` for encoding `i8` values.\n *\n * @example\n * Encoding an `i8` value.\n * ```ts\n * const encoder = getI8Encoder();\n * const bytes = encoder.encode(-42); // 0xd6\n * ```\n *\n * @see {@link getI8Codec}\n */\nexport const getI8Encoder = (): FixedSizeEncoder<bigint | number, 1> =>\n    numberEncoderFactory({\n        name: 'i8',\n        range: [-Number('0x7f') - 1, Number('0x7f')],\n        set: (view, value) => view.setInt8(0, Number(value)),\n        size: 1,\n    });\n\n/**\n * Returns a decoder for 8-bit signed integers (`i8`).\n *\n * This decoder deserializes `i8` values from 1 byte.\n * The decoded value is always a `number`.\n *\n * For more details, see {@link getI8Codec}.\n *\n * @returns A `FixedSizeDecoder<number, 1>` for decoding `i8` values.\n *\n * @example\n * Decoding an `i8` value.\n * ```ts\n * const decoder = getI8Decoder();\n * const value = decoder.decode(new Uint8Array([0xd6])); // -42\n * ```\n *\n * @see {@link getI8Codec}\n */\nexport const getI8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getInt8(0),\n        name: 'i8',\n        size: 1,\n    });\n\n/**\n * Returns a codec for encoding and decoding 8-bit signed integers (`i8`).\n *\n * This codec serializes `i8` values using 1 byte.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `number`.\n *\n * @returns A `FixedSizeCodec<number | bigint, number, 1>` for encoding and decoding `i8` values.\n *\n * @example\n * Encoding and decoding an `i8` value.\n * ```ts\n * const codec = getI8Codec();\n * const bytes = codec.encode(-42); // 0xd6\n * const value = codec.decode(bytes); // -42\n * ```\n *\n * @remarks\n * This codec supports values between `-2^7` (`-128`) and `2^7 - 1` (`127`).\n *\n * - If you need a larger signed integer, consider using {@link getI16Codec}.\n * - If you need an unsigned integer, consider using {@link getU8Codec}.\n *\n * Separate {@link getI8Encoder} and {@link getI8Decoder} functions are available.\n *\n * ```ts\n * const bytes = getI8Encoder().encode(-42);\n * const value = getI8Decoder().decode(bytes);\n * ```\n *\n * @see {@link getI8Encoder}\n * @see {@link getI8Decoder}\n */\nexport const getI8Codec = (): FixedSizeCodec<bigint | number, number, 1> =>\n    combineCodec(getI8Encoder(), getI8Decoder());\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Offset,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\n\n/**\n * Returns an encoder for `shortU16` values.\n *\n * This encoder serializes `shortU16` values using **1 to 3 bytes**.\n * Smaller values use fewer bytes, while larger values take up more space.\n *\n * For more details, see {@link getShortU16Codec}.\n *\n * @returns A `VariableSizeEncoder<number | bigint>` for encoding `shortU16` values.\n *\n * @example\n * Encoding a `shortU16` value.\n * ```ts\n * const encoder = getShortU16Encoder();\n * encoder.encode(42);    // 0x2a\n * encoder.encode(128);   // 0x8001\n * encoder.encode(16384); // 0x808001\n * ```\n *\n * @see {@link getShortU16Codec}\n */\nexport const getShortU16Encoder = (): VariableSizeEncoder<bigint | number> =>\n    createEncoder({\n        getSizeFromValue: (value: bigint | number): number => {\n            if (value <= 0b01111111) return 1;\n            if (value <= 0b0011111111111111) return 2;\n            return 3;\n        },\n        maxSize: 3,\n        write: (value: bigint | number, bytes: Uint8Array, offset: Offset): Offset => {\n            assertNumberIsBetweenForCodec('shortU16', 0, 65535, value);\n            const shortU16Bytes = [0];\n            for (let ii = 0; ; ii += 1) {\n                // Shift the bits of the value over such that the next 7 bits are at the right edge.\n                const alignedValue = Number(value) >> (ii * 7);\n                if (alignedValue === 0) {\n                    // No more bits to consume.\n                    break;\n                }\n                // Extract those 7 bits using a mask.\n                const nextSevenBits = 0b1111111 & alignedValue;\n                shortU16Bytes[ii] = nextSevenBits;\n                if (ii > 0) {\n                    // Set the continuation bit of the previous slice.\n                    shortU16Bytes[ii - 1] |= 0b10000000;\n                }\n            }\n            bytes.set(shortU16Bytes, offset);\n            return offset + shortU16Bytes.length;\n        },\n    });\n\n/**\n * Returns a decoder for `shortU16` values.\n *\n * This decoder deserializes `shortU16` values from **1 to 3 bytes**.\n * The number of bytes used depends on the encoded value.\n *\n * For more details, see {@link getShortU16Codec}.\n *\n * @returns A `VariableSizeDecoder<number>` for decoding `shortU16` values.\n *\n * @example\n * Decoding a `shortU16` value.\n * ```ts\n * const decoder = getShortU16Decoder();\n * decoder.decode(new Uint8Array([0x2a]));             // 42\n * decoder.decode(new Uint8Array([0x80, 0x01]));       // 128\n * decoder.decode(new Uint8Array([0x80, 0x80, 0x01])); // 16384\n * ```\n *\n * @see {@link getShortU16Codec}\n */\nexport const getShortU16Decoder = (): VariableSizeDecoder<number> =>\n    createDecoder({\n        maxSize: 3,\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset): [number, Offset] => {\n            let value = 0;\n            let byteCount = 0;\n            while (++byteCount) {\n                const byteIndex = byteCount - 1;\n                const currentByte = bytes[offset + byteIndex];\n                const nextSevenBits = 0b1111111 & currentByte;\n                // Insert the next group of seven bits into the correct slot of the output value.\n                value |= nextSevenBits << (byteIndex * 7);\n                if ((currentByte & 0b10000000) === 0) {\n                    // This byte does not have its continuation bit set. We're done.\n                    break;\n                }\n            }\n            return [value, offset + byteCount];\n        },\n    });\n\n/**\n * Returns a codec for encoding and decoding `shortU16` values.\n *\n * It serializes unsigned integers using **1 to 3 bytes** based on the encoded value.\n * The larger the value, the more bytes it uses.\n *\n * - If the value is `<= 0x7f` (127), it is stored in a **single byte**\n *   and the first bit is set to `0` to indicate the end of the value.\n * - Otherwise, the first bit is set to `1` to indicate that the value continues in the next byte, which follows the same pattern.\n * - This process repeats until the value is fully encoded in up to 3 bytes. The third and last byte, if needed, uses all 8 bits to store the remaining value.\n *\n * In other words, the encoding scheme follows this structure:\n *\n * ```txt\n * 0XXXXXXX                   <- Values 0 to 127 (1 byte)\n * 1XXXXXXX 0XXXXXXX          <- Values 128 to 16,383 (2 bytes)\n * 1XXXXXXX 1XXXXXXX XXXXXXXX <- Values 16,384 to 4,194,303 (3 bytes)\n * ```\n *\n * @returns A `VariableSizeCodec<number | bigint, number>` for encoding and decoding `shortU16` values.\n *\n * @example\n * Encoding and decoding `shortU16` values.\n * ```ts\n * const codec = getShortU16Codec();\n * const bytes1 = codec.encode(42);    // 0x2a\n * const bytes2 = codec.encode(128);   // 0x8001\n * const bytes3 = codec.encode(16384); // 0x808001\n *\n * codec.decode(bytes1); // 42\n * codec.decode(bytes2); // 128\n * codec.decode(bytes3); // 16384\n * ```\n *\n * @remarks\n * This codec efficiently stores small numbers, making it useful for transactions and compact representations.\n *\n * If you need a fixed-size `u16` codec, consider using {@link getU16Codec}.\n *\n * Separate {@link getShortU16Encoder} and {@link getShortU16Decoder} functions are available.\n *\n * ```ts\n * const bytes = getShortU16Encoder().encode(42);\n * const value = getShortU16Decoder().decode(bytes);\n * ```\n *\n * @see {@link getShortU16Encoder}\n * @see {@link getShortU16Decoder}\n */\nexport const getShortU16Codec = (): VariableSizeCodec<bigint | number, number> =>\n    combineCodec(getShortU16Encoder(), getShortU16Decoder());\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 128-bit unsigned integers (`u128`).\n *\n * This encoder serializes `u128` values using sixteen bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU128Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeEncoder<number | bigint, 16>` for encoding `u128` values.\n *\n * @example\n * Encoding a `u128` value.\n * ```ts\n * const encoder = getU128Encoder();\n * const bytes = encoder.encode(42n); // 0x2a000000000000000000000000000000\n * ```\n *\n * @see {@link getU128Codec}\n */\nexport const getU128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'u128',\n        range: [0n, BigInt('0xffffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\n/**\n * Returns a decoder for 128-bit unsigned integers (`u128`).\n *\n * This decoder deserializes `u128` values from sixteen bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU128Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeDecoder<bigint, 16>` for decoding `u128` values.\n *\n * @example\n * Decoding a `u128` value.\n * ```ts\n * const decoder = getU128Decoder();\n * const value = decoder.decode(new Uint8Array([0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])); // 42n\n * ```\n *\n * @see {@link getU128Codec}\n */\nexport const getU128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigUint64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'u128',\n        size: 16,\n    });\n\n/**\n * Returns a codec for encoding and decoding 128-bit unsigned integers (`u128`).\n *\n * This codec serializes `u128` values using 16 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `bigint`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, bigint, 16>` for encoding and decoding `u128` values.\n *\n * @example\n * Encoding and decoding a `u128` value.\n * ```ts\n * const codec = getU128Codec();\n * const bytes = codec.encode(42); // 0x2a000000000000000000000000000000\n * const value = codec.decode(bytes); // 42n\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getU128Codec({ endian: Endian.Big });\n * const bytes = codec.encode(42); // 0x0000000000000000000000000000002a\n * ```\n *\n * @remarks\n * This codec supports values between `0` and `2^128 - 1`.\n * Since JavaScript `number` cannot safely represent values beyond `2^53 - 1`, the decoded value is always a `bigint`.\n *\n * - If you need a smaller unsigned integer, consider using {@link getU64Codec} or {@link getU32Codec}.\n * - If you need signed integers, consider using {@link getI128Codec}.\n *\n * Separate {@link getU128Encoder} and {@link getU128Decoder} functions are available.\n *\n * ```ts\n * const bytes = getU128Encoder().encode(42);\n * const value = getU128Decoder().decode(bytes);\n * ```\n *\n * @see {@link getU128Encoder}\n * @see {@link getU128Decoder}\n */\nexport const getU128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getU128Encoder(config), getU128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 16-bit unsigned integers (`u16`).\n *\n * This encoder serializes `u16` values using two bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU16Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeEncoder<number | bigint, 2>` for encoding `u16` values.\n *\n * @example\n * Encoding a `u16` value.\n * ```ts\n * const encoder = getU16Encoder();\n * const bytes = encoder.encode(42); // 0x2a00\n * ```\n *\n * @see {@link getU16Codec}\n */\nexport const getU16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'u16',\n        range: [0, Number('0xffff')],\n        set: (view, value, le) => view.setUint16(0, Number(value), le),\n        size: 2,\n    });\n\n/**\n * Returns a decoder for 16-bit unsigned integers (`u16`).\n *\n * This decoder deserializes `u16` values from two bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU16Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeDecoder<number, 2>` for decoding `u16` values.\n *\n * @example\n * Decoding a `u16` value.\n * ```ts\n * const decoder = getU16Decoder();\n * const value = decoder.decode(new Uint8Array([0x2a, 0x00])); // 42\n * ```\n *\n * @see {@link getU16Codec}\n */\nexport const getU16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint16(0, le),\n        name: 'u16',\n        size: 2,\n    });\n\n/**\n * Returns a codec for encoding and decoding 16-bit unsigned integers (`u16`).\n *\n * This codec serializes `u16` values using two bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeCodec<number | bigint, number, 2>` for encoding and decoding `u16` values.\n *\n * @example\n * Encoding and decoding a `u16` value.\n * ```ts\n * const codec = getU16Codec();\n * const bytes = codec.encode(42); // 0x2a00 (little-endian)\n * const value = codec.decode(bytes); // 42\n * ```\n *\n * @example\n * Storing values in big-endian format.\n * ```ts\n * const codec = getU16Codec({ endian: Endian.Big });\n * const bytes = codec.encode(42); // 0x002a\n * ```\n *\n * @remarks\n * This codec supports values between `0` and `2^16 - 1`.\n * If you need a larger range, consider using {@link getU32Codec} or {@link getU64Codec}.\n * For signed integers, use {@link getI16Codec}.\n *\n * Separate {@link getU16Encoder} and {@link getU16Decoder} functions are available.\n *\n * ```ts\n * const bytes = getU16Encoder().encode(42);\n * const value = getU16Decoder().decode(bytes);\n * ```\n *\n * @see {@link getU16Encoder}\n * @see {@link getU16Decoder}\n */\nexport const getU16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 2> =>\n    combineCodec(getU16Encoder(config), getU16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 32-bit unsigned integers (`u32`).\n *\n * This encoder serializes `u32` values using four bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU32Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeEncoder<bigint | number, 4>` for encoding `u32` values.\n *\n * @example\n * Encoding a `u32` value.\n * ```ts\n * const encoder = getU32Encoder();\n * const bytes = encoder.encode(42); // 0x2a000000\n * ```\n *\n * @see {@link getU32Codec}\n */\nexport const getU32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'u32',\n        range: [0, Number('0xffffffff')],\n        set: (view, value, le) => view.setUint32(0, Number(value), le),\n        size: 4,\n    });\n\n/**\n * Returns a decoder for 32-bit unsigned integers (`u32`).\n *\n * This decoder deserializes `u32` values from four bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * For more details, see {@link getU32Codec}.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeDecoder<number, 4>` for decoding `u32` values.\n *\n * @example\n * Decoding a `u32` value.\n * ```ts\n * const decoder = getU32Decoder();\n * const value = decoder.decode(new Uint8Array([0x2a, 0x00, 0x00, 0x00])); // 42\n * ```\n *\n * @see {@link getU32Codec}\n */\nexport const getU32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint32(0, le),\n        name: 'u32',\n        size: 4,\n    });\n\n/**\n * Returns a codec for encoding and decoding 32-bit unsigned integers (`u32`).\n *\n * This codec serializes `u32` values using four bytes in little-endian format by default.\n * You may specify big-endian storage using the `endian` option.\n *\n * @param config - Optional settings for endianness.\n * @returns A `FixedSizeCodec<bigint | number, number, 4>` for encoding and decoding `u32` values.\n *\n * @example\n * Encoding and decoding a `u32` value.\n * ```ts\n * const codec = getU32Codec();\n * const bytes = codec.encode(42); // 0x2a000000 (little-endian)\n * const value = codec.decode(bytes); // 42\n * ```\n *\n * @example\n * Storing values in big-endian format.\n * ```ts\n * const codec = getU32Codec({ endian: Endian.Big });\n * const bytes = codec.encode(42); // 0x0000002a\n * ```\n *\n * @remarks\n * This codec only supports values between `0` and `2^32 - 1`.\n * If you need a larger range, consider using {@link getU64Codec} or {@link getU128Codec}.\n * For signed integers, use {@link getI32Codec}.\n *\n * Separate {@link getU32Encoder} and {@link getU32Decoder} functions are available.\n *\n * ```ts\n * const bytes = getU32Encoder().encode(42);\n * const value = getU32Decoder().decode(bytes);\n * ```\n *\n * @see {@link getU32Encoder}\n * @see {@link getU32Decoder}\n */\nexport const getU32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getU32Encoder(config), getU32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 64-bit unsigned integers (`u64`).\n *\n * This encoder serializes `u64` values using 8 bytes.\n * Values can be provided as either `number` or `bigint`.\n *\n * For more details, see {@link getU64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeEncoder<number | bigint, 8>` for encoding `u64` values.\n *\n * @example\n * Encoding a `u64` value.\n * ```ts\n * const encoder = getU64Encoder();\n * const bytes = encoder.encode(42); // 0x2a00000000000000\n * ```\n *\n * @see {@link getU64Codec}\n */\nexport const getU64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'u64',\n        range: [0n, BigInt('0xffffffffffffffff')],\n        set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n        size: 8,\n    });\n\n/**\n * Returns a decoder for 64-bit unsigned integers (`u64`).\n *\n * This decoder deserializes `u64` values from 8 bytes.\n * The decoded value is always a `bigint`.\n *\n * For more details, see {@link getU64Codec}.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeDecoder<bigint, 8>` for decoding `u64` values.\n *\n * @example\n * Decoding a `u64` value.\n * ```ts\n * const decoder = getU64Decoder();\n * const value = decoder.decode(new Uint8Array([0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])); // 42n\n * ```\n *\n * @see {@link getU64Codec}\n */\nexport const getU64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigUint64(0, le),\n        name: 'u64',\n        size: 8,\n    });\n\n/**\n * Returns a codec for encoding and decoding 64-bit unsigned integers (`u64`).\n *\n * This codec serializes `u64` values using 8 bytes.\n * Values can be provided as either `number` or `bigint`, but the decoded value is always a `bigint`.\n *\n * @param config - Optional configuration to specify endianness (little by default).\n * @returns A `FixedSizeCodec<number | bigint, bigint, 8>` for encoding and decoding `u64` values.\n *\n * @example\n * Encoding and decoding a `u64` value.\n * ```ts\n * const codec = getU64Codec();\n * const bytes = codec.encode(42); // 0x2a00000000000000\n * const value = codec.decode(bytes); // 42n\n * ```\n *\n * @example\n * Using big-endian encoding.\n * ```ts\n * const codec = getU64Codec({ endian: Endian.Big });\n * const bytes = codec.encode(42); // 0x000000000000002a\n * ```\n *\n * @remarks\n * This codec supports values between `0` and `2^64 - 1`.\n * Since JavaScript `number` cannot safely represent values beyond `2^53 - 1`, the decoded value is always a `bigint`.\n *\n * - If you need a smaller unsigned integer, consider using {@link getU32Codec} or {@link getU16Codec}.\n * - If you need a larger unsigned integer, consider using {@link getU128Codec}.\n * - If you need signed integers, consider using {@link getI64Codec}.\n *\n * Separate {@link getU64Encoder} and {@link getU64Decoder} functions are available.\n *\n * ```ts\n * const bytes = getU64Encoder().encode(42);\n * const value = getU64Decoder().decode(bytes);\n * ```\n *\n * @see {@link getU64Encoder}\n * @see {@link getU64Decoder}\n */\nexport const getU64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getU64Encoder(config), getU64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\n/**\n * Returns an encoder for 8-bit unsigned integers (`u8`).\n *\n * This encoder serializes `u8` values using a single byte.\n *\n * For more details, see {@link getU8Codec}.\n *\n * @returns A `FixedSizeEncoder<number | bigint, 1>` for encoding `u8` values.\n *\n * @example\n * Encoding a `u8` value.\n * ```ts\n * const encoder = getU8Encoder();\n * const bytes = encoder.encode(42); // 0x2a\n * ```\n *\n * @see {@link getU8Codec}\n */\nexport const getU8Encoder = (): FixedSizeEncoder<bigint | number, 1> =>\n    numberEncoderFactory({\n        name: 'u8',\n        range: [0, Number('0xff')],\n        set: (view, value) => view.setUint8(0, Number(value)),\n        size: 1,\n    });\n\n/**\n * Returns a decoder for 8-bit unsigned integers (`u8`).\n *\n * This decoder deserializes `u8` values from a single byte.\n *\n * For more details, see {@link getU8Codec}.\n *\n * @returns A `FixedSizeDecoder<number, 1>` for decoding `u8` values.\n *\n * @example\n * Decoding a `u8` value.\n * ```ts\n * const decoder = getU8Decoder();\n * const value = decoder.decode(new Uint8Array([0xff])); // 255\n * ```\n *\n * @see {@link getU8Codec}\n */\nexport const getU8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getUint8(0),\n        name: 'u8',\n        size: 1,\n    });\n\n/**\n * Returns a codec for encoding and decoding 8-bit unsigned integers (`u8`).\n *\n * This codec serializes `u8` values using a single byte.\n *\n * @returns A `FixedSizeCodec<number | bigint, number, 1>` for encoding and decoding `u8` values.\n *\n * @example\n * Encoding and decoding a `u8` value.\n * ```ts\n * const codec = getU8Codec();\n * const bytes = codec.encode(255); // 0xff\n * const value = codec.decode(bytes); // 255\n * ```\n *\n * @remarks\n * This codec supports values between `0` and `2^8 - 1` (0 to 255).\n * If you need larger integers, consider using {@link getU16Codec}, {@link getU32Codec}, or {@link getU64Codec}.\n * For signed integers, use {@link getI8Codec}.\n *\n * Separate {@link getU8Encoder} and {@link getU8Decoder} functions are available.\n *\n * ```ts\n * const bytes = getU8Encoder().encode(42);\n * const value = getU8Decoder().decode(bytes);\n * ```\n *\n * @see {@link getU8Encoder}\n * @see {@link getU8Decoder}\n */\nexport const getU8Codec = (): FixedSizeCodec<bigint | number, number, 1> =>\n    combineCodec(getU8Encoder(), getU8Decoder());\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\n\nvar DataView = globalThis.DataView;\n\nmodule.exports = function (O) {\n  if (!NATIVE_ARRAY_BUFFER || arrayBufferByteLength(O) !== 0) return false;\n  try {\n    // eslint-disable-next-line no-new -- thrower\n    new DataView(O);\n    return false;\n  } catch (error) {\n    return true;\n  }\n};\n",null,null,null,null,null,null,"/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",null,"/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.at\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar iterate = require('../internals/iterate');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\nvar push = [].push;\n\n// `Iterator.prototype.toArray` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.toarray\n$({ target: 'Iterator', proto: true, real: true }, {\n  toArray: function toArray() {\n    var result = [];\n    iterate(getIteratorDirect(anObject(this)), push, { that: result, IS_RECORD: true });\n    return result;\n  }\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findLast = require('../internals/array-iteration-from-last').findLast;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findLast` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findlast\nexportTypedArrayMethod('findLast', function findLast(predicate /* , thisArg */) {\n  return $findLast(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ findLast, findLastIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_FIND_LAST_INDEX = TYPE === 1;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var index = lengthOfArrayLike(self);\n    var boundFunction = bind(callbackfn, that);\n    var value, result;\n    while (index-- > 0) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (result) switch (TYPE) {\n        case 0: return value; // findLast\n        case 1: return index; // findLastIndex\n      }\n    }\n    return IS_FIND_LAST_INDEX ? -1 : undefined;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.findLast` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLast: createMethod(0),\n  // `Array.prototype.findLastIndex` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLastIndex: createMethod(1)\n};\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import * as BufferLayout from \"buffer-layout\";\r\n\r\n/**\r\n * Layout for a public key\r\n */\r\nconst publicKey = (property = \"publicKey\") => {\r\n  return BufferLayout.blob(32, property);\r\n};\r\n\r\n/**\r\n * Layout for a 64bit unsigned value\r\n */\r\nconst uint64 = (property = \"uint64\") => {\r\n  return BufferLayout.blob(8, property);\r\n};\r\n\r\nexport const ESCROW_ACCOUNT_DATA_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.u8(\"isInitialized\"),\r\n  publicKey(\"initializerPubkey\"),\r\n  publicKey(\"initializerTempTokenAccountPubkey\"),\r\n  publicKey(\"initializerReceivingTokenAccountPubkey\"),\r\n  uint64(\"expectedAmount\"),\r\n]);\r\n\r\nexport interface EscrowLayout {\r\n  isInitialized: number,\r\n  initializerPubkey: Uint8Array,\r\n  initializerReceivingTokenAccountPubkey: Uint8Array,\r\n  initializerTempTokenAccountPubkey: Uint8Array,\r\n  expectedAmount: Uint8Array\r\n}\r\n","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\n\"use strict\"\n\nimport { EventEmitter } from \"eventemitter3\"\n\nimport {\n    BrowserWebSocketType,\n    NodeWebSocketType,\n    IWSClientAdditionalOptions,\n} from \"./client.types.js\"\n\nclass WebSocketBrowserImpl extends EventEmitter\n{\n    socket: BrowserWebSocketType\n\n    /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n    constructor(address: string, options: {}, protocols?: string | string[])\n    {\n        super()\n\n        this.socket = new window.WebSocket(address, protocols)\n\n        this.socket.onopen = () => this.emit(\"open\")\n        this.socket.onmessage = (event) => this.emit(\"message\", event.data)\n        this.socket.onerror = (error) => this.emit(\"error\", error)\n        this.socket.onclose = (event) =>\n        {\n            this.emit(\"close\", event.code, event.reason)\n        }\n    }\n\n    /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n    send(\n        data: Parameters<BrowserWebSocketType[\"send\"]>[0],\n        optionsOrCallback: (\n      error?: Error\n    ) => void | Parameters<NodeWebSocketType[\"send\"]>[1],\n        callback?: () => void\n    )\n    {\n        const cb = callback || optionsOrCallback\n\n        try\n        {\n            this.socket.send(data)\n            cb()\n        }\n        catch (error)\n        {\n            cb(error)\n        }\n    }\n\n    /**\n   * Closes an underlying socket\n   * @method\n   * @param {Number} code - status code explaining why the connection is being closed\n   * @param {String} reason - a description why the connection is closing\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    close(code?: number, reason?: string)\n    {\n        this.socket.close(code, reason)\n    }\n\n    addEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (ev: WebSocketEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void\n    {\n        this.socket.addEventListener(type, listener, options)\n    }\n}\n\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nexport function WebSocket(\n    address: string,\n    options: IWSClientAdditionalOptions\n)\n{\n    return new WebSocketBrowserImpl(address, options)\n}\n","\"use strict\"\n\nexport interface DataPack<\n  T,\n  R extends string | ArrayBufferLike | Blob | ArrayBufferView\n> {\n  encode(value: T): R;\n  decode(value: R): T;\n}\n\nexport class DefaultDataPack implements DataPack<Object, string>\n{\n    encode(value: Object): string\n    {\n        return JSON.stringify(value)\n    }\n\n    decode(value: string): Object\n    {\n        return JSON.parse(value)\n    }\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\n\"use strict\"\n\nimport NodeWebSocket from \"ws\"\nimport { EventEmitter } from \"eventemitter3\"\nimport {\n    ICommonWebSocket,\n    IWSClientAdditionalOptions,\n    NodeWebSocketType,\n    ICommonWebSocketFactory,\n} from \"./client/client.types.js\"\n\nimport { DataPack, DefaultDataPack } from \"./utils.js\"\n\ninterface IQueueElement {\n  promise: [\n    Parameters<ConstructorParameters<typeof Promise>[0]>[0],\n    Parameters<ConstructorParameters<typeof Promise>[0]>[1]\n  ];\n  timeout?: ReturnType<typeof setTimeout>;\n}\n\nexport interface IQueue {\n  [x: number | string]: IQueueElement;\n}\n\nexport interface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\nexport class CommonClient extends EventEmitter\n{\n    private address: string\n    private rpc_id: number | string\n    private queue: IQueue\n    private options: IWSClientAdditionalOptions & NodeWebSocket.ClientOptions\n    private autoconnect: boolean\n    private ready: boolean\n    private reconnect: boolean\n    private reconnect_timer_id: NodeJS.Timeout\n    private reconnect_interval: number\n    private max_reconnects: number\n    private rest_options: IWSClientAdditionalOptions &\n    NodeWebSocket.ClientOptions\n    private current_reconnects: number\n    private generate_request_id: (\n    method: string,\n    params: object | Array<any>\n  ) => number | string\n    private socket: ICommonWebSocket\n    private webSocketFactory: ICommonWebSocketFactory\n    private dataPack: DataPack<object, string>\n\n    /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n    constructor(\n        webSocketFactory: ICommonWebSocketFactory,\n        address = \"ws://localhost:8080\",\n        {\n            autoconnect = true,\n            reconnect = true,\n            reconnect_interval = 1000,\n            max_reconnects = 5,\n            ...rest_options\n        } = {},\n        generate_request_id?: (\n      method: string,\n      params: object | Array<any>\n    ) => number | string,\n        dataPack?: DataPack<object, string>\n    )\n    {\n        super()\n\n        this.webSocketFactory = webSocketFactory\n\n        this.queue = {}\n        this.rpc_id = 0\n\n        this.address = address\n        this.autoconnect = autoconnect\n        this.ready = false\n        this.reconnect = reconnect\n        this.reconnect_timer_id = undefined\n        this.reconnect_interval = reconnect_interval\n        this.max_reconnects = max_reconnects\n        this.rest_options = rest_options\n        this.current_reconnects = 0\n        this.generate_request_id = generate_request_id || (() => typeof this.rpc_id === \"number\"\n            ? ++this.rpc_id\n            : Number(this.rpc_id) + 1)\n\n        if (!dataPack) this.dataPack = new DefaultDataPack()\n        else this.dataPack = dataPack\n\n        if (this.autoconnect)\n            this._connect(this.address, {\n                autoconnect: this.autoconnect,\n                reconnect: this.reconnect,\n                reconnect_interval: this.reconnect_interval,\n                max_reconnects: this.max_reconnects,\n                ...this.rest_options,\n            })\n    }\n\n    /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n    connect()\n    {\n        if (this.socket) return\n\n        this._connect(this.address, {\n            autoconnect: this.autoconnect,\n            reconnect: this.reconnect,\n            reconnect_interval: this.reconnect_interval,\n            max_reconnects: this.max_reconnects,\n            ...this.rest_options,\n        })\n    }\n\n    /**\n   * Calls a registered RPC method on server.\n   * @method\n   * @param {String} method - RPC method name\n   * @param {Object|Array} params - optional method parameters\n   * @param {Number} timeout - RPC reply timeout value\n   * @param {Object} ws_opts - options passed to ws\n   * @return {Promise}\n   */\n    call(\n        method: string,\n        params?: IWSRequestParams,\n        timeout?: number,\n        ws_opts?: Parameters<NodeWebSocketType[\"send\"]>[1]\n    )\n    {\n        if (!ws_opts && \"object\" === typeof timeout)\n        {\n            ws_opts = timeout\n            timeout = null\n        }\n\n        return new Promise((resolve, reject) =>\n        {\n            if (!this.ready) return reject(new Error(\"socket not ready\"))\n\n            const rpc_id = this.generate_request_id(method, params)\n\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params: params || undefined,\n                id: rpc_id,\n            }\n\n            this.socket.send(this.dataPack.encode(message), ws_opts, (error) =>\n            {\n                if (error) return reject(error)\n\n                this.queue[rpc_id] = { promise: [resolve, reject] }\n\n                if (timeout)\n                {\n                    this.queue[rpc_id].timeout = setTimeout(() =>\n                    {\n                        delete this.queue[rpc_id]\n                        reject(new Error(\"reply timeout\"))\n                    }, timeout)\n                }\n            })\n        })\n    }\n\n    /**\n   * Logins with the other side of the connection.\n   * @method\n   * @param {Object} params - Login credentials object\n   * @return {Promise}\n   */\n    async login(params: IWSRequestParams)\n    {\n        const resp = await this.call(\"rpc.login\", params)\n\n        if (!resp) throw new Error(\"authentication failed\")\n\n        return resp\n    }\n\n    /**\n   * Fetches a list of client's methods registered on server.\n   * @method\n   * @return {Array}\n   */\n    async listMethods()\n    {\n        return await this.call(\"__listMethods\")\n    }\n\n    /**\n   * Sends a JSON-RPC 2.0 notification to server.\n   * @method\n   * @param {String} method - RPC method name\n   * @param {Object} params - optional method parameters\n   * @return {Promise}\n   */\n    notify(method: string, params?: IWSRequestParams)\n    {\n        return new Promise<void>((resolve, reject) =>\n        {\n            if (!this.ready) return reject(new Error(\"socket not ready\"))\n\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params,\n            }\n\n            this.socket.send(this.dataPack.encode(message), (error) =>\n            {\n                if (error) return reject(error)\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n   * Subscribes for a defined event.\n   * @method\n   * @param {String|Array} event - event name\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    async subscribe(event: string | Array<string>)\n    {\n        if (typeof event === \"string\") event = [event]\n\n        const result = await this.call(\"rpc.on\", event)\n\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\n                \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n            )\n\n        return result\n    }\n\n    /**\n   * Unsubscribes from a defined event.\n   * @method\n   * @param {String|Array} event - event name\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    async unsubscribe(event: string | Array<string>)\n    {\n        if (typeof event === \"string\") event = [event]\n\n        const result = await this.call(\"rpc.off\", event)\n\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed unsubscribing from an event with: \" + result)\n\n        return result\n    }\n\n    /**\n   * Closes a WebSocket connection gracefully.\n   * @method\n   * @param {Number} code - socket close code\n   * @param {String} data - optional data to be sent before closing\n   * @return {Undefined}\n   */\n    close(code?: number, data?: string)\n    {\n        this.socket.close(code || 1000, data)\n    }\n\n    /**\n   * Enable / disable automatic reconnection.\n   * @method\n   * @param {Boolean} reconnect - enable / disable reconnection\n   * @return {Undefined}\n   */\n    setAutoReconnect(reconnect: boolean)\n    {\n        this.reconnect = reconnect\n    }\n\n    /**\n   * Set the interval between reconnection attempts.\n   * @method\n   * @param {Number} interval - reconnection interval in milliseconds\n   * @return {Undefined}\n   */\n    setReconnectInterval(interval: number)\n    {\n        this.reconnect_interval = interval\n    }\n\n    /**\n   * Set the maximum number of reconnection attempts.\n   * @method\n   * @param {Number} max_reconnects - maximum reconnection attempts\n   * @return {Undefined}\n   */\n    setMaxReconnects(max_reconnects: number)\n    {\n        this.max_reconnects = max_reconnects\n    }\n\n    /**\n   * Connection/Message handler.\n   * @method\n   * @private\n   * @param {String} address - WebSocket API address\n   * @param {Object} options - ws options object\n   * @return {Undefined}\n   */\n    private _connect(\n        address: string,\n        options: IWSClientAdditionalOptions & NodeWebSocket.ClientOptions\n    )\n    {\n        clearTimeout(this.reconnect_timer_id)\n        this.socket = this.webSocketFactory(address, options)\n\n        this.socket.addEventListener(\"open\", () =>\n        {\n            this.ready = true\n            this.emit(\"open\")\n            this.current_reconnects = 0\n        })\n\n        this.socket.addEventListener(\"message\", ({ data: message }) =>\n        {\n            if (message instanceof ArrayBuffer)\n                message = Buffer.from(message).toString()\n\n            try\n            {\n                message = this.dataPack.decode(message)\n            }\n            catch (error)\n            {\n                return\n            }\n\n            // check if any listeners are attached and forward event\n            if (message.notification && this.listeners(message.notification).length)\n            {\n                if (!Object.keys(message.params).length)\n                    return this.emit(message.notification)\n\n                const args = [message.notification]\n\n                if (message.params.constructor === Object) args.push(message.params)\n                // using for-loop instead of unshift/spread because performance is better\n                else\n                    for (let i = 0; i < message.params.length; i++)\n                        args.push(message.params[i])\n\n                // run as microtask so that pending queue messages are resolved first\n                // eslint-disable-next-line prefer-spread\n                return Promise.resolve().then(() =>\n                {\n                    // eslint-disable-next-line prefer-spread\n                    this.emit.apply(this, args)\n                })\n            }\n\n            if (!this.queue[message.id])\n            {\n                // general JSON RPC 2.0 events\n                if (message.method)\n                {\n                    // run as microtask so that pending queue messages are resolved first\n                    return Promise.resolve().then(() =>\n                    {\n                        this.emit(message.method, message?.params)\n                    })\n                }\n\n                return\n            }\n\n            // reject early since server's response is invalid\n            if (\"error\" in message === \"result\" in message)\n                this.queue[message.id].promise[1](\n                    new Error(\n                        \"Server response malformed. Response must include either \\\"result\\\"\" +\n              \" or \\\"error\\\", but not both.\"\n                    )\n                )\n\n            if (this.queue[message.id].timeout)\n                clearTimeout(this.queue[message.id].timeout)\n\n            if (message.error) this.queue[message.id].promise[1](message.error)\n            else this.queue[message.id].promise[0](message.result)\n\n            delete this.queue[message.id]\n        })\n\n        this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error))\n\n        this.socket.addEventListener(\"close\", ({ code, reason }) =>\n        {\n            if (this.ready)\n            // Delay close event until internal state is updated\n                setTimeout(() => this.emit(\"close\", code, reason), 0)\n\n            this.ready = false\n            this.socket = undefined\n\n            if (code === 1000) return\n\n            this.current_reconnects++\n\n            if (\n                this.reconnect &&\n        (this.max_reconnects > this.current_reconnects ||\n          this.max_reconnects === 0)\n            )\n                this.reconnect_timer_id = setTimeout(\n                    () => this._connect(address, options),\n                    this.reconnect_interval\n                )\n        })\n    }\n}\n","\"use strict\"\n\nimport { WebSocket } from \"./lib/client/websocket.browser.js\"\nimport { CommonClient } from \"./lib/client.js\"\nimport { IWSClientAdditionalOptions } from \"./lib/client/client.types.js\"\n\nexport class Client extends CommonClient\n{\n    constructor(\n        address = \"ws://localhost:8080\",\n        {\n            autoconnect = true,\n            reconnect = true,\n            reconnect_interval = 1000,\n            max_reconnects = 5,\n        }: IWSClientAdditionalOptions = {},\n        generate_request_id?: (\n      method: string,\n      params: object | Array<any>\n    ) => number | string\n    )\n    {\n        super(\n            WebSocket,\n            address,\n            {\n                autoconnect,\n                reconnect,\n                reconnect_interval,\n                max_reconnects,\n            },\n            generate_request_id\n        )\n    }\n}\n\nexport * from \"./lib/client.js\"\nexport * from \"./lib/client/websocket.browser.js\"\nexport * from \"./lib/client/client.types.js\"\nexport * from \"./lib/utils.js\"\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };",null,null,null,null,"'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar classof = require('../internals/classof-raw');\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar TypeError = globalThis.TypeError;\n\n// Includes\n// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).\n// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.\nmodule.exports = ArrayBuffer && uncurryThisAccessor(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {\n  if (classof(O) !== 'ArrayBuffer') throw new TypeError('ArrayBuffer expected');\n  return O.byteLength;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = new Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in new Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(globalThis, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","'use strict';\nvar classof = require('../internals/classof');\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\nmodule.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n",null,null,"'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/ecma262/#sec-array.prototype.with\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n",null,"'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar fails = require('../internals/fails');\nvar V8 = require('../internals/environment-v8-version');\nvar ENVIRONMENT = require('../internals/environment');\n\nvar structuredClone = globalThis.structuredClone;\n\nmodule.exports = !!structuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((ENVIRONMENT === 'DENO' && V8 > 92) || (ENVIRONMENT === 'NODE' && V8 > 94) || (ENVIRONMENT === 'BROWSER' && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = structuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength !== 0 || clone.byteLength !== 8;\n});\n",null,"'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// https://tc39.es/ecma262/#sec-array.prototype.toreversed\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nmodule.exports = function (O, C) {\n  var len = lengthOfArrayLike(O);\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = O[len - k - 1];\n  return A;\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nmodule.exports = function (Constructor, list, $length) {\n  var index = 0;\n  var length = arguments.length > 2 ? $length : lengthOfArrayLike(list);\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",null,"'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = globalThis.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = globalThis.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = globalThis.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(globalThis.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = globalThis[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (globalThis[NAME]) {\n    createNonEnumerableProperty(globalThis[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduceRight = require('../internals/array-reduce').right;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/environment-v8-version');\nvar IS_NODE = require('../internals/environment-is-node');\n\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\nvar FORCED = CHROME_BUG || !arrayMethodIsStrict('reduceRight');\n\n// `Array.prototype.reduceRight` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduceright\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw new $RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n",null],"sourceRoot":""}